# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/aggregate.txt:3
msgid "aggregate"
msgstr ""

#: ../source/reference/command/aggregate.txt:11
msgid ""
"Performs aggregation operation using the :doc:`aggregation pipeline "
"</reference/operator/aggregation-pipeline>`. The pipeline allows users to "
"process data from a collection with a sequence of stage-based manipulations."
msgstr ""

#: ../source/reference/command/aggregate.txt:20
msgid ""
"The :dbcommand:`aggregate` command adds support for returning a cursor, "
"supports the ``explain`` option, and enhances its sort operations with an "
"external sort facility."
msgstr ""

#: ../source/reference/command/aggregate.txt:24
msgid ""
":doc:`aggregation pipeline </reference/operator/aggregation-pipeline>` "
"introduces the :pipeline:`$out` operator to allow :dbcommand:`aggregate` "
"command to store results to a collection."
msgstr ""

#: ../source/reference/command/aggregate.txt:29
msgid "The command has following syntax:"
msgstr ""

#: ../source/reference/command/aggregate.txt:43
msgid ""
"The :dbcommand:`aggregate` command takes the following fields as arguments:"
msgstr ""

#: ../source/reference/command/aggregate.txt:48
msgid ""
"For more information about the aggregation pipeline :doc:`/core/aggregation-"
"pipeline`, :doc:`/reference/aggregation`, and :doc:`/core/aggregation-"
"pipeline-limits`."
msgstr ""

#: ../source/reference/command/aggregate.txt:53
msgid "Example"
msgstr ""

#: ../source/reference/command/aggregate.txt:56
msgid "Aggregate Data with Multi-Stage Pipeline"
msgstr ""

#: ../source/reference/command/aggregate.txt:58
msgid "A collection ``articles`` contains documents such as the following:"
msgstr ""

#: ../source/reference/command/aggregate.txt:69
msgid ""
"The following example performs an :dbcommand:`aggregate` operation on the "
"``articles`` collection to calculate the count of each distinct element in "
"the ``tags`` array that appears in the collection."
msgstr ""

#: ../source/reference/command/aggregate.txt:89
msgid ""
"In the :program:`mongo` shell, this operation can use the "
":method:`~db.collection.aggregate()` helper as in the following:"
msgstr ""

#: ../source/reference/command/aggregate.txt:106
msgid ""
"In 2.6 and later, the :method:`~db.collection.aggregate()` helper always "
"returns a cursor."
msgstr ""

#: ../source/includes/fact-agg-helper-exception.rst:1
msgid ""
"If an error occurs, the :method:`~db.collection.aggregate()` helper throws "
"an exception. In previous versions, the helper returned a document with the "
"error message and code, and ``ok`` status field not equal to ``1``, same as "
"the :dbcommand:`aggregate` command."
msgstr ""

#: ../source/reference/command/aggregate.txt:112
msgid "Return Information on the Aggregation Operation"
msgstr ""

#: ../source/reference/command/aggregate.txt:114
msgid ""
"The following aggregation operation sets the optional field ``explain`` to "
"``true`` to return information about the aggregation operation."
msgstr ""

#: ../source/reference/command/aggregate.txt:128
msgid ""
"The intended readers of the ``explain`` output document are humans, and not "
"machines, and the output format is subject to change between releases."
msgstr ""

#: ../source/reference/command/aggregate.txt:132
msgid ":method:`db.collection.aggregate()` method"
msgstr ""

#: ../source/reference/command/aggregate.txt:135
msgid "Aggregate Data using External Sort"
msgstr ""

#: ../source/reference/command/aggregate.txt:137
msgid ""
"Aggregation pipeline stages have :ref:`maximum memory use limit <agg-memory-"
"restrictions>`. To handle large datasets, set ``allowDiskUse`` option to "
"``true`` to enable writing data to temporary files, as in the following "
"example:"
msgstr ""

#: ../source/reference/command/aggregate.txt:154
#: ../source/reference/command/aggregate.txt:205
msgid ":method:`db.collection.aggregate()`"
msgstr ""

#: ../source/reference/command/aggregate.txt:158
msgid "Aggregate Command Returns a Cursor"
msgstr ""

#: ../source/reference/command/aggregate.txt:161
msgid ""
"Using the :dbcommand:`aggregate` command to return a cursor is a low-level "
"operation, intended for authors of drivers. Most users should use the "
":method:`db.collection.aggregate()` helper provided in the :program:`mongo` "
"shell or in their driver. In 2.6 and later, the "
":method:`~db.collection.aggregate()` helper always returns a cursor."
msgstr ""

#: ../source/reference/command/aggregate.txt:168
msgid ""
"The following command returns a document that contains results with which to"
" instantiate a cursor object."
msgstr ""

#: ../source/reference/command/aggregate.txt:183
msgid ""
"To specify an *initial* batch size, specify the ``batchSize`` in the "
"``cursor`` field, as in the following example:"
msgstr ""

#: ../source/reference/command/aggregate.txt:198
msgid ""
"The ``{batchSize: 0 }`` document specifies the size of the *initial* batch "
"size only. Specify subsequent batch sizes to :ref:`OP_GET_MORE <wire-op-get-"
"more>` operations as with other MongoDB cursors. A ``batchSize`` of ``0`` "
"means an empty first batch and is useful if you want to quickly get back a "
"cursor or failure message, without doing significant server-side work."
msgstr ""
