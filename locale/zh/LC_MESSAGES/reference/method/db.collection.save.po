# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.save.txt:3
msgid "db.collection.save()"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:12
msgid ""
"Updates an existing document or inserts a new document, depending on its "
"``document`` parameter."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:15
msgid "The :method:`~db.collection.save()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:30
msgid ""
"The :method:`~db.collection.save()` returns an object that contains the "
"status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:34
msgid ""
"A :ref:`writeresults-save` object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:38
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:43
msgid "Safe Writes"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:47
msgid ""
"The :method:`~db.collection.save()` method uses either the "
":dbcommand:`insert` or the :dbcommand:`update` command, which use the "
"default write concern. To specify a different write concern, include the "
"write concern in the options parameter."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:53
msgid "Insert"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:55
msgid ""
"If the document does **not** contain an :term:`_id` field, then the "
":method:`~db.collection.save()` method calls the "
":method:`~db.collection.insert()` method. During the operation, the "
":program:`mongo` shell will create an :doc:`/reference/object-id` and assign"
" it to the ``_id`` field."
msgstr ""

#: ../source/includes/note-insert-id-field.rst:3
msgid ""
"Most MongoDB driver clients will include the ``_id`` field and generate an "
"``ObjectId`` before sending the insert operation to MongoDB; however, if the"
" client sends a document without an ``_id`` field, the :program:`mongod` "
"will add the ``_id`` field and generate the ``ObjectId``."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:64
msgid "Update"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:66
msgid ""
"If the document contains an :term:`_id` field, then the "
":method:`~db.collection.save()` method is equivalent to an update with the "
":ref:`upsert option <upsert-parameter>` set to ``true`` and the query "
"predicate on the ``_id`` field."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:74
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:79
msgid "Save a New Document without Specifying an ``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:81
msgid ""
"In the following example, :method:`~db.collection.save()` method performs an"
" insert since the document passed to the method does not contain the ``_id``"
" field:"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:89
msgid ""
"During the insert, :program:`mongod` will create the ``_id`` field with a "
"unique :doc:`/reference/object-id` value, as verified by the inserted "
"document:"
msgstr ""

#: ../source/includes/fact-object-id-may-differ.rst:1
msgid ""
"The ``ObjectId`` values are specific to the machine and time when the "
"operation is run. As such, your values may differ from those in the example."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:102
msgid "Save a New Document Specifying an ``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:104
msgid ""
"In the following example, :method:`~db.collection.save()` performs an update"
" with ``upsert:true`` since the document contains an ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:111
msgid ""
"Because the ``_id`` field holds a value that *does not* exist in the "
"collection, the update operation results in an insertion of the document. "
"The results of these operations are identical to an :ref:`update() method "
"with the upsert option <upsert-parameter>` set to ``true``."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:117
msgid ""
"The operation results in the following new document in the ``products`` "
"collection:"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:125
msgid "Replace an Existing Document"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:127
msgid "The ``products`` collection contains the following document:"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:133
msgid ""
"The :method:`~db.collection.save()` method performs an update with "
"``upsert:true`` since the document contains an ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:140
msgid ""
"Because the ``_id`` field holds a value that exists in the collection, the "
"operation performs an update to replace the document and results in the "
"following document:"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:149
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:151
msgid ""
"The following operation to a replica set specifies a :doc:`write concern "
"</reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of "
"5000 milliseconds such that the method returns after the write propagates to"
" a majority of the replica set members or the method times out after 5 "
"seconds."
msgstr ""

#: ../source/reference/method/db.collection.save.txt:167
msgid "WriteResult"
msgstr ""

#: ../source/reference/method/db.collection.save.txt:171
msgid ""
"The :method:`~db.collection.save()` returns a :method:`WriteResult` object "
"that contains the status of the insert or update operation. See "
":ref:`WriteResult for insert <writeresults-insert>` and :ref:`WriteResult "
"for update <writeresults-update>` for details."
msgstr ""
