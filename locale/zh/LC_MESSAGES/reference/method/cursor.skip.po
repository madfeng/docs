# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/cursor.skip.txt:3
msgid "cursor.skip()"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:9
msgid ""
"Call the :method:`cursor.skip()` method on a cursor to control where MongoDB"
" begins returning results. This approach may be useful in implementing "
"\"paged\" results."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:15
msgid ""
"You must apply :method:`cursor.skip()` to the cursor before retrieving any "
"documents from the database."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:18
msgid ""
"Consider the following JavaScript function as an example of the skip "
"function:"
msgstr ""

#: ../source/reference/method/cursor.skip.txt:28
msgid ""
"The :method:`cursor.skip()` method is often expensive because it requires "
"the server to walk from the beginning of the collection or index to get the "
"offset or skip position before beginning to return result. As offset (e.g. "
"``pageNumber`` above) increases, :method:`cursor.skip()` will become slower "
"and more CPU intensive. With larger collections, :method:`cursor.skip()` may"
" become IO bound."
msgstr ""

#: ../source/reference/method/cursor.skip.txt:35
msgid ""
"Consider using range-based pagination for these kinds of tasks. That is, "
"query for a range of objects, using logic within the application to "
"determine the pagination rather than the database itself. This approach "
"features better index utilization, if you do not need to easily jump to a "
"specific page."
msgstr ""
