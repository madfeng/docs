# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:12
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:16
msgid ""
"Modifies and returns a single document. By default, the returned document "
"does not include the modifications made on the update. To return the "
"document with the modifications made on the update, use the ``new`` option. "
"The :method:`~db.collection.findAndModify()` method is a shell helper around"
" the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:23
msgid ""
"The :method:`~db.collection.findAndModify()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:38
msgid ""
"The :method:`db.collection.findAndModify()` method takes a document "
"parameter with the following subdocument fields:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:46
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:48
msgid ""
"The :method:`~db.collection.findAndModify()` method returns either: the pre-"
"modification document or, if ``new: true`` is set, the modified document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:54
msgid ""
"If the query finds no document for ``update`` or ``remove`` operations, "
":method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:58
msgid ""
"If the query finds no document for an ``update`` with an ``upsert`` "
"operation, :method:`~db.collection.findAndModify()` creates a new document. "
"If ``new`` is ``false``, **and** the ``sort`` option is **NOT** specified, "
"the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:63
msgid ""
"If the query finds no document for an ``update`` with an ``upsert`` "
"operation, :method:`~db.collection.findAndModify()` creates a new document. "
"If ``new`` is ``false``, **and** a ``sort`` option, the method returns an "
"empty document ``{}``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:69
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:74
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:76
msgid ""
"When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` "
"option **and** the query field(s) is not uniquely indexed, the method could "
"insert a document multiple times in certain circumstances. For instance, if "
"multiple clients each invoke the method with the same ``query`` condition "
"and these methods complete the ``find`` phase before any of methods perform "
"the ``modify`` phase, these methods could result in the insertion of the "
"same document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:84
msgid ""
"In the following example, no document with the name ``Andy`` exists, and "
"multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:96
msgid ""
"Then, if these clients' :method:`~db.collection.findAndModify()` methods "
"finish the ``query`` phase before any command starts the ``modify`` phase, "
"**and** there is no unique index on the ``name`` field, the commands may all"
" perform an upsert. To prevent this condition, create a :ref:`unique index "
"<index-type-unique>` on the ``name`` field. With the unique index in place, "
"the multiple methods would observe one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:104
msgid ""
"Exactly one :method:`~db.collection.findAndModify()` would successfully "
"insert a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:107
msgid ""
"Zero or more :method:`~db.collection.findAndModify()` methods would update "
"the newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:110
msgid ""
"Zero or more :method:`~db.collection.findAndModify()` methods would fail "
"when they attempted to insert a duplicate. If the method fails due to a "
"unique index constraint violation, you can retry the method. Absent a delete"
" of the document, the retry should not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:117
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:119
msgid ""
"When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` "
"environment, the ``query`` **must** contain the :term:`shard key` for all "
"operations against the shard cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:123
msgid ""
":dbcommand:`findAndModify` operations issued against :program:`mongos` "
"instances for *non-sharded* collections function normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:129
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
msgid ""
"When updating a document, |operation| and the "
":method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
msgid ""
"By default, both operations modify a single document. However, the "
":method:`~db.collection.update()` method with its ``multi`` option can "
"modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
msgid ""
"If multiple documents match the update criteria, for |operation|, you can "
"specify a ``sort`` to provide some measure of control on which document to "
"update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
msgid ""
"With the default behavior of the :method:`~db.collection.update()` method, "
"you cannot specify which single document to update when multiple documents "
"match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
msgid ""
"By default, |operation| method returns |return-object|. To obtain the "
"updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
msgid ""
"The :method:`~db.collection.update()` method returns a :method:`WriteResult`"
" object that contains the status of the operation. To return the updated "
"document, use the :method:`~db.collection.find()` method. However, other "
"updates may have modified the document between your update and the document "
"retrieval. Also, if the update modified only a single document but multiple "
"documents matched, you will need to use additional logic to identify the "
"updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
msgid ""
"You cannot specify a :doc:`write concern </core/write-concern>` to "
"|operation| to override the default write concern whereas, starting in "
"MongoDB 2.6, you can specify a write concern to the "
":method:`~db.collection.update()` method."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:32
msgid ""
"When modifying a *single* document, both |operation| and the "
":method:`~db.collection.update()` method *atomically* update the document. "
"See :doc:`/tutorial/isolate-sequence-of-operations` for more details about "
"interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:137
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:140
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:142
msgid ""
"The following method updates and returns an existing document in the people "
"collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:153
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:155
msgid ""
"The ``query`` finds a document in the ``people`` collection where the "
"``name`` field has the value ``Tom``, the ``state`` field has the value "
"``active`` and the ``rating`` field has a value :operator:`greater than "
"<$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:160
msgid ""
"The ``sort`` orders the results of the query in ascending order. If multiple"
" documents meet the ``query`` condition, the method will select for "
"modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:165
msgid ""
"The update :operator:`increments <$inc>` the value of the ``score`` field by"
" 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:168
msgid ""
"The method returns the original (i.e. pre-modification) document selected "
"for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:181
msgid ""
"To return the modified document, add the ``new:true`` option to the method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:184
msgid ""
"If no document matched the ``query`` condition, the method returns ``null``:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:192
msgid "Upsert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:194
msgid ""
"The following method includes the ``upsert: true`` option for the ``update``"
" operation to either update a matching document or, if no matching document "
"exists, create a new document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:208
msgid ""
"If the method finds a matching document, the method performs an update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:210
msgid ""
"If the method does **not** find a matching document, the method creates a "
"new document. Because the method included the ``sort`` option, it returns an"
" empty document ``{ }`` as the original (pre-modification) document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:219
msgid ""
"If the method did **not** include a ``sort`` option, the method returns "
"``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:227
msgid "Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:229
msgid ""
"The following method includes both the ``upsert: true`` option and the "
"``new:true`` option. The method either updates a matching document and "
"returns the updated document or, if no matching document exists, inserts a "
"document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:235
msgid ""
"In the following example, no document in the ``people`` collection matches "
"the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:248
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:263
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:265
msgid ""
"By including a ``sort`` specification on the ``rating`` field, the following"
" example removes from the ``people`` collection a single document with the "
"``state`` value of ``active`` and the lowest ``rating`` among the matching "
"documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:280
msgid "The method returns the deleted document:"
msgstr ""
