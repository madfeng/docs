# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 777b7dc19e864246a85fa714884bdda4
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:3
msgid "db.collection.initializeOrderedBulkOp()"
msgstr ""

# b1fe142f21694267909918d5c022fe18
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:8
msgid "Definition"
msgstr ""

# f60008558b3f49d5804fce6e2a127ce1
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:16
msgid "new :method:`Bulk()` operations builder object."
msgstr ""

# 9288901fde144fd0b2956522618c97b4
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:44
msgid "Examples"
msgstr ""

# ba8717ff2a6d42d387428ada1650a9f9
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:46
msgid ""
"The following initializes a :method:`Bulk()` operations builder on the "
"``users`` collection, adds a series of write operations, and executes the "
"operations:"
msgstr ""

# ce22f94bbe0a4ea88d6f6c6da0885575
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:62
msgid ":method:`db.collection.initializeUnorderedBulkOp()`"
msgstr ""

# 3175ddd4b7654a57839f87acece6cd50
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:64
msgid ":method:`Bulk.find()`"
msgstr ""

# 82d62f2a97ac4eccb0df9d5b3d4e8ed5
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:66
msgid ":method:`Bulk.find.removeOne()`"
msgstr ""

# 7b686cc74141475885ad34bbfec0eb19
#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:68
msgid ":method:`Bulk.execute()`"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:12
msgid ""
"Initializes and returns a new :method:`Bulk()` operations builder for a "
"collection. The builder constructs an ordered list of write operations that "
"MongoDB executes in bulk."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:19
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:22
msgid "Order of Operation"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:24
msgid ""
"With an *ordered* operations list, MongoDB executes the write operations in "
"the list serially."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:28
msgid "Execution of Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
msgid ""
"When executing an :method:`ordered "
"<db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB "
"groups the operations by the :data:`operation type <batchType>` and "
"contiguity; i.e. *contiguous* operations of the same type are grouped "
"together. For example, if an ordered list has two insert operations followed"
" by an update operation followed by another insert operation, MongoDB groups"
" the operations into three separate groups: first group contains the two "
"insert operations, second group contains the update operation, and the third"
" group contains the last insert operation. This behavior is subject to "
"change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
msgid ""
"Each group of operations can have at most :limit:`1000 operations <Write "
"Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write"
" Command Operation Limit Size>`, MongoDB will divide the group into smaller "
"groups of 1000 or less. For example, if the bulk operations list consists of"
" 2000 insert operations, MongoDB creates 2 groups, each with 1000 "
"operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
msgid ""
"The sizes and grouping mechanics are internal performance details and are "
"subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
msgid ""
"To see how the operations are grouped for a bulk operation execution, call "
":method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid ""
"Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` "
"list of operations on a sharded collection will generally be slower than "
"executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>`"
" list since with an ordered list, each operation must wait for the previous "
"operation to finish."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:37
msgid "Error Handling"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:39
msgid ""
"If an error occurs during the processing of one of the write operations, "
"MongoDB will return without processing any remaining write operations in the"
" list."
msgstr ""

#~ msgid ""
#~ "Initializes and returns a new :method:`Bulk()` operations builder for a "
#~ "collection. The builder constructs an ordered list of write operations that "
#~ "MongoDB executes in bulk. With an *ordered* operations list, MongoDB "
#~ "executes the write operations in the list serially. If an error occurs "
#~ "during the processing of one of the write operations, MongoDB will return "
#~ "without processing any remaining write operations in the list."
#~ msgstr ""
