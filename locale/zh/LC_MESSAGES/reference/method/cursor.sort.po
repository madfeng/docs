# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/cursor.sort.txt:3
msgid "cursor.sort()"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:12
msgid ""
"Specifies the order in which the query returns matching documents. You must "
"apply :method:`~cursor.sort()` to the cursor before retrieving any documents"
" from the database."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:16
msgid "The :method:`~cursor.sort()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:20
msgid ""
"The ``sort`` parameter contains field and value pairs, in the following "
"form:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:27
msgid ""
"The sort document can specify :ref:`ascending or descending sort on existing"
" fields <sort-asc-desc>` or :ref:`sort on computed metadata <sort-"
"metadata>`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:32
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:35
msgid "Result Ordering"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:37
msgid ""
"Unless you specify the :method:`~cursor.sort()` method or use the "
":query:`$near` operator, MongoDB does **not** guarantee the order of query "
"results."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:44
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:46
msgid ""
"Specify in the sort parameter the field or fields to sort by and a value of "
"``1`` or ``-1`` to specify an ascending or descending sort respectively."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:50
msgid ""
"The following sample document specifies a descending sort by the ``age`` "
"field and then an ascending sort by the ``posts`` field:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
msgid ""
"When comparing values of different :term:`BSON` types, MongoDB uses the "
"following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
msgid "Date, Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:17
msgid ""
"MongoDB treats some types as equivalent for comparison purposes. For "
"instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:20
msgid ""
"The comparison treats a non-existent field as it would an empty BSON Object."
" As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }``"
" would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:24
msgid ""
"With arrays, a less-than comparison or an ascending sort compares the "
"smallest element of arrays, and a greater-than comparison or a descending "
"sort compares the largest element of the arrays. As such, when comparing a "
"field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array "
"fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison"
" of an empty array (e.g. ``[ ]``) treats the empty array as less than "
"``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:32
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:34
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:36
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:38
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:62
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:64
msgid ""
"Specify in the sort parameter a new field name for the computed metadata and"
" specify the :projection:`$meta` expression as its value."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:68
msgid ""
"The following sample document specifies a descending sort by the "
"``\"textScore\"`` metadata:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:75
msgid ""
"The specified metadata determines the sort order. For example, the "
"``\"textScore\"`` metadata sorts in descending order. See "
":projection:`$meta` for details."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:80
msgid "Limit Results"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:82
msgid ""
"The sort operation requires that the entire sort be able to complete within "
"32 megabytes."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:85
msgid ""
"When the sort operation consumes more than 32 megabytes, MongoDB returns an "
"error. To avoid this error, either create an index to support the sort "
"operation or use :method:`~cursor.sort()` in conjunction with "
":method:`~cursor.limit()`. The specified limit must result in a number of "
"documents that fall within the 32 megabyte limit."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:91
msgid ""
"For example, if the following sort operation ``stocks_quotes`` exceeds the "
"32 megabyte limit:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:98
msgid "Either create an index to support the sort operation:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:104
msgid ""
"Or use :method:`~cursor.sort()` in conjunction with "
":method:`~cursor.limit()`:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:112
msgid "Examples"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:114
msgid "A collection ``orders`` contain the following documents:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:125
msgid ""
"The following query, which returns all documents from the ``orders`` "
"collection, does not specify a sort order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:132
msgid "The query returns the documents in indeterminate order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:143
msgid ""
"The following query specifies a sort on the ``amount`` field in descending "
"order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:150
msgid ""
"The query returns the following documents, in descending order of "
"``amount``:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:162
msgid ""
"The following query specifies the sort order using the fields from a sub-"
"document ``item``. The query sorts first by the ``category`` field in "
"ascending order, and then within each ``category``, by the ``type`` field in"
" ascending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:171
msgid ""
"The query returns the following documents, ordered first by the ``category``"
" field, and within each category, by the ``type`` field:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:184
msgid "Return in Storage Order"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:186
msgid ""
"The :operator:`$natural` parameter returns items according to their storage "
"order within the collection level extents."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:189
msgid ""
"Typically, the storage order reflects insertion order, *except* when "
"documents relocate because of :ref:`document growth due to updates <data-"
"model-document-growth>` or remove operations free up space which are then "
"taken up by newly inserted documents."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:194
msgid ""
"Consider the sequence of insert operations to the ``trees`` collection:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:203
msgid "The following query returns the documents in the storage order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:209
msgid "The documents return in the following order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:218
msgid ""
"Update a document such that the document outgrows its current allotted "
"space:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:227
msgid "Rerun the query to returns the documents in the storage order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:233
msgid "The documents return in the following storage order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:242
msgid ":operator:`$natural`"
msgstr ""
