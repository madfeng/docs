# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.update.txt:3
msgid "db.collection.update()"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:12
msgid ""
"Modifies an existing document or documents in a collection. The method can "
"modify specific fields of an existing document or documents or replace an "
"existing document entirely, depending on the :ref:`update parameter <update-"
"parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:17
msgid ""
"By default, the :method:`~db.collection.update()` method updates a "
"**single** document. Set the :ref:`multi-parameter` to update all documents "
"that match the query criteria."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:21
msgid "The :method:`~db.collection.update()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:37
msgid ""
"The :method:`~db.collection.update()` method takes the following parameters:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:42
msgid ""
"The :method:`~db.collection.update()` method returns an object that contains"
" the status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:46
msgid ""
"A :ref:`writeresults-update` object that contains the status of the "
"operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:50
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:55
msgid "Safe Writes"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:59
msgid ""
"The :method:`~db.collection.update()` method uses the :dbcommand:`update` "
"command, which uses the default write concern. To specify a different write "
"concern, include the ``writeConcern`` option in the options parameter. See "
":ref:`example-update-write-concern` for an example."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:68
msgid "Update Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:70
msgid ""
"The :method:`~db.collection.update()` method either modifies specific fields"
" in existing documents or replaces an existing document entirely."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:74
#: ../source/reference/method/db.collection.update.txt:213
msgid "Update Specific Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:76
msgid ""
"If the ``<update>`` document contains :ref:`update operator <update-"
"operators>` modifiers, such as those using the :update:`$set` modifier, "
"then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:80
msgid ""
"The ``<update>`` document must contain *only* :ref:`update operator <update-"
"operators>` expressions."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:83
msgid ""
"The :method:`~db.collection.update()` method updates only the corresponding "
"fields in the document. For an example, see :ref:`example-update-specific-"
"fields`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:88
msgid "Replace a Document Entirely"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:90
msgid ""
"If the ``<update>`` document contains *only* ``field:value`` expressions, "
"then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:93
msgid ""
"The :method:`~db.collection.update()` method *replaces* the matching "
"document with the ``<update>`` document. The "
":method:`~db.collection.update()` method *does not* replace the ``_id`` "
"value. For an example, see :ref:`example-update-replace-fields`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:99
msgid ""
":method:`~db.collection.update()` *cannot* :ref:`update multiple documents "
"<multi-parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:105
msgid "Upsert Option"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:108
msgid "Upsert Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:110
msgid ""
"If ``upsert`` is ``true`` and no document matches the query criteria, "
":method:`~db.collection.update()` inserts a *single* document. The update "
"creates the new document with either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:114
msgid "The fields and values of the ``<update>`` parameter, or"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:116
msgid ""
"The fields and values of both the ``<query>`` and ``<update>`` parameters if"
" the ``<update>`` parameter contains *only* :ref:`update operator <update-"
"operators>` expressions. The update creates a base document from the "
"equality clauses in the ``<query>`` parameter, and then applies the update "
"expressions from the ``<update>`` parameter."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:122
msgid ""
"If ``upsert`` is ``true`` and there are documents that match the query "
"criteria, :method:`~db.collection.update()` performs an update."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:125
msgid ":update:`$setOnInsert`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:128
msgid "Use Unique Indexes"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:130
msgid ""
"To avoid inserting the same document more than once, only use ``upsert: "
"true`` if the ``query`` field is uniquely indexed."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:134
msgid ""
"Given a collection named ``people`` where no documents have a ``name`` field"
" that holds the value ``Andy``. Consider when multiple clients issue the "
"following *update* with ``upsert: true`` at the same time:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:151
msgid ""
"If all :method:`~db.collection.update()` operations complete the ``query`` "
"portion before any client successfully inserts data, **and** there is no "
"unique index on the ``name`` field, then each update operation may result in"
" an insert."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:156
msgid ""
"To prevent MongoDB from inserting the same document more than once, create a"
" :ref:`unique index <index-type-unique>` on the ``name`` field. With a "
"unique index, if multiple applications issue the same update with ``upsert: "
"true``, *exactly one* :method:`~db.collection.update()` would successfully "
"insert a new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:163
msgid "The remaining operations would either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:165
msgid "update the newly inserted document, or"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:167
msgid "fail when they attempted to insert a duplicate."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:169
msgid ""
"If the operation fails because of a duplicate index key error, applications "
"may retry the operation which will succeed as an update operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:176
msgid "Multi Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:178
msgid ""
"If ``multi`` is set to ``true``, the :method:`~db.collection.update()` "
"method updates all documents that meet the ``<query>`` criteria. The "
"``multi`` update operation may interleave with other operations, both read "
"and/or write operations. For unsharded collections, you can override this "
"behavior with the :update:`$isolated` operator, which isolates the update "
"operation and disallows yielding during the operation. This isolates the "
"update so that no client can see the updated documents until they are all "
"processed, or an error stops the update operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:188
msgid ""
"If the :ref:`\\<update\\> <update-parameter>` document contains *only* "
"``field:value`` expressions, then :method:`~db.collection.update()` *cannot*"
" update multiple documents."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:192
msgid "For an example, see :ref:`example-update-multi`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:195
msgid "Sharded Collections"
msgstr ""

#: ../source/includes/fact-single-modification-in-sharded-collections.rst:1
msgid ""
"All |single-modification-operation-names| operations for a sharded "
"collection that specify the |single-modification-operation-option| option "
"must include the :term:`shard key` *or* the ``_id`` field in the query "
"specification. |single-modification-operation-names| operations specifying "
"|single-modification-operation-option| in a sharded collection without the "
":term:`shard key` *or* the ``_id`` field return an error."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:203
msgid ":method:`~db.collection.findAndModify()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:208
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:215
msgid ""
"To update specific fields in a document, use :ref:`update operators <update-"
"operators>` in the ``<update>`` parameter. If the ``<update>`` parameter "
"refers to non-existent fields in the current document, the "
":method:`~db.collection.update()` method adds the fields to the document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:221
#: ../source/reference/method/db.collection.update.txt:255
msgid "For example, given a ``books`` collection with the following document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:227
msgid ""
"The following operation adds a ``price`` field to the document and "
"increments the ``stock`` field by ``5``."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:240
msgid "The updated document is now the following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:246
msgid ":update:`$set`, :update:`$inc`, :doc:`/reference/operator/update`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:250
msgid "Update Specific Fields in Embedded Documents"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:252
msgid ""
"Use :term:`dot notation` to update specific fields in embedded documents."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:261
msgid ""
"The following example updates the ``publisher`` field and the ``digit`` "
"field in the ``isbn`` embedded document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:272
msgid "Remove Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:274
msgid ""
"The following operation uses the :update:`$unset` operator to remove the "
"``stock`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:281
msgid ":update:`$unset`, :update:`$rename`, :doc:`/reference/operator/update`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:286
msgid "Replace All Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:288
msgid "Given the following document in the ``books`` collection:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:300
msgid ""
"The following operation passes an ``<update>`` document that contains only "
"field and value pairs, which means the document replaces all the fields in "
"the original document. The operation *does not* replace the ``_id`` value. "
"The operation contains the same value for the ``item`` field in both the "
"``<query>`` and ``<update>`` documents, which means the field does not "
"change:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:314
msgid ""
"The operation creates the following new document. The operation removed the "
"``author`` field and changed the values of the ``price`` and ``stock`` "
"fields:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:330
msgid "Insert a New Document if No Match Exists"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:333
msgid ""
"The following update sets the :ref:`upsert <upsert-parameter>` option to "
"``true`` so that :method:`~db.collection.update()` creates a new document in"
" the ``books`` collection if no document matches the ``<query>`` parameter:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:346
msgid ""
"If no document matches the ``<query>`` parameter, the update operation "
"inserts a document with the fields and values of the ``<update>`` parameter "
"and a new unique ``ObjectId`` for the ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:362
msgid "Update Multiple Documents"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:364
msgid ""
"To update multiple documents, set the ``multi`` option to ``true``. For "
"example, the following operation updates all documents where ``stock`` is "
"less than ``5``:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:379
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:381
msgid ""
"The following operation on a replica set specifies a :doc:`write concern "
"</reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of "
"5000 milliseconds such that the method returns after the write propagates to"
" a majority of the replica set members or the method times out after 5 "
"seconds."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:399
msgid "Combine the ``upsert`` and ``multi`` Options"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:401
msgid "Given a ``books`` collection that includes the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:409
msgid ""
"The following command specifies the ``multi`` parameter to update all "
"documents where ``item`` is ``\"Divine Comedy\"`` and the ``author`` is "
"``\"Dante\"`` and specifies ``upsert: true`` to create a new document if no "
"matching documents are found:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:422
msgid ""
"The operation updates all three matching documents and results in the "
"following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:431
msgid ""
"If the collection had *no* matching document, the operation would result in "
"the insertion of a document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:443
msgid "Update Arrays"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:446
msgid "Update an Element by Position"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:448
msgid ""
"If the update operation requires an update of an element in an array field, "
"the :method:`~db.collection.update()` method can perform the update using "
"the position of the element and :term:`dot notation`. Arrays in MongoDB are "
"zero-based."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:453
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document with the ``_id`` field equal to "
"``1`` and updates the second element in the ``contribs`` array:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:466
msgid "Update an Element if Position is Unknown"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:468
msgid ""
"If the position in the array is not known, the "
":method:`~db.collection.update()` method can perform the update using the "
":operator:`$` positional operator. The array field must appear in the "
"``<query>`` parameter in order to determine which array element to update."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:474
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document where the ``_id`` field equals "
"``3`` and the ``contribs`` array contains an element equal to ``compiler``. "
"If found, the :method:`~db.collection.update()` method updates the first "
"matching element in the array to ``A compiler`` in the document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:489
msgid "Update a Document Element"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:491
msgid ""
"The :method:`~db.collection.update()` method can perform the update of an "
"array that contains embedded documents by using the positional operator "
"(i.e. :operator:`$`) and the :term:`dot notation`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:495
msgid ""
"The following example queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document where the ``_id`` field equals "
"``4`` and the ``awards`` array contains an embedded document where the "
"``by`` field equals ``ACM``. If found, the :method:`~db.collection.update()`"
" method updates the ``by`` field in the first matching embedded document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:510
msgid "Add an Element"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:512
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document that has an ``_id`` field equal "
"to ``1`` and adds a new element to the ``awards`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:526
msgid ""
"In the next example, the :update:`$set` operator uses :ref:`dot notation "
"<document-dot-notation>` to access the ``middle`` field in the ``name`` "
"embedded document. The :update:`$push` operator adds an embedded document to"
" the ``awards`` array."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:531
msgid "Consider the following operation:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:548
msgid "This :method:`~db.collection.update()` operation:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:550
msgid ""
"Modifies the field ``name`` whose value is another document. Specifically, "
"the :update:`$set` operator updates the ``middle`` field in the ``name`` "
"document. The document uses :ref:`dot notation <document-dot-notation>` to "
"access a field in an embedded document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:555
msgid ""
"Adds an element to the field ``awards``, whose value is an array. "
"Specifically, the :update:`$push` operator adds another document as an "
"element to the field ``awards``."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:562
msgid "WriteResult"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:567
msgid "Successful Results"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:569
msgid ""
"The :method:`~db.collection.update()` method returns a :method:`WriteResult`"
" object that contains the status of the operation. Upon success, the "
":method:`WriteResult` object contains the number of documents that matched "
"the query condition, the number of documents inserted by the update, and the"
" number of documents modified:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:0
msgid "See"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:583
msgid "Write Concern Errors"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:585
msgid ""
"If the :method:`~db.collection.update()` method encounters write concern "
"errors, the results include the :data:`WriteResult.writeConcernError` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:601
msgid ":method:`WriteResult.hasWriteConcernError()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:604
msgid "Errors Unrelated to Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:606
msgid ""
"If the :method:`~db.collection.update()` method encounters a non-write "
"concern error, the results include the :data:`WriteResult.writeError` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:622
msgid ":method:`WriteResult.hasWriteError()`"
msgstr ""
