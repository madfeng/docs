# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/limit.txt:3
msgid "$limit (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/limit.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/limit.txt:12
msgid ""
"Limits the number of documents passed to the next stage in the "
":term:`pipeline`."
msgstr ""

#: ../source/reference/operator/aggregation/limit.txt:15
msgid "The :pipeline:`$limit` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/limit.txt:21
msgid ""
":pipeline:`$limit` takes a positive integer that specifies the maximum "
"number of documents to pass along."
msgstr ""

#: ../source/reference/operator/aggregation/limit.txt:25
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/limit.txt:27
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/aggregation/limit.txt:35
msgid ""
"This operation returns only the first 5 documents passed to it from by the "
"pipeline. :pipeline:`$limit` has no effect on the content of the documents "
"it passes."
msgstr ""

#: ../source/includes/fact-agg-sort-limit.rst:1
msgid ""
"When a :pipeline:`$sort` immediately precedes a :pipeline:`$limit` in the "
"pipeline, the :pipeline:`$sort` operation only maintains the top ``n`` "
"results as it progresses, where ``n`` is the specified limit, and MongoDB "
"only needs to store ``n`` items in memory. This optimization still applies "
"when ``allowDiskUse`` is ``true`` and the ``n`` items exceed the "
":ref:`aggregation memory limit <agg-memory-restrictions>`."
msgstr ""

#: ../source/includes/fact-agg-sort-limit.rst:8
msgid ""
"Before MongoDB 2.4, :pipeline:`$sort` would sort all the results in memory, "
"and then limit the results to n results."
msgstr ""
