# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/not.txt:3
msgid "$not"
msgstr ""

#: ../source/reference/operator/query/not.txt:9
msgid "*Syntax*: ``{ field: { $not: { <operator-expression> } } }``"
msgstr ""

#: ../source/reference/operator/query/not.txt:11
msgid ""
":query:`$not` performs a logical ``NOT`` operation on the specified "
"``<operator-expression>`` and selects the documents that do *not* match the "
"``<operator-expression>``. This includes documents that do not contain the "
"``field``."
msgstr ""

#: ../source/reference/operator/query/not.txt:16
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/not.txt:22
msgid ""
"This query will select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/not.txt:24
msgid "the ``price`` field value is less than or equal to ``1.99`` **or**"
msgstr ""

#: ../source/reference/operator/query/not.txt:25
msgid "the ``price`` field does not exist"
msgstr ""

#: ../source/reference/operator/query/not.txt:27
msgid ""
"``{ $not: { $gt: 1.99 } }`` is different from the :query:`$lte` operator. "
"``{ $lte: 1.99 }`` returns *only* the documents where ``price`` field exists"
" and its value is less than or equal to ``1.99``."
msgstr ""

#: ../source/reference/operator/query/not.txt:32
msgid ""
"Remember that the :query:`$not` operator only affects *other operators* and "
"cannot check fields and documents independently. So, use the :query:`$not` "
"operator for logical disjunctions and the :query:`$ne` operator to test the "
"contents of fields directly."
msgstr ""

#: ../source/reference/operator/query/not.txt:37
msgid ""
"Consider the following behaviors when using the :query:`$not` operator:"
msgstr ""

#: ../source/reference/operator/query/not.txt:40
msgid ""
"The operation of the :query:`$not` operator is consistent with the behavior "
"of other operators but may yield unexpected results with some data types "
"like arrays."
msgstr ""

#: ../source/reference/operator/query/not.txt:44
msgid ""
"The :query:`$not` operator does **not** support operations with the "
":query:`$regex` operator. Instead use ``//`` or in your driver interfaces, "
"use your language's regular expression capability to create regular "
"expression objects."
msgstr ""

#: ../source/reference/operator/query/not.txt:49
msgid ""
"Consider the following example which uses the pattern match expression "
"``//``:"
msgstr ""

#: ../source/reference/operator/query/not.txt:55
msgid ""
"The query will select all documents in the ``inventory`` collection where "
"the ``item`` field value does *not* start with the letter ``p``."
msgstr ""

#: ../source/reference/operator/query/not.txt:59
msgid ""
"If you are using Python, you can write the above query with the PyMongo "
"driver and Python's :py:meth:`python:re.compile()` method to compile a "
"regular expression, as follows:"
msgstr ""

#: ../source/reference/operator/query/not.txt:71
msgid ""
":method:`~db.collection.find()`, :method:`~db.collection.update()`, "
":update:`$set`, :query:`$gt`, :query:`$regex`, :api:`PyMongo "
"<python\\current>`, :term:`driver`."
msgstr ""
