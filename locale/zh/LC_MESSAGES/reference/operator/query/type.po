# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/type.txt:3
msgid "$type"
msgstr ""

#: ../source/reference/operator/query/type.txt:9
msgid "*Syntax*: ``{ field: { $type: <BSON type> } }``"
msgstr ""

#: ../source/reference/operator/query/type.txt:11
msgid ""
":query:`$type` selects the documents where the *value* of the ``field`` is "
"the specified :term:`BSON` type."
msgstr ""

#: ../source/reference/operator/query/type.txt:14
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/type.txt:20
msgid ""
"This query will select all documents in the ``inventory`` collection where "
"the ``price`` field value is a Double."
msgstr ""

#: ../source/reference/operator/query/type.txt:23
msgid ""
"If the ``field`` holds an array, the :query:`$type` operator performs the "
"type check against the array elements and **not** the ``field``."
msgstr ""

#: ../source/reference/operator/query/type.txt:27
msgid ""
"Consider the following example where the ``tags`` field holds an array:"
msgstr ""

#: ../source/reference/operator/query/type.txt:33
msgid ""
"This query will select all documents in the ``inventory`` collection where "
"the ``tags`` array contains an element that is itself an array."
msgstr ""

#: ../source/reference/operator/query/type.txt:36
msgid ""
"If instead you want to determine whether the ``tags`` field is an array "
"type, use the :query:`$where` operator:"
msgstr ""

#: ../source/reference/operator/query/type.txt:43
msgid ""
"See the :issue:`SERVER-1475` for more information about the array type."
msgstr ""

#: ../source/reference/operator/query/type.txt:46
msgid ""
"Refer to the following table for the available :term:`BSON` types and their "
"corresponding numbers."
msgstr ""

#: ../source/reference/operator/query/type.txt:50
msgid "**Type**"
msgstr ""

#: ../source/reference/operator/query/type.txt:50
msgid "**Number**"
msgstr ""

#: ../source/reference/operator/query/type.txt:52
msgid "Double"
msgstr ""

#: ../source/reference/operator/query/type.txt:52
msgid "1"
msgstr ""

#: ../source/reference/operator/query/type.txt:53
msgid "String"
msgstr ""

#: ../source/reference/operator/query/type.txt:53
msgid "2"
msgstr ""

#: ../source/reference/operator/query/type.txt:54
msgid "Object"
msgstr ""

#: ../source/reference/operator/query/type.txt:54
msgid "3"
msgstr ""

#: ../source/reference/operator/query/type.txt:55
msgid "Array"
msgstr ""

#: ../source/reference/operator/query/type.txt:55
msgid "4"
msgstr ""

#: ../source/reference/operator/query/type.txt:56
msgid "Binary data"
msgstr ""

#: ../source/reference/operator/query/type.txt:56
msgid "5"
msgstr ""

#: ../source/reference/operator/query/type.txt:57
msgid "Undefined (deprecated)"
msgstr ""

#: ../source/reference/operator/query/type.txt:57
msgid "6"
msgstr ""

#: ../source/reference/operator/query/type.txt:58
msgid "Object id"
msgstr ""

#: ../source/reference/operator/query/type.txt:58
msgid "7"
msgstr ""

#: ../source/reference/operator/query/type.txt:59
msgid "Boolean"
msgstr ""

#: ../source/reference/operator/query/type.txt:59
msgid "8"
msgstr ""

#: ../source/reference/operator/query/type.txt:60
msgid "Date"
msgstr ""

#: ../source/reference/operator/query/type.txt:60
msgid "9"
msgstr ""

#: ../source/reference/operator/query/type.txt:61
msgid "Null"
msgstr ""

#: ../source/reference/operator/query/type.txt:61
msgid "10"
msgstr ""

#: ../source/reference/operator/query/type.txt:62
msgid "Regular Expression"
msgstr ""

#: ../source/reference/operator/query/type.txt:62
msgid "11"
msgstr ""

#: ../source/reference/operator/query/type.txt:63
msgid "JavaScript"
msgstr ""

#: ../source/reference/operator/query/type.txt:63
msgid "13"
msgstr ""

#: ../source/reference/operator/query/type.txt:64
msgid "Symbol"
msgstr ""

#: ../source/reference/operator/query/type.txt:64
msgid "14"
msgstr ""

#: ../source/reference/operator/query/type.txt:65
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/reference/operator/query/type.txt:65
msgid "15"
msgstr ""

#: ../source/reference/operator/query/type.txt:66
msgid "32-bit integer"
msgstr ""

#: ../source/reference/operator/query/type.txt:66
msgid "16"
msgstr ""

#: ../source/reference/operator/query/type.txt:67
msgid "Timestamp"
msgstr ""

#: ../source/reference/operator/query/type.txt:67
msgid "17"
msgstr ""

#: ../source/reference/operator/query/type.txt:68
msgid "64-bit integer"
msgstr ""

#: ../source/reference/operator/query/type.txt:68
msgid "18"
msgstr ""

#: ../source/reference/operator/query/type.txt:69
msgid "Min key"
msgstr ""

#: ../source/reference/operator/query/type.txt:69
msgid "255"
msgstr ""

#: ../source/reference/operator/query/type.txt:70
msgid "Max key"
msgstr ""

#: ../source/reference/operator/query/type.txt:70
msgid "127"
msgstr ""

#: ../source/reference/operator/query/type.txt:73
msgid ""
"``MinKey`` and ``MaxKey`` compare less than and greater than all other "
"possible :term:`BSON` element values, respectively, and exist primarily for "
"internal use."
msgstr ""

#: ../source/reference/operator/query/type.txt:79
msgid ""
"To query if a field value is a ``MinKey``, you must use the :query:`$type` "
"with ``-1`` as in the following example:"
msgstr ""

#: ../source/reference/operator/query/type.txt:0
msgid "Example"
msgstr ""

#: ../source/reference/operator/query/type.txt:88
msgid ""
"Consider the following example operation sequence that demonstrates both "
"type comparison *and* the special ``MinKey`` and ``MaxKey`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:109
msgid ""
"To query for the minimum value of a :term:`shard key` of a :term:`sharded "
"cluster`, use the following operation when connected to the "
":program:`mongos`:"
msgstr ""

#: ../source/includes/warning-mixing-types.rst:3
msgid ""
"Storing values of the different types in the same field in a collection is "
"*strongly* discouraged."
msgstr ""

#: ../source/reference/operator/query/type.txt:122
msgid ""
":method:`~db.collection.find()`, :method:`~db.collection.insert()`, "
":query:`$where`, :term:`BSON`, :term:`shard key`, :term:`sharded cluster` ."
msgstr ""
