# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:9
msgid ""
"The :query:`$or` operator performs a logical ``OR`` operation on an array of"
" *two or more* ``<expressions>`` and selects the documents that satisfy *at "
"least* one of the ``<expressions>``. The :query:`$or` has the following "
"syntax:"
msgstr ""

#: ../source/reference/operator/query/or.txt:18
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
msgid ""
"This query will select all documents in the ``inventory`` collection where "
"either the ``quantity`` field value is less than ``20`` **or** the ``price``"
" field value equals ``10``."
msgstr ""

#: ../source/reference/operator/query/or.txt:29
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/query/or.txt:34
msgid "``$or`` Clauses and Indexes"
msgstr ""

#: ../source/reference/operator/query/or.txt:36
msgid ""
"When evaluating the clauses in the :query:`$or` expression, MongoDB either "
"performs a collection scan or, if all the clauses are supported by indexes, "
"MongoDB performs index scans. That is, for MongoDB to use indexes to "
"evaluate an :query:`$or` expression, all the clauses in the :query:`$or` "
"expression must be supported by indexes. Otherwise, MongoDB will perform a "
"collection scan."
msgstr ""

#: ../source/reference/operator/query/or.txt:43
msgid ""
"When using indexes with :query:`$or` queries, each clause of an :query:`$or`"
" can use its own index.  Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:50
msgid ""
"To support this query, rather than a compound index, you would create one "
"index on ``quantity`` and another index on ``price``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:58
msgid ""
"MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index to "
"support :query:`$or` clauses."
msgstr ""

#: ../source/reference/operator/query/or.txt:64
msgid "``$or`` and ``text`` Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:68
msgid ""
"If :query:`$or` includes a :query:`$text` query, all clauses in the "
":query:`$or` array must be supported by an index. This is because a "
":query:`$text` query *must* use an index, and :query:`$or` can only use "
"indexes if all its clauses are supported by indexes. If the :query:`$text` "
"query cannot use an index, the query will return an error."
msgstr ""

#: ../source/reference/operator/query/or.txt:76
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:80
msgid ""
":operator:`$or` supports :doc:`geospatial clauses </reference/operator"
"/query-geospatial>` with the following exception for the near clause (near "
"clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` "
"cannot contain a near clause with any other clause."
msgstr ""

#: ../source/reference/operator/query/or.txt:87
msgid "``$or`` and Sort Operations"
msgstr ""

#: ../source/reference/operator/query/or.txt:91
msgid ""
"When executing :query:`$or` queries with a :method:`~cursor.sort()`, MongoDB"
" can now use indexes that support the :query:`$or` clauses. Previous "
"versions did not use the indexes."
msgstr ""

#: ../source/reference/operator/query/or.txt:96
msgid "``$or`` versus ``$in``"
msgstr ""

#: ../source/reference/operator/query/or.txt:98
msgid ""
"When using :query:`$or` with ``<expressions>`` that are equality checks for "
"the value of the same field, use the :query:`$in` operator instead of the "
":query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:102
msgid ""
"For example, to select all documents in the ``inventory`` collection where "
"the ``quantity`` field value equals either ``20`` *or* ``50``, use the "
":query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:111
msgid "Nested ``$or`` Clauses"
msgstr ""

#: ../source/reference/operator/query/or.txt:113
msgid "You may nest :query:`$or` operations."
msgstr ""

#: ../source/reference/operator/query/or.txt:115
msgid ""
":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, "
":query:`$in`"
msgstr ""
