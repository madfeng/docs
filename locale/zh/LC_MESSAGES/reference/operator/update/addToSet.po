# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/update/addToSet.txt:3
msgid "$addToSet"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:12
msgid ""
"The :update:`$addToSet` operator adds a value to an array only *if* the "
"value is *not* already in the array. If the value *is* in the array, "
":update:`$addToSet` does not modify the array."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:21
msgid "For example, if a collection ``inventory`` has the following document:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:27
msgid ""
"The following operation adds the element ``\"accessories\"`` to the ``tags``"
" array since ``\"accessories\"`` does not exist in the array:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:38
msgid ""
"However, the following operation has no effect as ``\"camera\"`` is already "
"an element of the ``tags`` array:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:49
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:51
msgid ""
":update:`$addToSet` only ensures that there are no duplicate items *added* "
"to the set and does not affect existing duplicate elements. "
":update:`$addToSet` does not guarantee a particular ordering of elements in "
"the modified set."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:56
msgid ""
"If the field is absent in the document to update, :update:`$addToSet` adds "
"the array field with the value as its element."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:60
msgid "If the field is **not** an array, the operation will fail."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:62
msgid ""
"If the value is an array, :update:`$addToSet` appends the whole array as a "
"*single* element. To add each element of the value separately, use "
":update:`$addToSet` with the :update:`$each` modifier. See :ref:`addToSet-"
"modifiers` for details."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:67
msgid ""
"If the value is a document, MongoDB determines that the document is a "
"duplicate if an existing document in the array matches the to-be-added "
"document exactly; i.e. the existing document has the exact same field and "
"values *and* the fields are in the same order."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:72
msgid ""
"As such, field order matters and you cannot specify that MongoDB compare "
"only a subset of the fields in the document to determine whether the "
"document is a duplicate of an existing array element."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:79
msgid "Modifiers"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:81
msgid ""
"You can use the :update:`$addToSet` operator with the :update:`$each` "
"modifier. The :update:`$each` modifier allows to :update:`$addToSet` "
"operator to add multiple values to the array field."
msgstr ""

#: ../source/includes/example-addToSet-each.rst:1
msgid "A collection ``inventory`` has the following document:"
msgstr ""

#: ../source/includes/example-addToSet-each.rst:7
msgid ""
"Then the following operation uses the :update:`$addToSet` operator with the "
":update:`$each` modifier to add multiple elements to the ``tags`` array:"
msgstr ""

#: ../source/includes/example-addToSet-each.rst:20
msgid ""
"The operation adds only ``\"camera\"`` and ``\"accessories\"`` to the "
"``tags`` array since ``\"electronics\"`` already exists in the array:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:88
msgid ":update:`$push`"
msgstr ""
