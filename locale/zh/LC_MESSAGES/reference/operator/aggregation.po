# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation.txt:8
msgid "Aggregation Pipeline Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:15
msgid "Stage Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:17
msgid ""
"Pipeline stages appear in an array. Documents pass through the stages in "
"sequence."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:2
msgid "Name"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:2
msgid "Description"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:4
msgid ":pipeline:`$project`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:4
msgid ""
"Reshapes each document in the stream, such as by adding new fields or "
"removing existing fields. For each input document, outputs one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:9
msgid ":pipeline:`$match`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:9
msgid ""
"Filters the document stream to allow only matching documents to pass "
"unmodified into the next pipeline stage. :pipeline:`$match` uses standard "
"MongoDB queries. For each input document, outputs either one document (a "
"match) or zero documents (no match)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:15
msgid ":pipeline:`$redact`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:15
msgid ""
"Reshapes each document in the stream by restricting the content for each "
"document based on information stored in the documents themselves. "
"Incorporates the functionality of :pipeline:`$project` and "
":pipeline:`$match`. Can be used to implement field level redaction. For each"
" input document, outputs either one or zero document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:23
msgid ":pipeline:`$limit`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:23
msgid ""
"Passes the first *n* documents unmodified to the pipeline where *n* is the "
"specified limit. For each input document, outputs either one document (for "
"the first *n* documents) or zero documents (after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:29
msgid ":pipeline:`$skip`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:29
msgid ""
"Skips the first *n* documents where *n* is the specified skip number and "
"passes the remaining documents unmodified to the pipeline. For each input "
"document, outputs either zero documents (for the first *n* documents) or one"
" document (if after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:35
msgid ":pipeline:`$unwind`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:35
msgid ""
"Deconstructs an array field from the input documents to output a document "
"for *each* element. Each output document replaces the array with an element "
"value. For each input document, outputs *n* documents where *n* is the "
"number of array elements and can be zero for an empty array."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:42
msgid ":pipeline:`$group`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:42
msgid ""
"Groups input documents by a specified identifier expression and applies the "
"accumulator expression(s), if specified, to each group. Consumes all input "
"documents and outputs one document per each distinct group. The output "
"documents only contain the identifier field and, if specified, accumulated "
"fields."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:49
msgid ":pipeline:`$sort`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:49
msgid ""
"Reorders the document stream by a specified sort key. Only the order "
"changes; the documents remain unmodified. For each input document, outputs "
"one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:54
msgid ":pipeline:`$geoNear`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:54
msgid ""
"Returns an ordered stream of documents based on the proximity to a "
"geospatial point. Incorporates the functionality of :pipeline:`$match`, "
":pipeline:`$sort`, and :pipeline:`$limit` for geospatial data. The output "
"documents include an additional distance field and can include a location "
"identifier field."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:61
msgid ":pipeline:`$out`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:61
msgid ""
"Writes the resulting documents of the aggregation pipeline to a collection. "
"To use the :pipeline:`$out` stage, it must be the last stage in the "
"pipeline."
msgstr ""

#: ../source/reference/operator/aggregation.txt:41
msgid "Expression Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:43
msgid ""
"These expression operators are available to construct :ref:`expressions "
"<aggregation-expressions>` for use in the aggregation pipeline."
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:1
msgid ""
"Operator expressions are similar to functions that take arguments. In "
"general, these expressions take an array of arguments and have the following"
" form:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:9
msgid ""
"If operator accepts a single argument, you can omit the outer array "
"designating the argument list:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:16
msgid ""
"To avoid parsing ambiguity if the argument is a literal array, you must wrap"
" the literal array in a :expression:`$literal` expression or keep the outer "
"array that designates the argument list."
msgstr ""

#: ../source/reference/operator/aggregation.txt:49
msgid "Boolean Operators"
msgstr ""

#: ../source/includes/intro-aggregation-boolean.rst:1
msgid ""
"Boolean expressions evaluates its argument expressions as booleans and "
"return a boolean as the result."
msgstr ""

#: ../source/includes/fact-agg-boolean.rst:1
msgid ""
"In addition to the ``false`` boolean value, |boolean-exp| evaluates as "
"``false`` the following: ``null``, ``0``, and ``undefined`` values. The "
"|boolean-exp| evaluates all other values as ``true``, including non-zero "
"numeric values and arrays."
msgstr ""

#: ../source/reference/operator/aggregation.txt:65
msgid "Set Operators"
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:1
msgid ""
"Set expressions performs set operation on arrays, treating arrays as sets. "
"Set expressions ignores the duplicate entries in each input array and the "
"order of the elements."
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:5
msgid ""
"If the set operation returns a set, the operation filters out duplicates in "
"the result to output an array that contains only unique entries. The order "
"of the elements in the output array is unspecified."
msgstr ""

#: ../source/includes/fact-agg-top-level-expressions.rst:1
msgid ""
"If a set contains a nested array element, |exp| does *not* descend into the "
"nested array but evaluates the array at top-level."
msgstr ""

#: ../source/reference/operator/aggregation.txt:81
msgid "Comparison Operators"
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:1
msgid ""
"Comparison expressions return a boolean except for :expression:`$cmp` which "
"returns a number."
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:4
msgid ""
"The comparison expressions take two argument expressions and compare both "
"value and type, using the :ref:`specified BSON comparison order <bson-types-"
"comparison-order>` for values of different types."
msgstr ""

#: ../source/reference/operator/aggregation.txt:97
msgid "Arithmetic Operators"
msgstr ""

#: ../source/includes/intro-aggregation-arithmetic.rst:1
msgid ""
"Arithmetic expressions perform mathematic operations on numbers. Some "
"arithmetic expressions can also support date arithmetic."
msgstr ""

#: ../source/reference/operator/aggregation.txt:113
msgid "String Operators"
msgstr ""

#: ../source/includes/intro-aggregation-string.rst:1
msgid "|exp-has| a well-defined behavior for strings of ASCII characters."
msgstr ""

#: ../source/reference/operator/aggregation.txt:120
msgid ""
":expression:`$concat` behavior is well-defined regardless of the characters "
"used."
msgstr ""

#: ../source/reference/operator/aggregation.txt:135
msgid "Text Search Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:149
msgid "Array Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:163
msgid "Variable Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:177
msgid "Literal Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:191
msgid "Date Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:205
msgid "Conditional Expressions"
msgstr ""

#: ../source/reference/operator/aggregation.txt:221
msgid "Accumulators"
msgstr ""

#: ../source/includes/intro-aggregation-accumulator.rst:1
msgid ""
"Accumulators, available only for the :pipeline:`$group` stage, compute "
"values by combining documents that share the same group key. Accumulators "
"take as input a single expression, evaluating the expression once for each "
"input document, and maintain their state for the group of documents."
msgstr ""
