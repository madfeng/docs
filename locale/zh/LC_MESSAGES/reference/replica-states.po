# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/replica-states.txt:3
msgid "Replica Set Member States"
msgstr ""

#: ../source/reference/replica-states.txt:7
msgid ""
"Members of replica sets have states that reflect the startup process, basic "
"operations, and potential error states."
msgstr ""

#: ../source/includes/replica-states.rst:5
msgid "**Number**"
msgstr ""

#: ../source/includes/replica-states.rst:6
msgid "**Name**"
msgstr ""

#: ../source/includes/replica-states.rst:7
msgid "**State Description**"
msgstr ""

#: ../source/includes/replica-states.rst:9
msgid "0"
msgstr ""

#: ../source/includes/replica-states.rst:10
msgid ":replstate:`STARTUP`"
msgstr ""

#: ../source/includes/replica-states.rst:12
msgid ""
"Cannot vote. All members start up in this state. The :program:`mongod` "
"parses the :doc:`replica set configuration document </administration"
"/replica-set-member-configuration>` while in :replstate:`STARTUP`."
msgstr ""

#: ../source/includes/replica-states.rst:15
msgid "1"
msgstr ""

#: ../source/includes/replica-states.rst:16
msgid ":replstate:`PRIMARY`"
msgstr ""

#: ../source/includes/replica-states.rst:17
msgid ""
"Can vote. The :doc:`primary </core/replica-set-primary>` is the only member "
"to accept write operations."
msgstr ""

#: ../source/includes/replica-states.rst:19
msgid "2"
msgstr ""

#: ../source/includes/replica-states.rst:20
msgid ":replstate:`SECONDARY`"
msgstr ""

#: ../source/includes/replica-states.rst:21
msgid ""
"Can vote. The :doc:`secondary </core/replica-set-secondary>` replicates the "
"data store."
msgstr ""

#: ../source/includes/replica-states.rst:23
msgid "3"
msgstr ""

#: ../source/includes/replica-states.rst:24
msgid ":replstate:`RECOVERING`"
msgstr ""

#: ../source/includes/replica-states.rst:25
msgid ""
"Can vote. Members either perform startup self-checks, or transition from "
"completing a :doc:`rollback </core/replica-set-rollbacks>` or :doc:`resync "
"</tutorial/resync-replica-set-member>`."
msgstr ""

#: ../source/includes/replica-states.rst:28
msgid "4"
msgstr ""

#: ../source/includes/replica-states.rst:29
msgid ":replstate:`FATAL`"
msgstr ""

#: ../source/includes/replica-states.rst:30
msgid "Cannot vote. Has encountered an unrecoverable error."
msgstr ""

#: ../source/includes/replica-states.rst:32
msgid "5"
msgstr ""

#: ../source/includes/replica-states.rst:33
msgid ":replstate:`STARTUP2`"
msgstr ""

#: ../source/includes/replica-states.rst:34
msgid ""
"Cannot vote. Forks replication and election threads before becoming a "
"secondary."
msgstr ""

#: ../source/includes/replica-states.rst:37
msgid "6"
msgstr ""

#: ../source/includes/replica-states.rst:38
msgid ":replstate:`UNKNOWN`"
msgstr ""

#: ../source/includes/replica-states.rst:39
msgid "Cannot vote. Has never connected to the replica set."
msgstr ""

#: ../source/includes/replica-states.rst:41
msgid "7"
msgstr ""

#: ../source/includes/replica-states.rst:42
msgid ":replstate:`ARBITER`"
msgstr ""

#: ../source/includes/replica-states.rst:43
msgid ""
"Can vote. :ref:`Arbiters <replica-set-arbiters>` do not replicate data and "
"exist solely to participate in elections."
msgstr ""

#: ../source/includes/replica-states.rst:46
msgid "8"
msgstr ""

#: ../source/includes/replica-states.rst:47
msgid ":replstate:`DOWN`"
msgstr ""

#: ../source/includes/replica-states.rst:48
msgid "Cannot vote. Is not accessible to the set."
msgstr ""

#: ../source/includes/replica-states.rst:50
msgid "9"
msgstr ""

#: ../source/includes/replica-states.rst:51
msgid ":replstate:`ROLLBACK`"
msgstr ""

#: ../source/includes/replica-states.rst:52
msgid "Can vote. Performs a :doc:`rollback </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/includes/replica-states.rst:54
msgid "10"
msgstr ""

#: ../source/includes/replica-states.rst:55
msgid ":replstate:`REMOVED`"
msgstr ""

#: ../source/includes/replica-states.rst:56
msgid "Cannot vote. Was once in the replica set but has now been removed."
msgstr ""

#: ../source/reference/replica-states.txt:13
msgid "States"
msgstr ""

#: ../source/reference/replica-states.txt:16
msgid "Core States"
msgstr ""

#: ../source/reference/replica-states.txt:19
msgid ""
"Members in :replstate:`PRIMARY` state accept write operations. A replica set"
" has only one primary at a time. A :replstate:`SECONDARY` member becomes "
"primary after an :ref:`election <replica-set-elections>`. Members in the "
":replstate:`PRIMARY` state are eligible to vote."
msgstr ""

#: ../source/reference/replica-states.txt:26
msgid ""
"Members in :replstate:`SECONDARY` state replicate the primary's data set and"
" can be configured to accept read operations. Secondaries are eligible to "
"vote in elections, and may be elected to the :replstate:`PRIMARY` state if "
"the primary becomes unavailable."
msgstr ""

#: ../source/reference/replica-states.txt:33
msgid ""
"Members in :replstate:`ARBITER` state do not replicate data or accept write "
"operations. They are eligible to vote, and exist solely to break a tie "
"during elections. Replica sets should only have a member in the "
":replstate:`ARBITER` state if the set would otherwise have an even number of"
" members, and could suffer from tied elections. Like primaries, there should"
" only be at most one arbiter in any replica set."
msgstr ""

#: ../source/reference/replica-states.txt:40
msgid ""
"See :doc:`/core/replica-set-members` for more information on core states."
msgstr ""

#: ../source/reference/replica-states.txt:43
msgid "Initialization States"
msgstr ""

#: ../source/reference/replica-states.txt:47
msgid ""
"Each member of a replica set starts up in :replstate:`STARTUP` state. "
":program:`mongod` then loads that member's replica set configuration, and "
"transitions the member's state to :replstate:`STARTUP2`. Members in "
":replstate:`STARTUP` are not eligible to vote."
msgstr ""

#: ../source/reference/replica-states.txt:54
msgid ""
"Each member of a replica set enters the :replstate:`STARTUP2` state as soon "
"as :program:`mongod` finishes loading that member's configuration. While in "
"the :replstate:`STARTUP2` state, the member creates threads to handle "
"internal replication operations. Members are in the :replstate:`STARTUP2` "
"state for a short period of time before entering the :replstate:`RECOVERING`"
" state. Members in the :replstate:`STARTUP2` state are not eligible to vote."
msgstr ""

#: ../source/reference/replica-states.txt:63
msgid ""
"A member of a replica set enters :replstate:`RECOVERING` state when it is "
"not ready to accept reads. The :replstate:`RECOVERING` state can occur "
"during normal operation, and doesn't necessarily reflect an error condition."
"  Members in the :replstate:`RECOVERING` state are eligible to vote in "
"elections, but is not eligible to enter the :replstate:`PRIMARY` state."
msgstr ""

#: ../source/reference/replica-states.txt:70
msgid ""
"During startup, members transition through :replstate:`RECOVERING` after "
":replstate:`STARTUP2` and before becoming :replstate:`SECONDARY`."
msgstr ""

#: ../source/reference/replica-states.txt:73
msgid ""
"During normal operation, if a :term:`secondary` falls behind the other "
"members of the replica set, it may need to :doc:`resync </tutorial/resync-"
"replica-set-member>` with the rest of the set. While resyncing, the member "
"enters the :replstate:`RECOVERING` state."
msgstr ""

#: ../source/reference/replica-states.txt:79
msgid ""
"Whenever the replica set replaces a :term:`primary` in an election, the old "
"primary's data collection may contain documents that did not have time to "
"replicate to the :term:`secondary` members. In this case the member rolls "
"back those writes. During :doc:`rollback </core/replica-set-rollbacks>`, the"
" member will have :replstate:`RECOVERING` state."
msgstr ""

#: ../source/reference/replica-states.txt:86
msgid ""
"On secondaries, the :dbcommand:`compact` and :dbcommand:`replSetMaintenance`"
" commands force the secondary to enter :replstate:`RECOVERING` state. This "
"prevents clients from reading during those operations."
msgstr ""

#: ../source/reference/replica-states.txt:92
msgid "Error States"
msgstr ""

#: ../source/reference/replica-states.txt:94
msgid "Members in any error state can't vote."
msgstr ""

#: ../source/reference/replica-states.txt:98
msgid ""
"Members that encounter an unrecoverable error enter the :replstate:`FATAL` "
"state. Members in this state requires administrator intervention."
msgstr ""

#: ../source/reference/replica-states.txt:103
msgid ""
"Members that have never communicated status information to the replica set "
"are in the :replstate:`UNKNOWN` state."
msgstr ""

#: ../source/reference/replica-states.txt:108
msgid ""
"Members that lose their connection to the replica set enter the "
":replstate:`DOWN` state."
msgstr ""

#: ../source/reference/replica-states.txt:113
msgid ""
"Members that are removed from the replica set enter the :replstate:`REMOVED`"
" state. When members enter the :replstate:`REMOVED` state, the logs will "
"mark this event with a ``replSet REMOVED`` message entry."
msgstr ""

#: ../source/reference/replica-states.txt:120
msgid ""
"When a :replstate:`SECONDARY` rolls back a write operation after "
"transitioning from :replstate:`PRIMARY`, it enters the :replstate:`ROLLBACK`"
" state. See :doc:`/core/replica-set-rollbacks`."
msgstr ""
