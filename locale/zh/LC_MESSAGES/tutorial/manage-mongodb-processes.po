# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-mongodb-processes.txt:3
msgid "Manage ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:7
msgid ""
"MongoDB runs as a standard program. You can start MongoDB from a command "
"line by issuing the :program:`mongod` command and specifying options. For a "
"list of options, see :doc:`/reference/program/mongod`. MongoDB can also run "
"as a Windows service. For details, see :ref:`tutorial-mongod-as-windows-"
"service`. To install MongoDB, see :doc:`/installation`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:14
msgid ""
"The following examples assume the directory containing the :program:`mongod`"
" process is in your system paths. The :program:`mongod` process is the "
"primary database process that runs on an individual server. "
":program:`mongos` provides a coherent MongoDB interface equivalent to a "
":program:`mongod` from the perspective of a client. The :program:`mongo` "
"binary provides the administrative shell."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:22
msgid ""
"This document  page discusses the :program:`mongod` process; however, some "
"portions of this document may be applicable to :program:`mongos` instances."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:26
msgid ""
":doc:`/administration/configuration`, :doc:`/reference/program/mongod`, "
":doc:`/reference/program/mongos`, and :doc:`/reference/configuration-"
"options`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:31
msgid "Start ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:33
msgid ""
"By default, MongoDB stores data in the ``/data/db`` directory. On Windows, "
"MongoDB stores data in ``C:\\data\\db``. On all platforms, MongoDB listens "
"for connections from clients on port ``27017``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:37
msgid ""
"To start MongoDB using all defaults, issue the following command at the "
"system shell:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:45
msgid "Specify a Data Directory"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:47
msgid ""
"If you want :program:`mongod` to store data files at a path *other than* "
"``/data/db`` you can specify a :setting:`~storage.dbPath`. The "
":setting:`~storage.dbPath` must exist before you start :program:`mongod`. If"
" it does not exist, create the directory and the permissions so that "
":program:`mongod` can read and write data to this path. For more information"
" on permissions, see the :ref:`security operations documentation <security-"
"operations>`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:55
msgid ""
"To specify a :setting:`~storage.dbPath` for :program:`mongod` to use as a "
"data directory, use the :option:`--dbpath <mongod --dbpath>` option. The "
"following invocation will start a :program:`mongod` instance and store data "
"in the ``/srv/mongodb`` path"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:65
msgid "Specify a TCP Port"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:67
msgid ""
"Only a single process can listen for connections on a network interface at a"
" time. If you run multiple :program:`mongod` processes on a single machine, "
"or have other processes that must use this port, you must assign each a "
"different port to listen on for client connections."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:73
msgid ""
"To specify a port to :program:`mongod`, use the :option:`--port <mongod "
"--port>` option on the command line. The following command starts "
":program:`mongod` listening on port ``12345``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:81
msgid "Use the default port number when possible, to avoid confusion."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:84
msgid "Start ``mongod`` as a Daemon"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:86
msgid ""
"To run a :program:`mongod` process as a daemon (i.e. "
":setting:`~processManagement.fork`), *and* write its output to a log file, "
"use the :option:`--fork <mongod --fork>` and :option:`--logpath <mongod "
"--logpath>` options. You must create the log directory; however, "
":program:`mongod` will create the log file if it does not exist."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:92
msgid ""
"The following command starts :program:`mongod` as a daemon and records log "
"output to ``/var/log/mongodb.log``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:100
msgid "Additional Configuration Options"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:102
msgid ""
"For an overview of common configurations and common configuration "
"deployments. configurations for common use cases, see "
":doc:`/administration/configuration`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:109
msgid "Stop ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:111
msgid ""
"In a clean shutdown a :program:`mongod` completes all pending operations, "
"flushes all data to data files, and closes all data files. Other shutdowns "
"are *unclean* and can compromise the validity the data files."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:122
msgid ""
"To ensure a clean shutdown, always shutdown :program:`mongod` instances "
"using one of the following methods:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:126
msgid "Use ``shutdownServer()``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:128
msgid ""
"Shut down the :program:`mongod` from the :program:`mongo` shell using the "
":method:`db.shutdownServer()` method as follows:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:136
msgid ""
"Calling the same method from a control script accomplishes the same result."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:138
msgid ""
"For systems with :setting:`~security.authorization` enabled, users may only "
"issue :method:`db.shutdownServer()` when authenticated to the ``admin`` "
"database or via the localhost interface on systems without authentication "
"enabled."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:144
msgid "Use ``--shutdown``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:146
msgid ""
"From the Linux command line, shut down the :program:`mongod` using the "
":option:`--shutdown <mongod --shutdown>` option in the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:154
msgid "Use ``CTRL-C``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:156
msgid ""
"When running the :program:`mongod` instance in interactive mode (i.e. "
"without :option:`--fork <mongod --fork>`), issue ``Control-C`` to perform a "
"clean shutdown."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:161
msgid "Use ``kill``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:163
msgid ""
"From the Linux command line, shut down a specific :program:`mongod` instance"
" using the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:172
msgid ""
"Never use ``kill -9`` (i.e. ``SIGKILL``) to terminate a mongod instance."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:175
msgid "Stop a Replica Set"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:178
msgid "Procedure"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:180
msgid ""
"If the :program:`mongod` is the :term:`primary` in a :term:`replica set`, "
"the shutdown process for these :program:`mongod` instances has the following"
" steps:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:184
msgid "Check how up-to-date the :term:`secondaries <secondary>` are."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:186
msgid ""
"If no secondary is within 10 seconds of the primary, :program:`mongod` will "
"return a message that it will not shut down. You can pass the "
":dbcommand:`shutdown` command a ``timeoutSecs`` argument to wait for a "
"secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:191
msgid ""
"If there is a secondary within 10 seconds of the primary, the primary will "
"step down and wait for the secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:194
msgid ""
"After 60 seconds or once the secondary has caught up, the primary will shut "
"down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:198
msgid "Force Replica Set Shutdown"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:200
msgid ""
"If there is no up-to-date secondary and you want the primary to shut down, "
"issue the :dbcommand:`shutdown` command with the ``force`` argument, as in "
"the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:208
msgid ""
"To keep checking the secondaries for a specified number of seconds if none "
"are immediately up-to-date, issue :dbcommand:`shutdown` with the "
"``timeoutSecs`` argument. MongoDB will keep checking the secondaries for the"
" specified number of seconds if none are immediately up-to-date. If any of "
"the secondaries catch up within the allotted time, the primary will shut "
"down. If no secondaries catch up, it will not shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:215
msgid ""
"The following command issues :dbcommand:`shutdown` with ``timeoutSecs`` set "
"to ``5``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:222
msgid ""
"Alternately you can use the ``timeoutSecs`` argument with the "
":method:`db.shutdownServer()` method:"
msgstr ""
