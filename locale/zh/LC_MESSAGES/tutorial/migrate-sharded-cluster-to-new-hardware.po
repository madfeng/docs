# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:3
msgid "Migrate a Sharded Cluster to Different Hardware"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:7
msgid ""
"This procedure moves the components of the :term:`sharded cluster` to a new "
"hardware system without downtime for reads and writes."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:10
msgid ""
"While the migration is in progress, do not attempt to change to the "
":doc:`cluster metadata </core/sharded-cluster-metadata>`. Do not use any "
"operation that modifies the cluster metadata *in any way*. For example, do "
"not create or drop databases, create or drop collections, or use any "
"sharding commands."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:16
msgid ""
"If your cluster includes a shard backed by a :term:`standalone` "
":program:`mongod` instance, consider :doc:`converting the standalone to a "
"replica set </tutorial/convert-standalone-to-replica-set>` to simplify "
"migration and to let you keep the cluster online during future maintenance. "
"Migrating a shard as standalone is a multi-step process that may require "
"downtime."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:23
msgid "To migrate a cluster to new hardware, perform the following tasks."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:28
msgid "Disable the Balancer"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:30
msgid ""
"Disable the balancer to stop :doc:`chunk migration </core/sharding-chunk-"
"migration>` and do not perform any metadata write operations until the "
"process finishes. If a migration is in progress, the balancer will complete "
"the in-progress migration before stopping."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:36
msgid ""
"To disable the balancer, connect to one of the cluster's :program:`mongos` "
"instances and issue the following method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:43
#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:224
msgid ""
"To check the balancer state, issue the :method:`sh.getBalancerState()` "
"method."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:46
msgid ""
"For more information, see :ref:`sharding-balancing-disable-temporarily`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:51
msgid "Migrate Each Config Server Separately"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:53
msgid ""
"Migrate each :ref:`config server <sharding-config-server>` by starting with "
"the *last* config server listed in the :setting:`~sharding.configDB` string."
" Proceed in reverse order of the :setting:`~sharding.configDB` string. "
"Migrate and restart a config server before proceeding to the next. Do not "
"rename a config server during this process."
msgstr ""

#: ../source/includes/fact-rename-config-servers-requires-cluster-restart.rst:1
msgid ""
"If the name or address that a sharded cluster uses to connect to a config "
"server changes, you must restart **every** :program:`mongod` and "
":program:`mongos` instance in the sharded cluster. Avoid downtime by using "
"CNAMEs to identify config servers within the MongoDB deployment."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:64
msgid ""
"See :doc:`/tutorial/migrate-config-servers-with-different-hostnames` for "
"more information."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:68
msgid ""
"Start with the *last* config server listed in :setting:`~sharding.configDB`."
msgstr ""

#: ../source/tutorial/migrate-config-servers-with-same-hostname.txt:3
msgid "Shut down the config server."
msgstr ""

#: ../source/tutorial/migrate-config-servers-with-same-hostname.txt:5
msgid "This renders all config data for the sharded cluster \"read only.\""
msgstr ""

#: ../source/tutorial/migrate-config-servers-with-same-hostname.txt:7
msgid ""
"Change the DNS entry that points to the system that provided the old config "
"server, so that the *same* hostname points to the new system. How you do "
"this depends on how you organize your DNS and hostname resolution services."
msgstr ""

#: ../source/tutorial/migrate-config-servers-with-same-hostname.txt:13
msgid ""
"Copy the contents of :setting:`~storage.dbPath` from the old config server "
"to the new config server."
msgstr ""

#: ../source/tutorial/migrate-config-servers-with-same-hostname.txt:16
msgid ""
"For example, to copy the contents of :setting:`~storage.dbPath` to a machine"
" named ``mongodb.config2.example.net``, you might issue a command similar to"
" the following:"
msgstr ""

#: ../source/tutorial/migrate-config-servers-with-same-hostname.txt:24
msgid ""
"Start the config server instance on the new system. The default invocation "
"is:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:77
msgid "Restart the ``mongos`` Instances"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:79
msgid ""
"If the :setting:`~sharding.configDB` string will change as part of the "
"migration, you must shut down *all* :program:`mongos` instances before "
"changing the :setting:`~sharding.configDB` string. This avoids errors in the"
" sharded cluster over :setting:`~sharding.configDB` string conflicts."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:84
msgid ""
"If the :setting:`~sharding.configDB` string will remain the same, you can "
"migrate the :program:`mongos` instances sequentially or all at once."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:87
msgid ""
"Shut down the :program:`mongos` instances using the :dbcommand:`shutdown` "
"command. If the :setting:`~sharding.configDB` string is changing, shut down "
"*all* :program:`mongos` instances."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:91
msgid ""
"If the hostname has changed for any of the config servers, update the "
":setting:`~sharding.configDB` string for each :program:`mongos` instance. "
"The :program:`mongos` instances must all use the same "
":setting:`~sharding.configDB` string. The strings must list identical host "
"names in identical order."
msgstr ""

#: ../../../internal padding after
#: build/master/source/includes/tip-hostnames.rst:0
msgid "Tip"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:98
msgid ""
"Restart the :program:`mongos` instances being sure to use the updated "
":setting:`~sharding.configDB` string if hostnames have changed."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:101
msgid "For more information, see :ref:`sharding-setup-start-mongos`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:106
msgid "Migrate the Shards"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:108
msgid ""
"Migrate the shards one at a time. For each shard, follow the appropriate "
"procedure in this section."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:114
msgid "Migrate a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:116
msgid ""
"To migrate a sharded cluster, migrate each member separately. First migrate "
"the non-primary members, and then migrate the :term:`primary` last."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:120
msgid ""
"If the replica set has two voting members, add an :doc:`arbiter </core"
"/replica-set-arbiter>` to the replica set to ensure the set keeps a majority"
" of its votes available during the migration. You can remove the arbiter "
"after completing the migration."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:128
msgid "Migrate a Member of a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:130
msgid ""
"Shut down the :program:`mongod` process. To ensure a clean shutdown, use the"
" :dbcommand:`shutdown` command."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:133
msgid ""
"Move the data directory (i.e., the :setting:`~storage.dbPath`) to the new "
"machine."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:136
msgid "Restart the :program:`mongod` process at the new location."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:139
msgid "Connect to the replica set's current primary."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:141
msgid ""
"If the hostname of the member has changed, use :method:`rs.reconfig()` to "
"update the :doc:`replica set configuration document </reference/replica-"
"configuration>` with the new hostname."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:145
msgid ""
"For example, the following sequence of commands updates the hostname for the"
" instance at position ``2`` in the ``members`` array:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:155
msgid ""
"For more information on updating the configuration document, see :ref"
":`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:158
msgid "To confirm the new configuration, issue :method:`rs.conf()`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:160
msgid ""
"Wait for the member to recover. To check the member's state, issue "
":method:`rs.status()`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:164
msgid "Migrate the Primary in a Replica Set Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:166
msgid ""
"While migrating the replica set's primary, the set must elect a new primary."
" This failover process which renders the replica set unavailable to perform "
"reads or accept writes for the duration of the election, which typically "
"completes quickly. If possible, plan the migration during a maintenance "
"window."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:172
msgid ""
"Step down the primary to allow the normal :ref:`failover <replica-set-"
"failover>` process.  To step down the primary, connect to the primary and "
"issue the either the :dbcommand:`replSetStepDown` command or the "
":method:`rs.stepDown()` method. The following example shows the "
":method:`rs.stepDown()` method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:183
msgid ""
"Once the primary has stepped down and another member has become "
":replstate:`PRIMARY` state. To migrate the stepped-down primary, follow the "
":ref:`migrate-replica-set-shard-member` procedure"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:187
msgid ""
"You can check the output of :method:`rs.status()` to confirm the change in "
"status."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:191
msgid "Migrate a Standalone Shard"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:193
msgid ""
"The ideal procedure for migrating a standalone shard is to :doc:`convert the"
" standalone to a replica set </tutorial/convert-standalone-to-replica-set>` "
"and then use the procedure for :ref:`migrating a replica set shard <migrate-"
"replica-set-shard>`. In production clusters, all shards should be replica "
"sets, which provides continued availability during maintenance windows."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:201
msgid ""
"Migrating a shard as standalone is a multi-step process during which part of"
" the shard may be unavailable. If the shard is the :term:`primary shard` for"
" a database,the process includes the :dbcommand:`movePrimary` command. While"
" the :dbcommand:`movePrimary` runs, you should stop modifying data in that "
"database. To migrate the standalone shard, use the :doc:`/tutorial/remove-"
"shards-from-cluster` procedure."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:212
msgid "Re-Enable the Balancer"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:214
msgid ""
"To complete the migration, re-enable the balancer to resume :doc:`chunk "
"migrations </core/sharding-chunk-migration>`."
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:217
msgid ""
"Connect to one of the cluster's :program:`mongos` instances and pass "
"``true`` to the :method:`sh.setBalancerState()` method:"
msgstr ""

#: ../source/tutorial/migrate-sharded-cluster-to-new-hardware.txt:227
msgid "For more information, see :ref:`sharding-balancing-enable`."
msgstr ""
