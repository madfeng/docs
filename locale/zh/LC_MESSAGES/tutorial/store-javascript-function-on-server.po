# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/store-javascript-function-on-server.txt:3
msgid "Store a JavaScript Function on the Server"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:9
msgid ""
"Do not store application logic in the database. There are performance "
"limitations to running JavaScript inside of MongoDB. Application code also "
"is typically most effective when it shares version control with the "
"application itself."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:14
msgid ""
"There is a special system collection named ``system.js`` that can store "
"JavaScript functions for reuse."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:17
msgid ""
"To store a function, you can use the :method:`db.collection.save()`, as in "
"the following example:"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:29
msgid ""
"The ``_id`` field holds the name of the function and is unique per database."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:32
msgid "The ``value`` field holds the function definition"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:34
msgid ""
"Once you save a function in the ``system.js`` collection, you can use the "
"function from any JavaScript context (e.g. :dbcommand:`eval` command or the "
":program:`mongo` shell method :method:`db.eval()`, :query:`$where` operator,"
" :dbcommand:`mapReduce` or :program:`mongo` shell method "
":method:`db.collection.mapReduce()`)."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:40
msgid ""
"Consider the following example from the :program:`mongo` shell that first "
"saves a function named ``echoFunction`` to the ``system.js`` collection and "
"calls the function using :method:`db.eval()` method:"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:55
msgid ""
"See "
"`<http://github.com/mongodb/mongo/tree/master/jstests/core/storefunc.js>`_ "
"for a full example."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:57
msgid ""
"In the :program:`mongo` shell, you can use :method:`db.loadServerScripts()` "
"to load all the scripts saved in the ``system.js`` collection for the "
"current database. Once loaded, you can invoke the functions directly in the "
"shell, as in the following example:"
msgstr ""
