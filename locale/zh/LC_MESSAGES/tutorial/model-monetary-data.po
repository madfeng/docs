# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-monetary-data.txt:3
msgid "Model Monetary Data"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:8
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:10
msgid ""
"MongoDB stores numeric data as either IEEE 754 standard 64-bit floating "
"point numbers or as 32-bit or 64-bit signed integers. Applications that "
"handle monetary data often require capturing fractional units of currency. "
"However, arithmetic on floating point numbers, as implemented in modern "
"hardware, often does not conform to requirements for monetary arithmetic. In"
" addition, some fractional numeric quantities, such as one third and one "
"tenth, have no exact representation in binary floating point numbers."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:21
msgid ""
"Arithmetic mentioned on this page refers to server-side arithmetic performed"
" by :program:`mongod` or :program:`mongos`, and not to client-side "
"arithmetic."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:25
msgid "This document describes two ways to model monetary data in MongoDB:"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:27
msgid ""
":ref:`monetary-value-exact-precision` which multiplies the monetary value by"
" a power of 10."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:30
msgid ""
":ref:`monetary-value-arbitrary-precision` which uses two fields for the "
"value: one field to store the exact monetary value as a non-numeric and "
"another field to store a floating point approximation of the value."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:38
msgid "Use Cases for Exact Precision Model"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:40
msgid ""
"If you regularly need to perform server-side arithmetic on monetary data, "
"the exact precision model may be appropriate. For instance:"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:43
msgid ""
"If you need to query the database for exact, mathematically valid matches, "
"use :ref:`monetary-value-exact-precision`."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:46
msgid ""
"If you need to be able to do server-side arithmetic, e.g., :update:`$inc`, "
":update:`$mul`, and :doc:`aggregation framework arithmetic "
"</reference/operator/aggregation-arithmetic>`, use :ref:`monetary-value-"
"exact-precision`."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:54
msgid "Use Cases for Arbitrary Precision Model"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:56
msgid ""
"If there is no need to perform server-side arithmetic on monetary data, "
"modeling monetary data using the arbitrary precision model may be suitable. "
"For instance:"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:60
msgid ""
"If you need to handle arbitrary or unforeseen number of precision, see :ref"
":`monetary-value-arbitrary-precision`."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:63
msgid ""
"If server-side approximations are sufficient, possibly with client-side "
"post-processing, see :ref:`monetary-value-arbitrary-precision`."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:70
msgid "Exact Precision"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:72
msgid "To model monetary data using the exact precision model:"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:74
msgid ""
"Determine the maximum precision needed for the monetary value. For example, "
"your application may require precision down to the tenth of one cent for "
"monetary values in ``USD`` currency."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:78
msgid ""
"Convert the monetary value into an integer by multiplying the value by a "
"power of 10 that ensures the maximum precision needed becomes the least "
"significant digit of the integer. For example, if the required maximum "
"precision is the tenth of one cent, multiply the monetary value by 1000."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:84
msgid "Store the converted monetary value."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:86
msgid ""
"For example, the following scales ``9.99 USD`` by 1000 to preserve precision"
" up to one tenth of a cent."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:93
msgid "The model assumes that for a given currency value:"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:95
msgid ""
"The scale factor is consistent for a currency; i.e. same scaling factor for "
"a given currency."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:98
msgid ""
"The scale factor is a constant and known property of the currency; i.e "
"applications can determine the scale factor from the currency."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:101
msgid ""
"When using this model, applications must be consistent in performing the "
"appropriate scaling of the values."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:104
msgid ""
"For use cases of this model, see :ref:`exact-precision-model-use-case`."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:109
msgid "Arbitrary Precision"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:111
msgid ""
"To model monetary data using the arbitrary precision model, store the value "
"in two fields:"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:114
msgid ""
"In one field, encode the exact monetary value as a non-numeric data type; "
"e.g., ``BinData`` or a ``string``."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:117
msgid ""
"In the second field, store a double-precision floating point approximation "
"of the exact value."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:120
msgid ""
"The following example uses the arbitrary precision model to store ``9.99 "
"USD`` for the price and ``0.25 USD`` for the fee:"
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:130
msgid ""
"With some care, applications can perform range and sort queries on the field"
" with the numeric approximation. However, the use of the approximation field"
" for the query and sort operations requires that applications perform "
"client-side post-processing to decode the non-numeric representation of the "
"exact value and then filter out the returned documents based on the exact "
"monetary value."
msgstr ""

#: ../source/tutorial/model-monetary-data.txt:137
msgid ""
"For use cases of this model, see :ref:`arbitrary-precision-model-use-case`."
msgstr ""
