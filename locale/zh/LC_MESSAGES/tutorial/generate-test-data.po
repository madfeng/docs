# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/generate-test-data.txt:3
msgid "Generate Test Data"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:7
msgid ""
"This tutorial describes how to quickly generate test data as you need to "
"test basic MongoDB operations."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:11
msgid "Insert Multiple Documents Using a For Loop"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:13
msgid ""
"You can add documents to a new or existing collection by using a JavaScript "
"``for`` loop run from the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:16
msgid ""
"From the :program:`mongo` shell, insert new documents into the ``testData`` "
"collection using the following ``for`` loop. If the ``testData`` collection "
"does not exist, MongoDB creates the collection implicitly."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:25
msgid "Use find() to query the collection:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:31
msgid ""
"The :program:`mongo` shell displays the first 20 documents in the "
"collection. Your :doc:`ObjectId </reference/object-id>` values will be "
"different:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:60
msgid ""
"The :method:`~db.collection.find()` returns a cursor. To iterate the cursor "
"and return more documents use the ``it`` operation in the :program:`mongo` "
"shell. The :program:`mongo` shell will exhaust the cursor, and return the "
"following documents:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:74
msgid "Insert Multiple Documents with a ``mongo`` Shell Function"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:76
msgid ""
"You can create a JavaScript function in your shell session to generate the "
"above data. The ``insertData()`` JavaScript function, shown here, creates "
"new data for use in testing or training by either creating a new collection "
"or appending data to an existing collection:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:95
msgid ""
"The ``insertData()`` function takes three parameters: a database, a new or "
"existing collection, and the number of documents to create. The function "
"creates documents with an ``x`` field that is set to an incremented integer,"
" as in the following example documents:"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:106
msgid ""
"Store the function in your :ref:`.mongorc.js <mongo-mongorc-file>` file. The"
" :program:`mongo` shell loads the function for you every time you start a "
"session."
msgstr ""

#: ../source/tutorial/generate-test-data.txt:0
msgid "Example"
msgstr ""

#: ../source/tutorial/generate-test-data.txt:117
msgid ""
"This operation inserts 400 documents into the ``testData`` collection in the"
" ``test`` database. If the collection and database do not exist, MongoDB "
"creates them implicitly before inserting documents."
msgstr ""
