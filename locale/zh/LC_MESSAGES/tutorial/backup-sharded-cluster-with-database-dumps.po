# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:3
msgid "Backup a Sharded Cluster with Database Dumps"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:8
msgid "Overview"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:10
msgid ""
"This document describes a procedure for taking a backup of all components of"
" a sharded cluster. This procedure uses :program:`mongodump` to create dumps"
" of the :program:`mongod` instance. An alternate procedure uses file system "
"snapshots to capture the backup data, and may be more efficient in some "
"situations if your system configuration allows file system backups. See "
":doc:`/administration/backup-sharded-clusters` for more information."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:19
msgid ""
"See :doc:`/core/backups` and :doc:`/administration/backup-sharded-clusters` "
"for complete information on backups in MongoDB and backups of sharded "
"clusters in particular."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:25
msgid "Prerequisites"
msgstr ""

#: ../source/includes/note-shard-cluster-backup.rst:1
msgid ""
"To capture a point-in-time backup from a sharded cluster you **must** stop "
"*all* writes to the cluster. On a running production system, you can only "
"capture an *approximation* of point-in-time snapshot."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:1
msgid ""
"To backup all the databases in a cluster via :program:`mongodump`, you "
"should have the :authrole:`backup` role. The :authrole:`backup` role "
"provides all the needed privileges for backing up all database. The role "
"confers no additional access, in keeping with the policy of :term:`least "
"privilege`."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:6
msgid ""
"To backup a given database, you must have ``read`` access on the database. "
"Several roles provide this access, including the :authrole:`backup` role."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:9
msgid ""
"To backup the ``system.profile`` collection in a database, you must have "
"``read`` access on certain system collections in the database. Several roles"
" provide this access, including the :authrole:`clusterAdmin` and "
":authrole:`dbAdmin` roles."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:3
msgid ""
"To backup users and :ref:`user-defined roles <user-defined-roles>` for a "
"given database, you must have access to the ``admin`` database. MongoDB "
"stores the user data and role definitions for all databases in the ``admin``"
" database."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:8
msgid ""
"Specifically, to backup a given database's users, you must have the "
":authaction:`find` :ref:`action <security-user-actions>` on the ``admin`` "
"database's :data:`admin.system.users` collection. The :authrole:`backup` and"
" :authrole:`userAdminAnyDatabase` roles both provide this privilege."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:13
msgid ""
"To backup the user-defined roles on a database, you must have the "
":authaction:`find` action on the ``admin`` database's "
":data:`admin.system.roles` collection. Both the :authrole:`backup` and "
":authrole:`userAdminAnyDatabase` roles provide this privilege."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:34
msgid "Consideration"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:36
msgid ""
"To create these backups of a sharded cluster, you will stop the cluster "
"balancer and take a backup up of the :term:`config database`, and then take "
"backups of each shard in the cluster using :program:`mongodump` to capture "
"the backup data. To capture a more exact moment-in-time snapshot of the "
"system, you will need to stop all application writes before taking the "
"filesystem snapshots; otherwise the snapshot will only approximate a moment "
"in time."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:44
msgid ""
"For approximate point-in-time snapshots, taking the backup from a single "
"offline secondary member of the replica set that provides each shard can "
"improve the quality of the backup while minimizing impact on the cluster."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:50
msgid "Procedure"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:8
msgid "Disable the balancer process."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:11
msgid ""
"Disable the :term:`balancer` process that equalizes the distribution of data"
" among the :term:`shards <shard>`. To disable the balancer, use the "
":method:`sh.stopBalancer()` method in the :program:`mongo` shell. For "
"example:"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:23
msgid ""
"For more information, see the :ref:`sharding-balancing-disable-temporarily` "
"procedure."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:28
msgid ""
"If you do not stop the balancer, the backup could have duplicate data or "
"omit data as :term:`chunks <chunk>` migrate while recording backups."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:44
msgid "Lock replica set members."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:47
msgid ""
"Lock one member of each replica set in each shard so that your backups "
"reflect the state of your database at the nearest possible approximation of "
"a single moment in time. Lock these :program:`mongod` instances in as short "
"of an interval as possible."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:52
msgid ""
"To lock or freeze a sharded cluster, you shut down one member of each "
"replica set. Ensure that the :term:`oplog` has sufficient capacity to allow "
"these secondaries to catch up to the state of the primaries after finishing "
"the backup procedure. See :ref:`replica-set-oplog-sizing` for more "
"information."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:70
msgid "Backup one config server."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:73
msgid ""
"Use :program:`mongodump` to backup one of the :ref:`config servers "
"<sharding-config-server>`. This backs up the cluster's metadata. You only "
"need to back up one config server, as they all hold the same data."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:77
msgid ""
"Use the :program:`mongodump` tool to capture the content of the config "
":program:`mongod` instances."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:80
msgid ""
"Your config servers must run MongoDB 2.4 or later with the "
":option:`--configsvr <mongod --configsvr>` option and the "
":program:`mongodump` option must include the :option:`--oplog <mongodump "
"--oplog>` to capture a consistent copy of the config database:"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:103
msgid "Backup replica set members."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:106
msgid ""
"Back up the replica set members of the shards that shut down using "
":program:`mongodump` and specifying the :option:`--dbpath <mongodump "
"--dbpath>` option. You may back up the shards in parallel. Consider the "
"following invocation:"
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:117
msgid ""
"You must run :program:`mongodump` on the same system where the "
":program:`mongod` ran. This operation will create a dump of all the data "
"managed by the :program:`mongod` instances that used the "
":setting:`~storage.dbPath` ``/data/db/``.  :program:`mongodump` writes the "
"output of this dump to the ``/data/backup/`` directory."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:136
msgid "Restart replica set members."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:139
msgid ""
"Restart all stopped replica set members of each shard as normal and allow "
"them to catch up with the state of the primary."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:154
msgid "Re-enable the balancer process."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:157
msgid ""
"Re-enable the balancer with the :method:`sh.setBalancerState()` method."
msgstr ""

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:160
msgid ""
"Use the following command sequence when connected to the :program:`mongos` "
"with the :program:`mongo` shell:"
msgstr ""
