# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/aggregation-with-user-preference-data.txt:3
msgid "Aggregation with User Preference Data"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:8
msgid "Data Model"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:10
msgid ""
"Consider a hypothetical sports club with a database that contains a "
"``users`` collection that tracks the user's join dates, sport preferences, "
"and stores these data in documents that resemble the following:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:65
msgid "Normalize and Sort Documents"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:67
msgid ""
"The following operation returns user names in upper case and in alphabetical"
" order. The aggregation includes user names for all documents in the "
"``users`` collection. You might do this to normalize user names for "
"processing."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:81
msgid ""
"All documents from the ``users`` collection pass through the pipeline, which"
" consists of the following operations:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:84
#: ../source/tutorial/aggregation-with-user-preference-data.txt:201
msgid "The :pipeline:`$project` operator:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:86
msgid "creates a new field called ``name``."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:88
msgid ""
"converts the value of the ``_id`` to upper case, with the "
":expression:`$toUpper` operator. Then the :pipeline:`$project` creates a new"
" field, named ``name`` to hold this value."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:93
msgid ""
"suppresses the ``id`` field. :pipeline:`$project` will pass the ``_id`` "
"field by default, unless explicitly suppressed."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:96
msgid ""
"The :pipeline:`$sort` operator orders the results by the ``name`` field."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:99
msgid "The results of the aggregation would resemble the following:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:177
msgid "Return Usernames Ordered by Join Month"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:179
msgid ""
"The following aggregation operation returns user names sorted by the month "
"they joined. This kind of aggregation could help generate membership renewal"
" notices."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:198
#: ../source/tutorial/aggregation-with-user-preference-data.txt:255
msgid ""
"The pipeline passes all documents in the ``users`` collection through the "
"following operations:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:203
msgid "Creates two new fields: ``month_joined`` and ``name``."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:205
msgid ""
"Suppresses the ``id`` from the results. The :method:`aggregate() "
"<db.collection.aggregate()>` method includes the ``_id``, unless explicitly "
"suppressed."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:209
msgid ""
"The :expression:`$month` operator converts the values of the ``joined`` "
"field to integer representations of the month. Then the :pipeline:`$project`"
" operator assigns those values to the ``month_joined`` field."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:214
msgid ""
"The :pipeline:`$sort` operator sorts the results by the ``month_joined`` "
"field."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:217
msgid "The operation returns results that resemble the following:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:239
msgid "Return Total Number of Joins per Month"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:241
msgid ""
"The following operation shows how many people joined each month of the year."
" You might use this aggregated data for recruiting and marketing strategies."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:258
msgid ""
"The :pipeline:`$project` operator creates a new field called "
"``month_joined``."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:261
msgid ""
"The :expression:`$month` operator converts the values of the ``joined`` "
"field to integer representations of the month. Then the :pipeline:`$project`"
" operator assigns the values to the ``month_joined`` field."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:266
msgid ""
"The :pipeline:`$group` operator collects all documents with a given "
"``month_joined`` value and counts how many documents there are for that "
"value. Specifically, for each unique value, :pipeline:`$group` creates a new"
" \"per-month\" document with two fields:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:272
msgid ""
"``_id``, which contains a nested document with the ``month_joined`` field "
"and its value."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:275
msgid ""
"``number``, which is a generated field. The :group:`$sum` operator "
"increments this field by 1 for every document containing the given "
"``month_joined`` value."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:279
msgid ""
"The :pipeline:`$sort` operator sorts the documents created by "
":pipeline:`$group` according to the contents of the ``month_joined`` field."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:283
msgid "The result of this aggregation operation would resemble the following:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:307
msgid "Return the Five Most Common \"Likes\""
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:309
msgid ""
"The following aggregation collects top five most \"liked\" activities in the"
" data set. This type of analysis could help inform planning and future "
"development."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:324
msgid ""
"The pipeline begins with all documents in the ``users`` collection, and "
"passes these documents through the following operations:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:327
msgid ""
"The :pipeline:`$unwind` operator separates each value in the ``likes`` "
"array, and creates a new version of the source document for every element in"
" the array."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:0
msgid "Example"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:333
msgid "Given the following document from the ``users`` collection:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:343
msgid "The :pipeline:`$unwind` operator would create the following documents:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:359
msgid ""
"The :pipeline:`$group` operator collects all documents the same value for "
"the ``likes`` field and counts each grouping. With this information, "
":pipeline:`$group` creates a new document with two fields:"
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:364
msgid "``_id``, which contains the ``likes`` value."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:366
msgid ""
"``number``, which is a generated field. The :group:`$sum` operator "
"increments this field by 1 for every document containing the given ``likes``"
" value."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:370
msgid ""
"The :pipeline:`$sort` operator sorts these documents by the ``number`` field"
" in reverse order."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:373
msgid ""
"The :pipeline:`$limit` operator only includes the first 5 result documents."
msgstr ""

#: ../source/tutorial/aggregation-with-user-preference-data.txt:376
msgid "The results of aggregation would resemble the following:"
msgstr ""
