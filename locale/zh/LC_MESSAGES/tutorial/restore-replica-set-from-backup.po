# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/restore-replica-set-from-backup.txt:3
msgid "Restore a Replica Set from MongoDB Backups"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:7
msgid ""
"This procedure outlines the process for taking MongoDB data and restoring "
"that data into a new :term:`replica set`. Use this approach for seeding test"
" deployments from production backups as well as part of disaster recovery."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:12
msgid ""
"You *cannot* restore a single data set to three new :program:`mongod` "
"instances and *then* create a replica set. In this situation MongoDB will "
"force the secondaries to perform an initial sync. The procedures in this "
"document describe the correct and efficient ways to deploy a replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:19
msgid "Restore Database into a Single Node Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:21
msgid ""
"Obtain backup MongoDB Database files. These files may come from a :doc:`file"
" system snapshot </tutorial/backup-with-filesystem-snapshots>`.  The "
"`MongoDB Management Service (MMS) <https://mms.mongodb.com/?pk_campaign"
"=mongodb-docs-restore-rs-tutorial>`_ produces MongoDB database files for "
":mms:`stored snapshots </backup/tutorial/restore-from-snapshot/>` and "
":mms:`point and time snapshots </backup/tutorial/restore-from-point-in-time-"
"snapshot/>`. You can also use :program:`mongorestore` to restore database "
"files using data created with :program:`mongodump`. See :doc:`/tutorial"
"/backup-with-mongodump` for more information."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:35
msgid ""
"Start a :program:`mongod` using data files from the backup as the "
"``dbpath``. In the following example, ``/data/db`` is the ``dbpath`` to the "
"data files:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:43
msgid ""
"Convert your standalone :program:`mongod` process to a single node replica "
"set by shutting down the :program:`mongod` instance, and restarting it with "
"the :option:`--replSet <mongod --replSet>` option, as in the following "
"example:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:0
msgid "Optional"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:54
msgid ""
"Consider explicitly setting a :setting:`~replication.oplogSizeMB` to control"
" the size of the :term:`oplog` created for this replica set member."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:58
msgid "Connect to the :program:`mongod` instance."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:60
msgid "Use :method:`rs.initiate()` to initiate the new replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:63
msgid "Add Members to the Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:65
msgid ""
"MongoDB provides two options for restoring secondary members of a replica "
"set:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:68
msgid "Manually copy the database files to each data directory."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:70
msgid ""
"Allow :ref:`initial sync <replica-set-initial-sync>` to distribute data "
"automatically."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:73
msgid "The following sections outlines both approaches."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:77
msgid ""
"If your database is large, initial sync can take a long time to complete. "
"For large databases, it might be preferable to copy the database files onto "
"each host."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:82
msgid "Copy Database Files and Restart :program:`mongod` Instance"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:84
msgid ""
"Use the following sequence of operations to \"seed\" additional members of "
"the replica set with the restored data by copying MongoDB data files "
"directly."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:88
msgid ""
"Shut down the :program:`mongod` instance that you restored. Using "
":option:`--shutdown <mongod --shutdown>` or :method:`db.shutdownServer()` to"
" ensure a clean shut down."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:92
msgid ""
"Copy the :term:`primary's <primary>` data directory into the "
":setting:`~storage.dbPath` of the other members of the replica set. The "
":setting:`~storage.dbPath` is ``/data/db`` by default."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:96
msgid "Start the :program:`mongod` instance that you restored."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:98
msgid ""
"In a :program:`mongo` shell connected to the :term:`primary`, add the "
":term:`secondaries <secondary>` to the replica set using :method:`rs.add()`."
" See :doc:`/tutorial/deploy-replica-set` for more information about "
"deploying a replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:104
msgid "Update Secondaries using Initial Sync"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:106
msgid ""
"Use the following sequence of operations to \"seed\" additional members of "
"the replica set with the restored data using the default *initial sync* "
"operation."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:110
msgid ""
"Ensure that the data directories on the prospective replica set members are "
"empty."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:113
msgid ""
"Add each prospective member to the replica set. :ref:`Initial Sync <replica-"
"set-initial-sync>` will copy the data from the :term:`primary` to the other "
"members of the replica set."
msgstr ""
