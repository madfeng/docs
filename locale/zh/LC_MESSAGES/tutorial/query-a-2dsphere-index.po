# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/query-a-2dsphere-index.txt:5
msgid "Query a ``2dsphere`` Index"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:9
msgid ""
"The following sections describe queries supported by the ``2dsphere`` index."
" For an overview of recommended geospatial queries, see :ref:`geospatial-"
"query-compatibility-chart`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:14
msgid "GeoJSON Objects Bounded by a Polygon"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:16
msgid ""
"The :query:`$geoWithin` operator queries for location data found within a "
"GeoJSON polygon. Your location data must be stored in GeoJSON format. Use "
"the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:29
msgid ""
"The following example selects all points and shapes that exist entirely "
"within a GeoJSON polygon:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:47
msgid "Intersections of GeoJSON Objects"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:51
msgid ""
"The :query:`$geoIntersects` operator queries for locations that intersect a "
"specified GeoJSON object. A location intersects the object if the "
"intersection is non-empty. This includes documents that have a shared edge."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:56
msgid "The :query:`$geoIntersects` operator uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:67
msgid ""
"The following example uses :query:`$geoIntersects` to select all indexed "
"points and shapes that intersect with the polygon defined by the "
"``coordinates`` array."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:86
msgid "Proximity to a GeoJSON Point"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:88
msgid ""
"Proximity queries return the points closest to the defined point and sorts "
"the results by distance. A proximity query on GeoJSON data requires a "
"``2dsphere`` index."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:92
msgid ""
"To query for proximity to a GeoJSON point, use either the :query:`$near` "
"operator or :dbcommand:`geoNear` command. Distance is in meters."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:96
msgid "The :query:`$near` uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:108
msgid "For examples, see :query:`$near`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:110
msgid "The :dbcommand:`geoNear` command uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:119
msgid ""
"The :dbcommand:`geoNear` command offers more options and returns more "
"information than does the :query:`$near` operator. To run the command, see "
":dbcommand:`geoNear`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:124
msgid "Points within a Circle Defined on a Sphere"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:126
msgid ""
"To select all grid coordinates in a \"spherical cap\" on a sphere, use "
":query:`$geoWithin` with the :query:`$centerSphere` operator. Specify an "
"array that contains:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:130
msgid "The grid coordinates of the circle's center point"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:132
msgid ""
"The circle's radius measured in radians. To calculate radians, see "
":doc:`/tutorial/calculate-distances-using-spherical-geometry-with-2d-"
"geospatial-indexes`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:135
msgid "Use the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:145
msgid ""
"The following example queries grid coordinates and returns all documents "
"within a 10 mile radius of longitude ``88 W`` and latitude ``30 N``. The "
"example converts the distance, 10 miles, to radians by dividing by the "
"approximate radius of the earth, 3959 miles:"
msgstr ""
