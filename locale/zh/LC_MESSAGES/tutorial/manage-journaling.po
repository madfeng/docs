# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-journaling.txt:3
msgid "Manage Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:7
msgid ""
"MongoDB uses *write ahead logging* to an on-disk :term:`journal` to "
"guarantee :doc:`write operation </core/write-operations>` durability and to "
"provide crash resiliency. Before applying a change to the data files, "
"MongoDB writes the change operation to the journal. If MongoDB should "
"terminate or encounter an error before it can write the changes from the "
"journal to the data files, MongoDB can re-apply the write operation and "
"maintain a consistent state."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:15
msgid ""
"*Without* a journal, if :program:`mongod` exits unexpectedly, you must "
"assume your data is in an inconsistent state, and you must run either "
":doc:`repair </tutorial/recover-data-following-unexpected-shutdown>` or, "
"preferably, :doc:`resync </tutorial/resync-replica-set-member>` from a clean"
" member of the replica set."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:21
msgid ""
"With journaling enabled, if :program:`mongod` stops unexpectedly, the "
"program can recover everything written to the journal, and the data remains "
"in a consistent state. By default, the greatest extent of lost writes, i.e.,"
" those not made to the journal, are those made in the last 100 milliseconds."
" See :setting:`~storage.journal.commitIntervalMs` for more information on "
"the default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:28
msgid ""
"With journaling, if you want a data set to reside entirely in RAM, you need "
"enough RAM to hold the data set plus the \"write working set.\" The \"write "
"working set\" is the amount of unique data you expect to see written between"
" re-mappings of the private view. For information on views, see :ref"
":`journaling-storage-views`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:36
msgid ""
"For 64-bit builds of :program:`mongod`, journaling is enabled by default.  "
"For other platforms, see :setting:`storage.journal.enabled`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:41
msgid "Procedures"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:44
msgid "Enable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:46
msgid ""
"For 64-bit builds of :program:`mongod`, journaling is enabled by default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:49
msgid ""
"To enable journaling, start :program:`mongod` with the :option:`--journal "
"<mongod --journal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:52
msgid ""
"If no journal files exist, when :program:`mongod` starts, it must "
"preallocate new journal files. During this operation, the :program:`mongod` "
"is not listening for connections until preallocation completes: for some "
"systems this may take a several minutes. During this period your "
"applications and the :program:`mongo` shell are not available."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:60
msgid "Disable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:64
msgid ""
"Do not disable journaling on production systems. If your :program:`mongod` "
"instance stops without shutting down cleanly unexpectedly for any reason, "
"(e.g. power failure) and you are not running with journaling, then you must "
"recover from an unaffected :term:`replica set` member or backup, as "
"described in :doc:`repair  </tutorial/recover-data-following-unexpected-"
"shutdown>`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:71
msgid ""
"To disable journaling, start :program:`mongod` with the :option:`--nojournal"
" <mongod --nojournal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:75
msgid "Get Commit Acknowledgment"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:77
msgid ""
"You can get commit acknowledgment with the :ref:`write-concern` and the "
"``j`` option. For details, see :ref:`write-concern-operation`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:84
msgid "Avoid Preallocation Lag"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:86
msgid ""
"To avoid :ref:`preallocation lag <journaling-journal-files>`, you can "
"preallocate files in the journal directory by copying them from another "
"instance of :program:`mongod`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:90
msgid ""
"Preallocated files do not contain data. It is safe to later remove them. But"
" if you restart :program:`mongod` with journaling, :program:`mongod` will "
"create them again."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:0
msgid "Example"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:98
msgid ""
"For demonstration purposes, the sequence starts by creating a set of journal"
" files in the usual way."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:101
msgid ""
"Create a temporary directory into which to create a set of journal files:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:108
msgid ""
"Create a set of journal files by staring a :program:`mongod` instance that "
"uses the temporary directory:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:115
msgid ""
"When you see the following log output, indicating :program:`mongod` has the "
"files, press CONTROL+C to stop the :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:123
msgid ""
"Preallocate journal files for the new instance of :program:`mongod` by "
"moving the journal files from the data directory of the existing instance to"
" the data directory of the new instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:131
msgid "Start the new :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:138
msgid "Monitor Journal Status"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:140
msgid "Use the following commands and methods to monitor journal status:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:142
msgid ":dbcommand:`serverStatus`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:144
msgid ""
"The :dbcommand:`serverStatus` command returns database status information "
"that is useful for assessing performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:147
msgid ":dbcommand:`journalLatencyTest`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:149
msgid ""
"Use :dbcommand:`journalLatencyTest` to measure how long it takes on your "
"volume to write to the disk in an append-only fashion. You can run this "
"command on an idle system to get a baseline sync time for journaling. You "
"can also run this command on a busy system to see the sync time on a busy "
"system, which may be higher if the journal directory is on the same volume "
"as the data files."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:156
msgid ""
"The :dbcommand:`journalLatencyTest` command also provides a way to check if "
"your disk drive is buffering writes in its local cache. If the number is "
"very low (i.e., less than 2 milliseconds) and the drive is non-SSD, the "
"drive is probably buffering writes. In that case, enable cache write-through"
" for the device in your operating system, unless you have a disk controller "
"card with battery backed RAM."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:166
msgid "Change the Group Commit Interval"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:170
msgid ""
"You can set the group commit interval using the "
":option:`--journalCommitInterval <mongod --journalCommitInterval>` command "
"line option. The allowed range is ``2`` to ``300`` milliseconds."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:174
msgid ""
"Lower values increase the durability of the journal at the expense of disk "
"performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:178
msgid "Recover Data After Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:180
msgid ""
"On a restart after a crash, MongoDB replays all journal files in the journal"
" directory before the server becomes available. If MongoDB must replay "
"journal files, :program:`mongod` notes these events in the log output."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:185
msgid ""
"There is no reason to run :dbcommand:`repairDatabase` in these situations."
msgstr ""
