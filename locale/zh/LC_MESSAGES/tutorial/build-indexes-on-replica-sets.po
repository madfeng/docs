# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/build-indexes-on-replica-sets.txt:8
msgid "Build Indexes on Replica Sets"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:12
msgid ""
"For replica sets, secondaries will begin building indexes *after* the "
":term:`primary` finishes building the index. In :term:`sharded clusters "
"<sharded cluster>`, the :program:`mongos` will send :method:`ensureIndex() "
"<db.collection.ensureIndex()>` to the primary members of the replica set for"
" each shard, which then replicate to the secondaries after the primary "
"finishes building the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:19
msgid ""
"To minimize the impact of building an index on your replica set, use the "
"following procedure to build indexes:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:0
msgid "See"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:26
msgid "Considerations"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:28
msgid ""
"Ensure that your :term:`oplog` is large enough to permit the indexing or re-"
"indexing operation to complete without falling too far behind to catch up. "
"See the :ref:`oplog sizing <replica-set-oplog-sizing>` documentation for "
"additional information."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:34
msgid ""
"This procedure *does* take one member out of the replica set at a time. "
"However, this procedure will only affect one member of the set at a time "
"rather than *all* secondaries at the same time."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:38
msgid ""
"Do **not** use this procedure when building a :ref:`unique index <index-"
"type-unique>` with the ``dropDups`` option."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:41
msgid ""
"Before version 2.6 :ref:`Background index creation operations <index-"
"creation-background>` become *foreground* indexing operations on "
":term:`secondary` members of replica sets. After 2.6, background index "
"builds replicate as background index builds on the secondaries."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:49
msgid "Procedure"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:53
msgid ""
"If you need to build an index in a :term:`sharded cluster`, repeat the "
"following procedure for each replica set that provides each :term:`shard`."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:60
msgid "Stop One Secondary"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:62
msgid ""
"Stop the :program:`mongod` process on one secondary. Restart the "
":program:`mongod` process *without* the :option:`--replSet <mongod "
"--replSet>` option and running on a different port. [#different-port]_ This "
"instance is now in \"standalone\" mode."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:67
msgid ""
"For example, if your :program:`mongod` *normally* runs with on the default "
"port of ``27017`` with the :option:`--replSet <mongod --replSet>` option you"
" would use the following invocation:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:75
msgid ""
"By running the :program:`mongod` on a different port, you ensure that the "
"other members of the replica set and all clients will not contact the member"
" while you are building the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:83
msgid "Build the Index"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:85
msgid ""
"Create the new index using the :method:`~db.collection.ensureIndex()` in the"
" :program:`mongo` shell, or comparable method in your driver. This operation"
" will create or rebuild the index on this :program:`mongod` instance"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:90
msgid ""
"For example, to create an ascending index on the ``username`` field of the "
"``records`` collection, use the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:98
msgid ""
":doc:`/tutorial/create-an-index` and :doc:`/tutorial/create-a-compound-"
"index` for more information."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:104
msgid "Restart the Program ``mongod``"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:106
msgid ""
"When the index build completes, start the :program:`mongod` instance with "
"the :option:`--replSet <mongod --replSet>` option on its usual port:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:113
msgid ""
"Modify the port number (e.g. ``27017``) or the replica set name (e.g. "
"``rs0``) as needed."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:116
msgid "Allow replication to catch up on this member."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:119
msgid "Build Indexes on all Secondaries"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:121
msgid ""
"Secondary members can now :doc:`build indexes in the background </tutorial"
"/build-indexes-in-the-background>`. Previously all index builds on "
"secondaries were in the foreground."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:126
msgid ""
"For each secondary in the set, build an index according to the following "
"steps:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:129
#: ../source/tutorial/build-indexes-on-replica-sets.txt:149
msgid ":ref:`tutorial-index-on-replica-sets-stop-one-member`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:130
#: ../source/tutorial/build-indexes-on-replica-sets.txt:151
msgid ":ref:`tutorial-index-on-replica-sets-build-index`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:131
#: ../source/tutorial/build-indexes-on-replica-sets.txt:153
msgid ":ref:`tutorial-index-on-replica-sets-restart-mongod`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:134
msgid "Build the Index on the Primary"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:136
msgid "To build an index on the primary you can either:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:138
msgid ""
":doc:`Build the index in the background </tutorial/build-indexes-in-the-"
"background>` on the primary."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:141
msgid ""
"Step down the primary using the :method:`rs.stepDown()` method in the "
":program:`mongo` shell to cause the current primary to become a secondary "
"graceful and allow the set to elect another member as primary."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:146
msgid ""
"Then repeat the index building procedure, listed below, to build the index "
"on the primary:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:155
msgid ""
"Building the index on the background, takes longer than the foreground index"
" build and results in a less compact index structure. Additionally, the "
"background index build may impact write performance on the primary. However,"
" building the index in the background allows the set to be continuously up "
"for write operations during while MongoDB builds the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
msgid "index"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
msgid "replica set"
msgstr ""
