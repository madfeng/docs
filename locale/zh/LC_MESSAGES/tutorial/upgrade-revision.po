# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/upgrade-revision.txt:3
msgid "Upgrade to the Latest Revision of MongoDB"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:7
msgid ""
"Revisions provide security patches, bug fixes, and new or changed features "
"that do not contain any backward breaking changes. Always upgrade to the "
"latest revision in your release series. The third number in the "
":ref:`MongoDB version number <release-version-numbers>` indicates the "
"revision."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:16
msgid "Before Upgrading"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:18
msgid ""
"Ensure you have an up-to-date backup of your data set. See "
":doc:`/core/backups`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:21
msgid ""
"Consult the following documents for any special considerations or "
"compatibility issues specific to your MongoDB release:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:24
msgid "The release notes, located at :doc:`/release-notes`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:26
msgid "The documentation for your driver. See :doc:`/applications/drivers`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:28
msgid ""
"If your installation includes :term:`replica sets <replica set>`, plan the "
"upgrade during a predefined maintenance window."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:33
msgid ""
"Before you upgrade a production environment, use the procedures in this "
"document to upgrade a *staging* environment that reproduces your production "
"environment, to ensure that your production configuration is compatible with"
" all changes."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:41
msgid "Upgrade Procedure"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:43
#: ../source/tutorial/upgrade-revision.txt:83
msgid "Always backup all of your data before upgrading MongoDB."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:45
msgid ""
"Upgrade each :program:`mongod` and :program:`mongos` binary separately, "
"using the procedure described here. When upgrading a binary, use the "
"procedure :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:49
msgid "Follow this upgrade procedure:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:51
msgid ""
"For deployments that use authentication, first upgrade all of your MongoDB "
":doc:`drivers </applications/drivers>`. To upgrade, see the documentation "
"for your driver."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:55
msgid ""
"Upgrade sharded clusters, as described in :ref:`upgrade-sharded-cluster`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:58
msgid "Upgrade any standalone instances. See :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:60
msgid ""
"Upgrade any replica sets that are not part of a sharded cluster, as "
"described in :ref:`upgrade-replica-set`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:66
msgid "Upgrade a MongoDB Instance"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:68
msgid ""
"To upgrade a :program:`mongod` or :program:`mongos` instance, use one of the"
" following approaches:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:71
msgid ""
"Upgrade the instance using the operating system's package management tool "
"and the official MongoDB packages. This is the preferred approach. See "
":doc:`/installation`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:75
msgid ""
"Upgrade the instance by replacing the existing binaries with new binaries. "
"See :ref:`upgrade-replace-binaries`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:81
msgid "Replace the Existing Binaries"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:85
msgid ""
"This section describes how to upgrade MongoDB by replacing the existing "
"binaries. The preferred approach to an upgrade is to use the operating "
"system's package management tool and the official MongoDB packages, as "
"described in :doc:`/installation`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:90
msgid ""
"To upgrade a :program:`mongod` or :program:`mongos` instance by replacing "
"the existing binaries:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:93
msgid ""
"Download the binaries for the latest MongoDB revision from the `MongoDB "
"Download Page`_ and store the binaries in a temporary location. The binaries"
" download as compressed files that uncompress to the directory structure "
"used by the MongoDB installation."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:98
msgid "Shutdown the instance."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:100
msgid "Replace the existing MongoDB binaries with the downloaded binaries."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:102
msgid "Restart the instance."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:109
msgid "Upgrade Sharded Clusters"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:111
msgid "To upgrade a sharded cluster:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:113
msgid ""
"Disable the cluster's balancer, as described in :ref:`sharding-balancing-"
"disable-temporarily`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:116
msgid ""
"Upgrade each :program:`mongos` instance by following the instructions below "
"in :ref:`upgrade-mongodb-instance`. You can upgrade the :program:`mongos` "
"instances in any order."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:120
msgid ""
"Upgrade each :program:`mongod` :ref:`config server <sharding-config-server>`"
" individually starting with the last config server listed in your "
":option:`mongos --configdb` string and working backward. To keep the cluster"
" online, make sure at least one config server is always running. For each "
"config server upgrade, follow the instructions below in :ref:`upgrade-"
"mongodb-instance`"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:0
msgid "Example"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:133
msgid "You would upgrade the config servers in the following order:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:135
msgid "cfg2.example.net"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:136
msgid "cfg1.example.net"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:137
msgid "cfg0.example.net"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:139
msgid "Upgrade each shard."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:141
msgid ""
"If a shard is a replica set, upgrade the shard using the procedure below "
"titled :ref:`upgrade-replica-set`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:144
msgid ""
"If a shard is a standalone instance, upgrade the shard using the procedure "
"below titled :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:148
msgid ""
"Re-enable the balancer, as described in :ref:`sharding-balancing-re-enable`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:153
msgid "Upgrade Replica Sets"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:155
msgid ""
"To upgrade a replica set, upgrade each member individually, starting with "
"the :term:`secondaries <secondary>` and finishing with the :term:`primary`. "
"Plan the upgrade during a predefined maintenance window."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:162
msgid "Upgrade Secondaries"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:164
msgid "Upgrade each secondary separately as follows:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:166
msgid ""
"Upgrade the secondary's :program:`mongod` binary by following the "
"instructions below in :ref:`upgrade-mongodb-instance`."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:169
msgid ""
"After upgrading a secondary, wait for the secondary to recover to the "
"``SECONDARY`` state before upgrading the next instance. To check the "
"member's state, issue :method:`rs.status()` in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:174
msgid ""
"The secondary may briefly go into ``STARTUP2`` or ``RECOVERING``. This is "
"normal. Make sure to wait for the secondary to fully recover to "
"``SECONDARY`` before you continue the upgrade."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:179
msgid "Upgrade the Primary"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:181
msgid ""
"Step down the primary to initiate the normal :ref:`failover <replica-set-"
"failover>` procedure. Using one of the following:"
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:184
msgid "The :method:`rs.stepDown()` helper in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:186
msgid "The :dbcommand:`replSetStepDown` database command."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:188
msgid ""
"During failover, the set cannot accept writes. Typically this takes 10-20 "
"seconds. Plan the upgrade during a predefined maintenance window."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:192
msgid ""
"Stepping down the primary is preferable to directly *shutting down* the "
"primary. Stepping down expedites the failover procedure."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:196
msgid ""
"Once the primary has stepped down, call the :method:`rs.status()` method "
"from the :program:`mongo` shell until you see that another member has "
"assumed the ``PRIMARY`` state."
msgstr ""

#: ../source/tutorial/upgrade-revision.txt:200
msgid ""
"Shut down the original primary and upgrade its instance by following the "
"instructions below in :ref:`upgrade-mongodb-instance`."
msgstr ""
