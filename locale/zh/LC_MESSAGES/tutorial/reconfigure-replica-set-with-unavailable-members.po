# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:3
msgid "Reconfigure a Replica Set with Unavailable Members"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:7
msgid ""
"To reconfigure a :term:`replica set` when a **minority** of members are "
"unavailable, use the :method:`rs.reconfig()` operation on the current "
":term:`primary`, following the example in the :ref:`Replica Set "
"Reconfiguration Procedure <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:14
msgid ""
"This document provides the following options for re-configuring a replica "
"set when a **majority** of members are *not* accessible:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:17
msgid ":ref:`replica-set-force-reconfiguration`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:18
msgid ":ref:`replica-set-reconfigure-by-replacing`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:20
msgid ""
"You may need to use one of these procedures, for example, in a "
"geographically distributed replica set, where *no* local group of members "
"can reach a majority. See :ref:`replica-set-elections` for more information "
"on this situation."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:29
msgid "Reconfigure by Forcing the Reconfiguration"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:33
msgid ""
"This procedure lets you recover while a majority of :term:`replica set` "
"members are down or unreachable. You connect to any surviving member and use"
" the ``force`` option to the :method:`rs.reconfig()`  method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:37
msgid ""
"The ``force`` option forces a new configuration onto the member. Use this "
"procedure only to recover from catastrophic interruptions. Do not use "
"``force`` every time you reconfigure. Also, do not use the ``force`` option "
"in any automatic scripts and do not use ``force`` when there is still a "
":term:`primary`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:42
msgid "To force reconfiguration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:44
msgid "Back up a surviving member."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:46
msgid ""
"Connect to a surviving member and save the current configuration. Consider "
"the following example commands for saving the configuration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:55
msgid ""
"On the same member, remove the down and unreachable members of the replica "
"set from the :data:`~local.system.replset.members` array by setting the "
"array equal to the surviving members alone. Consider the following example, "
"which uses the ``cfg`` variable created in the previous step:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:65
msgid ""
"On the same member, reconfigure the set by using the :method:`rs.reconfig()`"
" command with the ``force`` option set to ``true``:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:73
msgid ""
"This operation forces the secondary to use the new configuration. The "
"configuration is then propagated to all the surviving members listed in the "
"``members`` array. The replica set then elects a new primary."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:79
msgid ""
"When you use ``force : true``, the version number in the replica set "
"configuration increases significantly, by tens or hundreds of thousands. "
"This is normal and designed to prevent set version collisions if you "
"accidentally force re-configurations on both sides of a network partition "
"and then the network partitioning ends."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:86
msgid ""
"If the failure or partition was only temporary, shut down or decommission "
"the removed members as soon as possible."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:92
msgid "Reconfigure by Replacing the Replica Set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:94
msgid ""
"Use the following procedure **only** for versions of MongoDB prior to "
"version 2.0. If you're running MongoDB 2.0 or later, use the above "
"procedure, :ref:`replica-set-force-reconfiguration`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:98
msgid ""
"These procedures are for situations where a *majority* of the :term:`replica"
" set` members are down or unreachable. If a majority is *running*, then skip"
" these procedures and instead use the :method:`rs.reconfig()` command "
"according to the examples in :ref:`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:104
msgid ""
"If you run a pre-2.0 version and a majority of your replica set is down, you"
" have the two options described here. Both involve replacing the replica "
"set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:109
msgid "Reconfigure by Turning Off Replication"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:111
msgid ""
"This option replaces the :term:`replica set` with a :term:`standalone` "
"server."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:113
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:151
msgid ""
"Stop the surviving :program:`mongod` instances. To ensure a clean shutdown, "
"use an existing :term:`control script` or use the "
":method:`db.shutdownServer()` method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:116
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:155
msgid ""
"For example, to use the :method:`db.shutdownServer()` method, connect to the"
" server using the :program:`mongo` shell and issue the following sequence of"
" commands:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:125
msgid ""
"Create a backup of the data directory (i.e. :setting:`~storage.dbPath`) of "
"the surviving members of the set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:0
msgid "Optional"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:131
msgid ""
"Restart one of the :program:`mongod` instances *without* the "
":option:`--replSet <mongod --replSet>` parameter."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:134
msgid ""
"The data is now accessible and provided by a single server that is not a "
"replica set member. Clients can use this server for both reads and writes."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:138
msgid ""
"When possible, re-deploy a replica set to provide redundancy and to protect "
"your deployment from operational interruption."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:144
msgid "Reconfigure by \"Breaking the Mirror\""
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:146
msgid ""
"This option selects a surviving :term:`replica set` member to be the new "
":term:`primary` and to \"seed\" a new replica set. In the following "
"procedure, the new primary is ``db0.example.net``. MongoDB copies the data "
"from ``db0.example.net`` to all the other members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:164
msgid ""
"Move the data directories (i.e. :setting:`~storage.dbPath`) for all the "
"members except ``db0.example.net``, so that all the members except "
"``db0.example.net`` have empty data directories. For example:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:173
msgid ""
"Move the data files for ``local`` database (i.e. ``local.*``) so that "
"``db0.example.net`` has no local database. For example"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:181
msgid "Start each member of the replica set normally."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:183
msgid ""
"Connect to ``db0.example.net`` in a :program:`mongo` shell and run "
":method:`rs.initiate()` to initiate the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:186
msgid ""
"Add the other set members using :method:`rs.add()`. For example, to add a "
"member running on ``db1.example.net`` at port ``27017``, issue the following"
" command:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:194
msgid ""
"MongoDB performs an initial sync on the added members by copying all data "
"from ``db0.example.net`` to the added members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:197
msgid ":doc:`/tutorial/resync-replica-set-member`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
msgid "replica set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
msgid "reconfiguration"
msgstr ""
