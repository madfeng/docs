# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# e9221665b53945baa0db169f64463235
#: ../source/core/authentication.txt:5
msgid "Authentication"
msgstr ""

# 6fecbcd2fbe642cdb38d4f20be5c19a2
#: ../source/core/authentication.txt:77
msgid "``MONGODB-CR`` Authentication"
msgstr ""

# 7ea52ef5bb8a44309035831ae7c75ed1
#: ../source/core/authentication.txt:105
msgid "x.509 Certificate Authentication"
msgstr ""

# aaf0a70e894b4e77962b1cb569377054
#: ../source/core/authentication.txt:109
msgid ""
"MongoDB supports x.509 certificate authentication for use with a secure "
":doc:`SSL connection </tutorial/configure-ssl>`."
msgstr ""

# 2269e10e06004abd8405d8a07454078a
#: ../source/core/authentication.txt:123
msgid "Kerberos Authentication"
msgstr ""

# 6d5455383aa445ff846db5bd4ab8a5cd
#: ../source/core/authentication.txt:143
msgid "LDAP Proxy Authority Authentication"
msgstr ""

# 90dc41a7f854468c9061a11114d6a217
#: ../source/core/authentication.txt:157
msgid "Authentication Behavior"
msgstr ""

# 766e01371b5146af9cb28dac299afa9c
#: ../source/core/authentication.txt:258
msgid "Localhost Exception"
msgstr ""

# b3c06e78f2f6495385affb68814349e7
#: ../source/core/authentication.txt:283
msgid ""
"To prevent unauthorized access to a cluster's shards, you must either create"
" an administrator on each shard or disable the localhost exception. To "
"disable the localhost exception, use :setting:`setParameter` to set the "
":parameter:`enableLocalhostAuthBypass` parameter to ``0`` during startup."
msgstr ""

# da0029147c374ecfb80a8be125cf31a4
#: ../source/core/authentication.txt:162
msgid "Client Authentication"
msgstr ""

# 9ab7e563c8ac4a00bad1cc8aa1ae2b10
#: ../source/core/authentication.txt:177
msgid "See :doc:`/tutorial/authenticate-as-client` for more information."
msgstr ""

# 0f9af57b53064b4fac40e27538148e33
#: ../source/core/authentication.txt:182
msgid "Authentication Between MongoDB Instances"
msgstr ""

# 95b9a3341cff4290bb97706f1d317f90
#: ../source/core/authentication.txt:198
msgid ""
"Always run replica sets and sharded clusters in a trusted networking "
"environment. Ensure that the network permits only trusted traffic to reach "
"each :program:`mongod` and :program:`mongos` instance."
msgstr ""

# e6c8a1448bff4263a08b6439f7cfcf0a
#: ../source/core/authentication.txt:202
msgid ""
"Use your environment's firewall and network routing to ensure that traffic "
"*only* from clients and other members can reach your :program:`mongod` and "
":program:`mongos` instances. If needed, use virtual private networks (VPNs) "
"to ensure secure connections over wide area networks (WANs)."
msgstr ""

# 0e65e2274b9242938607682c85d2bc90
#: ../source/core/authentication.txt:207
msgid "Always ensure that:"
msgstr ""

# 73081255a1f0444db41de6be1b35cc1e
#: ../source/core/authentication.txt:209
msgid ""
"Your network configuration will allow every member of the replica set or "
"sharded cluster to contact every other member."
msgstr ""

# 2a09b616939147f8aad4526f81856833
#: ../source/core/authentication.txt:212
msgid ""
"If you use MongoDB's authentication system to limit access to your "
"infrastructure, ensure that you configure a :setting:`~security.keyFile` on "
"all members to permit authentication."
msgstr ""

# 4da052fe731146099eb190067a2b02a7
#: ../source/core/authentication.txt:226
msgid "Authentication on Sharded Clusters"
msgstr ""

# 2d841ae099ce442e88c4b3c2487c7807
#: ../source/core/authentication.txt:221
msgid "sharding"
msgstr ""

# 2d841ae099ce442e88c4b3c2487c7807
#: ../source/core/authentication.txt:221
msgid "localhost"
msgstr ""

#: ../source/core/authentication.txt:9
msgid ""
"Authentication is the process of verifying the identity of a client. When "
"access control, i.e. :doc:`authorization </core/authorization>`, is enabled,"
" MongoDB requires all clients to authenticate themselves first in order to "
"determine the access for the client."
msgstr ""

#: ../source/core/authentication.txt:14
msgid ""
"Although authentication and :doc:`authorization </core/authorization>` are "
"closely connected, authentication is distinct from authorization. "
"Authentication verifies the identity of a user; authorization determines the"
" verified user's access to resources and operations."
msgstr ""

#: ../source/core/authentication.txt:19
msgid ""
"MongoDB supports a number of :ref:`authentication mechanisms <security-"
"authentication-mechanisms>` that clients can use to verify their identity. "
"These mechanisms allow MongoDB to integrate into your existing "
"authentication system. See :ref:`security-authentication-mechanisms` for "
"details."
msgstr ""

#: ../source/core/authentication.txt:25
msgid ""
"In addition to verifying the identity of a client, MongoDB can require "
"members of replica sets and sharded clusters to :ref:`authenticate their "
"membership <inter-process-auth>` to their respective replica set or sharded "
"cluster. See :ref:`inter-process-auth` for more information."
msgstr ""

#: ../source/core/authentication.txt:32
msgid "Client Users"
msgstr ""

#: ../source/core/authentication.txt:34
msgid ""
"To authenticate a client in MongoDB, you must add a corresponding user to "
"MongoDB. When adding a user, you create the user in a specific database. "
"Together, the user's name and database serve as a unique identifier for that"
" user. That is, if two users have the same name but are created in different"
" databases, they are two separate users. To authenticate, the client must "
"authenticate the user against the user's database. For instance, if using "
"the :program:`mongo` shell as a client, you can specify the database for the"
" user with the :ref:`--authenticationDatabase <mongo-shell-authentication-"
"options>` option."
msgstr ""

#: ../source/core/authentication.txt:45
msgid ""
"To add and manage user information, MongoDB provides the "
":method:`db.createUser()` method as well as other :ref:`user management "
"methods <user-management-methods>`. For an example of adding a user to "
"MongoDB, see :doc:`/tutorial/add-user-to-database`."
msgstr ""

#: ../source/core/authentication.txt:50
msgid ""
"MongoDB stores all user information, including :data:`name "
"<admin.system.users.user>`, :data:`password "
"<admin.system.users.credentials>`, and the :data:`user's database "
"<admin.system.users.db>`, in the :doc:`system.users </reference/system-"
"users-collection>` collection in the ``admin`` database."
msgstr ""

#: ../source/core/authentication.txt:60
msgid "Authentication Mechanisms"
msgstr ""

#: ../source/core/authentication.txt:62
msgid ""
"MongoDB supports multiple authentication mechanisms. MongoDB's default "
"authentication method is a :ref:`challenge and response mechanism (MONGODB-"
"CR) <authentication-mongodb-cr>`. MongoDB also supports :ref:`x509 "
"certificate authentication <security-auth-x509>`, :ref:`LDAP proxy "
"authentication <security-auth-ldap>`, and :ref:`Kerberos authentication "
"<security-auth-kerberos>`."
msgstr ""

#: ../source/core/authentication.txt:69
msgid "This section introduces the mechanisms available in MongoDB."
msgstr ""

#: ../source/core/authentication.txt:71
msgid ""
"To specify the authentication mechanism to use, see "
":parameter:`authenticationMechanisms`."
msgstr ""

#: ../source/core/authentication.txt:79
msgid ""
"``MONGODB-CR`` is a challenge-response mechanism that authenticates users "
"through passwords. ``MONGODB-CR`` is the default mechanism."
msgstr ""

#: ../source/core/authentication.txt:82
msgid ""
"When you use ``MONGODB-CR`` authentication, ``MONGODB-CR`` verifies the user"
" against the user's :data:`name <admin.system.users.user>`, :data:`password "
"<admin.system.users.credentials>` and :data:`database "
"<admin.system.users.db>`. The user's database is the database where the user"
" was created, and the user's database and the user's name together serves to"
" identify the user."
msgstr ""

#: ../source/core/authentication.txt:89
msgid ""
"Using :setting:`key files <security.keyFile>`, you can also use ``MONGODB-"
"CR`` authentication for the :ref:`internal member authentication <inter-"
"process-auth>` of replica set members and sharded cluster members. The "
"contents of the key files serve as the shared password for the members. You "
"must store the key file on each :program:`mongod` or :program:`mongos` "
"instance for that replica set or sharded cluster. The content of the key "
"file is arbitrary but must be the same on all :program:`mongod` and "
":program:`mongos` instances that connect to each other."
msgstr ""

#: ../source/core/authentication.txt:99
msgid ""
"See :doc:`/tutorial/generate-key-file` for instructions on generating a key "
"file and turning on key file authentication for members."
msgstr ""

#: ../source/core/authentication.txt:112
msgid ""
"To authenticate to servers, clients can use x.509 certificates instead of "
"usernames and passwords. See :ref:`x509-client-authentication` for more "
"information."
msgstr ""

#: ../source/core/authentication.txt:116
msgid ""
"For membership authentication, members of sharded clusters and replica sets "
"can use x.509 certificates instead of key files. See :ref:`x509-internal-"
"authentication` for more information."
msgstr ""

#: ../source/core/authentication.txt:125
msgid ""
"`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_ "
"supports authentication using a Kerberos service. Kerberos is an industry "
"standard authentication protocol for large client/server systems."
msgstr ""

#: ../source/core/authentication.txt:129
msgid ""
"To use MongoDB with Kerberos, you must have a properly configured Kerberos "
"deployment, configured :ref:`Kerberos service principals <kerberos-service-"
"principal>` for MongoDB, and added :ref:`Kerberos user principal <kerberos-"
"user-principal>` to MongoDB."
msgstr ""

#: ../source/core/authentication.txt:134
msgid ""
"See :doc:`/core/kerberos` for more information on Kerberos and MongoDB. To "
"configure MongoDB to use Kerberos authentication, see :doc:`/tutorial"
"/control-access-to-mongodb-with-kerberos-authentication` and :doc:`/tutorial"
"/control-access-to-mongodb-windows-with-kerberos-authentication`."
msgstr ""

#: ../source/core/authentication.txt:145
msgid ""
"`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_ "
"supports proxy authentication through a Lightweight Directory Access "
"Protocol (LDAP) service. See :doc:`/tutorial/configure-ldap-sasl-openldap` "
"and :doc:`/tutorial/configure-ldap-sasl-activedirectory`."
msgstr ""

#: ../source/includes/admonition-mongodb-enterprise-windows-ldap.rst:1
msgid ""
"MongoDB Enterprise for Windows does **not** include LDAP support for "
"authentication. However, MongoDB Enterprise for Linux supports using LDAP "
"authentication with an ActiveDirectory server."
msgstr ""

#: ../source/core/authentication.txt:153
msgid ""
"MongoDB does **not** support LDAP authentication in mixed sharded cluster "
"deployments that contain both version 2.4 and version 2.6 shards."
msgstr ""

#: ../source/core/authentication.txt:164
msgid ""
"Clients can authenticate using the :ref:`challenge and response "
"<authentication-mongodb-cr>`, :ref:`x.509 <security-auth-x509>`, :ref:`LDAP "
"Proxy <security-auth-ldap>` and :ref:`Kerberos <security-auth-kerberos>` "
"mechanisms."
msgstr ""

#: ../source/core/authentication.txt:169
msgid ""
"Each client connection should authenticate as exactly one user. If a client "
"authenticates to a database as one user and later authenticates to the same "
"database as a different user, the second authentication invalidates the "
"first. While clients can authenticate as multiple users if the users are "
"defined on different databases, we recommend authenticating as one user at a"
" time, providing the user with appropriate privileges on the databases "
"required by the user."
msgstr ""

#: ../source/core/authentication.txt:184
msgid ""
"You can authenticate members of :term:`replica sets <replica set>` and "
":term:`sharded clusters <sharded cluster>`. To authenticate members of a "
"single MongoDB deployment to each other, MongoDB can use the "
":setting:`~security.keyFile` and :ref:`x.509 <security-auth-x509>` "
"mechanisms. Using :setting:`~security.keyFile` authentication for members "
"also enables authorization."
msgstr ""

#: ../source/core/authentication.txt:216
msgid ""
"See :doc:`/tutorial/generate-key-file` for instructions on generating a key "
"file and turning on key file authentication for members. For an example of "
"using key files for sharded cluster authentication, see :doc:`/tutorial"
"/enable-authentication-in-sharded-cluster`."
msgstr ""

#: ../source/core/authentication.txt:228
msgid ""
"In sharded clusters, applications authenticate to directly to "
":program:`mongos` instances, using credentials stored in the ``admin`` "
"database of the :term:`config servers <config server>`. The shards in the "
"sharded cluster also have credentials, and clients can authenticate directly"
" to the shards to perform maintenance directly on the shards. In general, "
"applications and clients should connect to the sharded cluster through the "
":program:`mongos`."
msgstr ""

#: ../source/core/authentication.txt:237
msgid ""
"Previously, the credentials for authenticating to a database on a cluster "
"resided on the :ref:`primary shard <primary-shard>` for that database."
msgstr ""

#: ../source/core/authentication.txt:242
msgid ""
"Some maintenance operations, such as :dbcommand:`cleanupOrphaned`, "
":dbcommand:`compact`, :method:`rs.reconfig()`, require direct connections to"
" specific shards in a sharded cluster. To perform these operations with "
"authentication enabled, you must connect directly to the shard and "
"authenticate as a *shard local* administrative user. To create a *shard "
"local* administrative user, connect directly to the shard and create the "
"user. MongoDB stores *shard local* users in the ``admin`` database of the "
"shard itself. These *shard local* users are completely independent from the "
"users added to the sharded cluster via :program:`mongos`. *Shard local* "
"users are local to the shard and are inaccessible by :program:`mongos`. "
"Direct connections to a shard should only be for shard-specific maintenance "
"and configuration."
msgstr ""

#: ../source/core/authentication.txt:260
msgid ""
"The localhost exception allows you to enable authorization before creating "
"the first user in the system. When active, the localhost exception allows "
"all connections from the localhost interface to have full access to that "
"instance. The exception applies only when there are no users created in the "
"MongoDB instance."
msgstr ""

#: ../source/core/authentication.txt:266
msgid ""
"If you use the localhost exception when deploying a new MongoDB system, the "
"first user you create must be in the ``admin`` database with privileges to "
"create other users, such as a user with the :authrole:`userAdmin` or "
":authrole:`userAdminAnyDatabase` role. See :doc:`/tutorial/enable-"
"authentication` and :doc:`/tutorial/add-user-administrator` for more "
"information."
msgstr ""

#: ../source/core/authentication.txt:273
msgid ""
"In the case of a sharded cluster, the localhost exception can apply to the "
"cluster as a whole or separately to each shard. The localhost exception can "
"apply to the cluster as a whole if there are no user information stored on "
"the config servers *and* clients access via :program:`mongos` instances."
msgstr ""

#: ../source/core/authentication.txt:279
msgid ""
"The localhost exception can apply separately to each shard if there is no "
"user information stored on the shard itself and clients connect to the shard"
" directly."
msgstr ""

#~ msgid ""
#~ "Authentication is the process of verifying the identity of a client. When "
#~ "enabled, MongoDB requires all clients to provide credentials to access "
#~ "MongoDB databases. By default, MongoDB does not require authentication."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB supports a number of authentication mechanisms, or methods clients "
#~ "can use to validate their identity. These mechanisms allow MongoDB to "
#~ "integrate into existing authentication systems that your environments may "
#~ "use. MongoDB's default authentication method is a challenge and response "
#~ "mechanism. MongoDB also supports x509 certificate authentication, LDAP proxy"
#~ " authentication, and Kerberos authentication."
#~ msgstr ""

#~ msgid ""
#~ "With authentication, MongoDB requires authentication for all clients, "
#~ "including connections between all MongoDB components in a deployment. See "
#~ ":ref:`inter-process-auth-key-file` for more information."
#~ msgstr ""

#~ msgid ""
#~ "Authentication is distinct from :ref:`authorization <authorization>`, which "
#~ "determines the client's access to resources and operations."
#~ msgstr ""

#~ msgid "Authentication Mechanisms and Credential Storage"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB supports multiple authentication mechanisms to fit into existing "
#~ "deployments and use existing authentication infrastructure. To declare a "
#~ "specific authentication mechanism use the "
#~ ":parameter:`authenticationMechanisms` parameter. For details, see "
#~ ":doc:`/tutorial/enable-authentication`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB represents authentication credentials differently depending on "
#~ "authentication mechanism. This section addresses all available methods and "
#~ "describes how each method stores user credentials."
#~ msgstr ""

#~ msgid ""
#~ "``MONGODB-CR`` is a challenge-response mechanism that authenticates users "
#~ "through passwords. ``MONGODB-CR`` applies by default when you enable "
#~ "authentication in MongoDB without setting a mechanism in the "
#~ ":parameter:`authenticationMechanisms` parameter. You can also explicitly "
#~ "apply ``MONGODB-CR`` by setting it as the value of "
#~ ":parameter:`authenticationMechanisms`."
#~ msgstr ""

#~ msgid ""
#~ "When you enable ``MONGODB-CR`` authentication using the "
#~ ":setting:`~security.authentication` setting, MongoDB uses the credentials "
#~ "stored in the ``admin`` database's :data:`system.users <admin.system.users>`"
#~ " collection."
#~ msgstr ""

#~ msgid ""
#~ "When you enable ``MONGODB-CR`` authentication using the "
#~ ":setting:`~security.keyFile` setting, you must store the key file on each "
#~ ":program:`mongod` or :program:`mongos` instance. MongoDB uses the key file "
#~ "as stored on each instance. See :doc:`/tutorial/generate-key-file` for "
#~ "instructions on generating a key file."
#~ msgstr ""

#~ msgid ""
#~ "Instead of usernames and passwords, clients can use certificates to "
#~ "authenticate to servers."
#~ msgstr ""

#~ msgid ""
#~ "Instead of key files, MongoDB instances can use certificates to authenticate"
#~ " to sharded clusters and replica sets."
#~ msgstr ""

#~ msgid ""
#~ "When used to verify membership in a sharded cluster or replica set, an x.509"
#~ " certificate must have certain properties, as described in :ref:`x509"
#~ "-internal-authentication`."
#~ msgstr ""

#~ msgid "For more information, see :doc:`/tutorial/configure-x509`."
#~ msgstr ""

#~ msgid ""
#~ "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_ "
#~ "supports authentication using a Kerberos service. Kerberos is an industry "
#~ "standard authentication protocol for large client/server system."
#~ msgstr ""

#~ msgid ""
#~ "To use MongoDB with Kerberos, you must have a properly configured Kerberos "
#~ "deployment and the ability to generate valid *keytab* files."
#~ msgstr ""

#~ msgid ""
#~ "When you use MongoDB with Kerberos, you must store a *keytab* file on each "
#~ ":program:`mongod` and :program:`mongos` instance. Transmit keytab files only"
#~ " over secure channels."
#~ msgstr ""

#~ msgid ""
#~ "You must create corresponding user credentials in the :data:`system.users "
#~ "<admin.system.users>` collection on the ``admin`` database."
#~ msgstr ""

#~ msgid ""
#~ "For more information, see :doc:`/tutorial/control-access-to-mongodb-with-"
#~ "kerberos-authentication`."
#~ msgstr ""

#~ msgid ""
#~ "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_ "
#~ "supports proxy authentication through a Lightweight Directory Access "
#~ "Protocol (LDAP) service. See :doc:`/tutorial/configure-ldap-sasl-"
#~ "authentication`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB Enterprise for Windows does **not** include LDAP support for "
#~ "authentication."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB does **not** support LDAP authentication in mixed sharded cluster "
#~ "deployments that contain both version 2.4 and version 2.6 shards. To upgrade"
#~ " to 2.6, see :doc:`/release-notes/2.6-upgrade` for upgrade instructions."
#~ msgstr ""

#~ msgid "Authentication Options"
#~ msgstr ""

#~ msgid ""
#~ "Clients can authenticate using the Challenge Response, :ref:`x.509 "
#~ "<security-auth-x509>`, :ref:`LDAP Proxy <security-auth-ldap>` and "
#~ ":ref:`Kerberos <security-auth-kerberos>` methods."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB can use the :setting:`~security.keyFile` and :ref:`x.509 <security-"
#~ "auth-x509>` methods to authenticate members of a single MongoDB deployment "
#~ "to each other."
#~ msgstr ""

#~ msgid ""
#~ "The localhost exception allows you to enable authentication before creating "
#~ "the first user in the system. When active, the localhost exception allows "
#~ "all connections from the localhost interface to have full access to that "
#~ "instance. The exception applies only when there are no user documents in the"
#~ " ``admin`` database of a MongoDB instance."
#~ msgstr ""

#~ msgid ""
#~ "If you use the localhost exception when deploying a new MongoDB system, the "
#~ "first user created must be an administrator who has privileges to create "
#~ "other users, such as a user with the :authrole:`userAdmin` or "
#~ ":authrole:`userAdminAnyDatabase` role. See :doc:`/tutorial/enable-"
#~ "authentication` and :doc:`/tutorial/add-user-administrator` for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "In the case of a sharded cluster, the localhost exception applies to the "
#~ "cluster as a whole when no user exists in the cluster's ``admin`` database, "
#~ "which exists on the config servers and clients access via :program:`mongos` "
#~ "instances. The localhost exception applies separately on each shard "
#~ "according to whether a user exists in the shard's ``admin`` database."
#~ msgstr ""

#~ msgid ""
#~ "Each client connection should authenticate as exactly one user. If a client "
#~ "authenticates to a database as one user and later authenticates on the same "
#~ "database as a different user, the second authentication invalidates the "
#~ "first. Clients may be authenticated to multiple databases at the same time."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB stores all user information, including credentials and "
#~ ":doc:`authorization </core/authorization>` information, for a MongoDB "
#~ "instance in the :data:`system.users <admin.system.users>` collection in the "
#~ "``admin`` database."
#~ msgstr ""

#~ msgid ""
#~ ":term:`Replica sets <replica set>` and :term:`sharded clusters <sharded "
#~ "cluster>` require authentication between MongoDB instances. The default "
#~ "mechanism for authentication between MongoDB instances is the "
#~ ":setting:`~security.keyFile` setting. The key file serves as a shared "
#~ "password. The content of the key file is arbitrary but must be the same on "
#~ "all :program:`mongod` and :program:`mongos` instances that connect to each "
#~ "other."
#~ msgstr ""

#~ msgid ""
#~ "In a sharded cluster, you can authenticate to the cluster as a whole, to a "
#~ "specific database on the cluster, or to a given shard. This section "
#~ "describes how to authenticate to each and where the credentials for "
#~ "authenticating to each are stored."
#~ msgstr ""

#~ msgid ""
#~ "To authenticate to a sharded cluster, connect and authenticate to the "
#~ ":program:`mongos` instance. The credentials all users of a sharded cluster "
#~ "reside on the ``admin`` databases of the :ref:`config servers <sharding-"
#~ "config-server>`."
#~ msgstr ""

#~ msgid ""
#~ "Previously, the credentials for authenticating to a database on a cluster "
#~ "resided on the :program:`mongod` instance that is the :ref:`primary shard "
#~ "<primary-shard>` for that database."
#~ msgstr ""

#~ msgid ""
#~ "To perform maintenance operations that require direct connections to "
#~ "specific shards in a sharded cluster, (e.g. :dbcommand:`cleanupOrphaned`, "
#~ ":dbcommand:`compact`, :method:`rs.reconfig()`) you must create *shard local*"
#~ " administrative users for each shard. The credentials for these users reside"
#~ " in the ``admin`` database of the shard."
#~ msgstr ""

#~ msgid ""
#~ "For additional information, see :doc:`/tutorial/enable-authentication-in-"
#~ "sharded-cluster`."
#~ msgstr ""
