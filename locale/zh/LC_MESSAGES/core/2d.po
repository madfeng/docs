# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 6e36f1bc4d3e438a934b8682b2201875
#: ../source/core/2d.txt:3
msgid "``2d`` Indexes"
msgstr ""

# 66d5d6f472c146c4b3bd83c570d6fab2
#: ../source/core/2d.txt:7
msgid ""
"Use a ``2d`` index for data stored as points on a two-dimensional plane. The"
" ``2d`` index is intended for legacy coordinate pairs used in MongoDB 2.2 "
"and earlier."
msgstr ""

# db35b801a86248939e5a9a1a1fedc460
#: ../source/core/2d.txt:11
msgid "Use a ``2d`` index if:"
msgstr ""

# 57faad288f584e87873b32816669977d
#: ../source/core/2d.txt:13
msgid ""
"your database has legacy location data from MongoDB 2.2 or earlier, *and*"
msgstr ""

# 6e79e738940248b28ce6ddefe6e9e325
#: ../source/core/2d.txt:15
msgid ""
"you do not intend to store any location data as :term:`GeoJSON` objects."
msgstr ""

# 04991cdd31834fd98fab55e8a6409b5c
#: ../source/core/2d.txt:17
msgid ""
"See the :doc:`/reference/operator/query-geospatial` for the query operators "
"that support geospatial queries."
msgstr ""

# 04bfc9615c024ffa9e265709a83bea10
#: ../source/core/2d.txt:21
msgid "Considerations"
msgstr ""

# 05c6b76da9b94f24bf5c4aad19080d15
#: ../source/core/2d.txt:27
msgid ""
"Do not use a ``2d`` index if your location data includes GeoJSON objects. To"
" index on both legacy coordinate pairs *and* GeoJSON objects, use a "
":doc:`2dsphere </core/2dsphere>` index."
msgstr ""

# c42144dd50c04585b9dd2bcd33fe21e3
#: ../source/core/2d.txt:31
msgid ""
"You cannot use a ``2d`` index as a shard key when sharding a collection. "
"However, you can create and maintain a geospatial index on a sharded "
"collection by using a different field as the shard key."
msgstr ""

# ab22439638ca455e9ca93e0a9c5110ee
#: ../source/core/2d.txt:36
msgid "Behavior"
msgstr ""

# 8ec27beb041045d7b068f764fc264821
#: ../source/core/2d.txt:38
msgid ""
"The ``2d`` index supports calculations on a flat, Euclidean plane. The "
"``2d`` index also supports *distance-only* calculations on a sphere, but for"
" *geometric* calculations (e.g. :query:`$geoWithin`) on a sphere, store data"
" as GeoJSON objects and use the ``2dsphere`` index type."
msgstr ""

# a2d95735f25c4fc9ae1abf49944e38a9
#: ../source/core/2d.txt:44
msgid ""
"A ``2d`` index can reference two fields. The first must be the location "
"field. A ``2d`` compound index constructs queries that select first on the "
"location field, and then filters those results by the additional criteria. A"
" compound ``2d`` index can cover queries."
msgstr ""

# 2547d5ef2da44809bb1ef897a2895a96
#: ../source/core/2d.txt:52
msgid "Points on a 2D Plane"
msgstr ""

# b252eb873360477cb7ef19291d8a76ff
#: ../source/core/2d.txt:56
msgid ""
"To store location data as legacy coordinate pairs, use an array or an "
"embedded document. When possible, use the array format:"
msgstr ""

# c66228373baa4c0292d93692c9f850d4
#: ../source/core/2d.txt:63
msgid "Consider the embedded document form:"
msgstr ""

# 657a5fdda15041b987b673489fb07ab7
#: ../source/core/2d.txt:69
msgid ""
"Arrays are preferred as certain languages do not guarantee associative map "
"ordering."
msgstr ""

# efd0ef585a1a46c09a203750b4e3be9a
#: ../source/core/2d.txt:72
msgid ""
"For all points, if you use longitude and latitude, store coordinates in "
"**longitude, latitude** order."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
msgid ""
"The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage"
" require that a collection have *at most* only one |first-geo-index| and/or "
"only one |second-geo-index| whereas :ref:`geospatial query operators "
"<geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) "
"permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
msgid ""
"The geospatial index restriction for the :dbcommand:`geoNear` command nor "
"the :pipeline:`$geoNear` pipeline stage exists because neither the "
":dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage "
"syntax includes the location field. As such, index selection among multiple "
"``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
msgid ""
"No such restriction applies for :ref:`geospatial query operators "
"<geospatial-query-selectors>` since these operators take a location field, "
"eliminating the ambiguity."
msgstr ""

#: ../source/core/2d.txt:76
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2d.txt:78
msgid ""
"``2d`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores"
" the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a "
"``2d`` index field (or the field is ``null`` or an empty array), MongoDB "
"does not add an entry for the document to the ``2d`` index. For inserts, "
"MongoDB inserts the document but does not add to the ``2d`` index."
msgstr ""

#: ../source/core/2d.txt:85
msgid ""
"For a compound index that includes a ``2d`` index key along with keys of "
"other types, only the ``2d`` index field determines whether the index "
"references a document."
msgstr ""

#~ msgid ""
#~ "MongoDB allows *only one* geospatial index per collection. You can create "
#~ "either a |first-geo-index| **or** a |second-geo-index| per collection."
#~ msgstr ""
