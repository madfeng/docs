# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 8cdfa0ac4e124b36b4097026db1fea57
#: ../source/core/2dsphere.txt:3
msgid "``2dsphere`` Indexes"
msgstr ""

# e7ac0ff485af465b9d0e283f6b369fd6
#: ../source/core/2dsphere.txt:30
msgid "``2dsphere`` Version 2"
msgstr ""

# 771db386000c434e99936518c9c155e7
#: ../source/core/2dsphere.txt:34
msgid ""
"MongoDB 2.6 introduces a version 2 of ``2dsphere`` indexes. Version 2 is the"
" default version of ``2dsphere`` indexes created in MongoDB 2.6. To create a"
" ``2dsphere`` index as a version 1, include the option ``{ "
"\"2dsphereIndexVersion\": 1 }`` when creating the index."
msgstr ""

# 03a0e38e89354db99a3e2503777b8c99
#: ../source/core/2dsphere.txt:70
msgid "Considerations"
msgstr ""

# 944ec96f218b4201b4f45f69897aa907
#: ../source/core/2dsphere.txt:82
msgid ""
"You cannot use a ``2dsphere`` index as a shard key when sharding a "
"collection. However, you can create and maintain a geospatial index on a "
"sharded collection by using a different field as the shard key."
msgstr ""

# 12c23a635a6e4aafa41b148fec45921e
#: ../source/core/2dsphere.txt:89
msgid "GeoJSON Objects"
msgstr ""

# c795db3633d546d6b63fa9cdfbb07d89
#: ../source/core/2dsphere.txt:91
msgid "MongoDB supports the following GeoJSON objects:"
msgstr ""

# a9d0177050ab4bcb8b387b92301907e3
#: ../source/core/2dsphere.txt:93
msgid ":ref:`geojson-point`"
msgstr ""

# 0b2b8e4392fa4236a67a2d8d0fac243c
#: ../source/core/2dsphere.txt:95
msgid ":ref:`geojson-linestring`"
msgstr ""

# a94c73523f0447069dec0e1dfbffc873
#: ../source/core/2dsphere.txt:97
msgid ":ref:`geojson-polygon`"
msgstr ""

# 370d10cd95474165af8377f15709a35b
#: ../source/core/2dsphere.txt:99
msgid ":ref:`geojson-multipoint`"
msgstr ""

# 3d3bf6463a244544bfa59693f6a06182
#: ../source/core/2dsphere.txt:101
msgid ":ref:`geojson-multilinestring`"
msgstr ""

# b8cdc051d76a42f2b3f6939bfd87dd00
#: ../source/core/2dsphere.txt:103
msgid ":ref:`geojson-multipolygon`"
msgstr ""

# e8f22e0b95584542a8317a26703871ea
#: ../source/core/2dsphere.txt:105
msgid ":ref:`geojson-geometrycollection`"
msgstr ""

# 7ece005122f540b7bca73733c4e86b4b
#: ../source/core/2dsphere.txt:111
msgid ""
"In order to index GeoJSON data, you must store the data in a location field "
"that you name. The location field contains a subdocument with a ``type`` "
"field specifying the GeoJSON object type and a ``coordinates`` field "
"specifying the object's coordinates. Always store coordinates in "
"``longitude, latitude`` order."
msgstr ""

# 18892bc453994af99cacae0a77f72985
#: ../source/core/2dsphere.txt:117
msgid "Use the following syntax:"
msgstr ""

# c41fc87b04d842dfb9a38480747b2e03
#: ../source/core/2dsphere.txt:126
msgid "``Point``"
msgstr ""

# aa2b5ae36ac04fa9bd4364ae8b4b66ec
#: ../source/core/2dsphere.txt:130
msgid "The following example stores a GeoJSON :term:`Point`:"
msgstr ""

# 78f19f7989c141abb0ed3a1e04adbf71
#: ../source/core/2dsphere.txt:139
msgid "``LineString``"
msgstr ""

# 3c15a9a10f1c475188504ef74baadcda
#: ../source/core/2dsphere.txt:143
msgid "The following example stores a GeoJSON :term:`LineString`:"
msgstr ""

# 028d34b2e97748929fa4bd0622178c43
#: ../source/core/2dsphere.txt:152
msgid "``Polygon``"
msgstr ""

# 2903ca196ad14ef6ae2cfe71b80d38e0
#: ../source/core/2dsphere.txt:156
msgid ""
":term:`Polygons <Polygon>` consist of an array of GeoJSON ``LinearRing`` "
"coordinate arrays. These ``LinearRings`` are closed ``LineStrings``. Closed "
"``LineStrings`` have at least four coordinate pairs and specify the same "
"position as the first and last coordinates."
msgstr ""

# 8cd330cda2984358b0f8e9d57c491cad
#: ../source/core/2dsphere.txt:170
msgid ""
"The following example stores a GeoJSON ``Polygon`` with an exterior ring and"
" no interior rings (or holes). Note the first and last coordinate pair with "
"the ``[ 0 , 0 ]`` coordinate:"
msgstr ""

# 155a1d4e59fb40afa6a94ce5031aefb7
#: ../source/core/2dsphere.txt:189
msgid "For Polygons with multiple rings:"
msgstr ""

# 84b59cf1b389480b9c3740d4eead5c63
#: ../source/core/2dsphere.txt:191
msgid "The first described ring must be the exterior ring."
msgstr ""

# 141e633fee674ab58cd131717849117e
#: ../source/core/2dsphere.txt:193
msgid "The exterior ring cannot self-intersect."
msgstr ""

# 12a94b8be2db4c6ba5f64db07d6794b1
#: ../source/core/2dsphere.txt:195
msgid "Any interior ring must be entirely contained by the outer ring."
msgstr ""

# 608706a3126e4447968bf49db62aaf99
#: ../source/core/2dsphere.txt:200
msgid ""
"The following document represents a polygon with an interior ring as "
"GeoJSON:"
msgstr ""

# db2eda8b247e48aca354d76d4acf1d3a
#: ../source/core/2dsphere.txt:219
msgid "``MultiPoint``"
msgstr ""

# 96dae288d6c749278402f12c469c8aa1
# 9f3d7fef79394b2c8ca3f26d3bfb9508
# 918a1c77a7094cce93349c673e6e2f88
# 676a63085e0b484c999176fa91ab1d17
#: ../source/core/2dsphere.txt:221 ../source/core/2dsphere.txt:245
#: ../source/core/2dsphere.txt:270 ../source/core/2dsphere.txt:293
msgid "Requires ``2dsphere`` index version 2."
msgstr ""

# 8e80ea7d272a4a8dae974d5435f496bd
#: ../source/core/2dsphere.txt:224
msgid ""
"The following example stores coordinates of GeoJSON type `MultiPoint "
"<http://geojson.org/geojson-spec.html#id5>`_:"
msgstr ""

# 52244de660e6475d992ad258aebcd3a1
#: ../source/core/2dsphere.txt:243
msgid "``MultiLineString``"
msgstr ""

# 7e0e372cc1c2463dbe7ee901722309af
#: ../source/core/2dsphere.txt:248
msgid ""
"The following example stores coordinates of GeoJSON type `MultiLineString "
"<http://geojson.org/geojson-spec.html#id6>`_:"
msgstr ""

# e11417fdf4f644b5900bcdfbd11579c7
#: ../source/core/2dsphere.txt:268
msgid "``MultiPolygon``"
msgstr ""

# 59f6deb7b7f0406fa7626e1f988da4d1
#: ../source/core/2dsphere.txt:273
msgid ""
"The following example stores coordinates of GeoJSON type `MultiPolygon "
"<http://geojson.org/geojson-spec.html#id7>`_:"
msgstr ""

# 832a6899b1a84925811e9d00486ab832
#: ../source/core/2dsphere.txt:291
msgid "``GeometryCollection``"
msgstr ""

# 041a58a4a777436399245b08b0b316f4
#: ../source/core/2dsphere.txt:296
msgid ""
"The following example stores coordinates of GeoJSON type `GeometryCollection"
" <http://geojson.org/geojson-spec.html#geometrycollection>`_:"
msgstr ""

#: ../source/core/2dsphere.txt:9
msgid ""
"A ``2dsphere`` index supports queries that calculate geometries on an earth-"
"like sphere. The index supports data stored as both :term:`GeoJSON` objects "
"and as legacy coordinate pairs. The index supports legacy coordinate pairs "
"by converting the data to the GeoJSON ``Point`` type. The default datum for "
"an earth-like sphere in MongoDB 2.4 is :term:`WGS84`. Coordinate-axis order "
"is **longitude, latitude**."
msgstr ""

#: ../source/core/2dsphere.txt:16
msgid ""
"The ``2dsphere`` index supports all MongoDB geospatial queries: queries for "
"inclusion, intersection and proximity. See the :doc:`/reference/operator"
"/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2dsphere.txt:21
msgid ""
"To create a ``2dsphere`` index, use the :method:`db.collection.ensureIndex` "
"method. A :ref:`compound <index-type-compound>` ``2dsphere`` index can "
"reference multiple location and non-location fields within a collectionâ€™s "
"documents. See :doc:`/tutorial/build-a-2dsphere-index` for more information."
msgstr ""

#: ../source/core/2dsphere.txt:40
msgid "Additional GeoJSON Objects"
msgstr ""

#: ../source/core/2dsphere.txt:44
msgid ""
"Version 2 adds support for additional GeoJSON object: :ref:`geojson-"
"multipoint`, :ref:`geojson-multilinestring`, :ref:`geojson-multipolygon`, "
"and :ref:`geojson-geometrycollection`."
msgstr ""

#: ../source/core/2dsphere.txt:50
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2dsphere.txt:54
msgid ""
"Version 2 ``2dsphere`` indexes are :doc:`sparse </core/index-sparse>` by "
"default and ignores the :doc:`sparse: true </core/index-sparse>` option. If "
"a document lacks a ``2dsphere`` index field (or the field is ``null`` or an "
"empty array), MongoDB does not add an entry for the document to the "
"``2dsphere`` index. For inserts, MongoDB inserts the document but does not "
"add to the ``2dsphere`` index."
msgstr ""

#: ../source/core/2dsphere.txt:61
msgid ""
"For a compound index that includes a ``2dsphere`` index key along with keys "
"of other types, only the ``2dsphere`` index field determines whether the "
"index references a document."
msgstr ""

#: ../source/core/2dsphere.txt:65
msgid ""
"Earlier versions of MongoDB only support Version 1 ``2dsphere`` indexes. "
"Version 1 ``2dsphere`` indexes are *not* sparse by default and will reject "
"documents with ``null`` location fields."
msgstr ""

#: ../source/core/2dsphere.txt:73
msgid "``geoNear`` and ``$geoNear`` Restrictions"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
msgid ""
"The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage"
" require that a collection have *at most* only one |first-geo-index| and/or "
"only one |second-geo-index| whereas :ref:`geospatial query operators "
"<geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) "
"permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
msgid ""
"The geospatial index restriction for the :dbcommand:`geoNear` command nor "
"the :pipeline:`$geoNear` pipeline stage exists because neither the "
":dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage "
"syntax includes the location field. As such, index selection among multiple "
"``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
msgid ""
"No such restriction applies for :ref:`geospatial query operators "
"<geospatial-query-selectors>` since these operators take a location field, "
"eliminating the ambiguity."
msgstr ""

#: ../source/core/2dsphere.txt:80
msgid "Shard Key Restrictions"
msgstr ""

#: ../source/core/2dsphere.txt:107
msgid ""
"The :ref:`geojson-multipoint`, :ref:`geojson-multilinestring`, :ref"
":`geojson-multipolygon`, and :ref:`geojson-geometrycollection` require "
"``2dsphere`` index version 2."
msgstr ""

#: ../source/core/2dsphere.txt:161
msgid ""
"The line that joins two points on a curved surface may or may not contain "
"the same set of co-ordinates that joins those two points on a flat surface. "
"The line that joins two points on a curved surface will be a geodesic. "
"Carefully check points to avoid errors with shared edges, as well as "
"overlaps and other types of intersections."
msgstr ""

#: ../source/core/2dsphere.txt:168
msgid "Polygons with a Single Ring"
msgstr ""

#: ../source/core/2dsphere.txt:184
msgid "For Polygons with a single ring, the ring cannot self-intersect."
msgstr ""

#: ../source/core/2dsphere.txt:187
msgid "Polygons with Multiple Rings"
msgstr ""

#: ../source/core/2dsphere.txt:197
msgid ""
"Interior rings cannot intersect or overlap each other. Interior rings cannot"
" share an edge."
msgstr ""

#~ msgid ""
#~ "A ``2dsphere`` index supports queries that calculate geometries on an earth-"
#~ "like sphere. The index supports data stored as both :term:`GeoJSON` objects "
#~ "and as legacy coordinate pairs. The index supports legacy coordinate pairs "
#~ "by converting the data to the GeoJSON ``Point`` type."
#~ msgstr ""

#~ msgid ""
#~ "The ``2dsphere`` index supports all MongoDB geospatial queries: queries for "
#~ "inclusion, intersection and proximity."
#~ msgstr ""

#~ msgid ""
#~ "A :ref:`compound <index-type-compound>` ``2dsphere`` index can reference "
#~ "multiple location and non-location fields within a collectionâ€™s documents. "
#~ "You can arrange the fields in any order."
#~ msgstr ""

#~ msgid ""
#~ "The default datum for an earth-like sphere in MongoDB 2.4 is :term:`WGS84`. "
#~ "Coordinate-axis order is **longitude, latitude**."
#~ msgstr ""

#~ msgid ""
#~ "See the :doc:`/reference/operator/query-geospatial` for the query operators "
#~ "that support geospatial queries."
#~ msgstr ""

#~ msgid ""
#~ "Version 2 adds support for additional GeoJSON object: :ref:`geojson-"
#~ "multipoint`, :ref:`geojson-multilinestring`, :ref:`geojson-multilinestring`,"
#~ " :ref:`geojson-multipolygon`, and :ref:`geojson-geometrycollection`."
#~ msgstr ""

#~ msgid ""
#~ "Version 2 ``2dsphere`` indexes are sparse by default and ignores the "
#~ ":doc:`sparse: true </core/index-sparse>` option. If a document lacks a "
#~ "``2dsphere`` index field (or the field is a ``null`` or an empty array), "
#~ "MongoDB does not add an entry for the document to the ``2dsphere`` index. "
#~ "For inserts, MongoDB inserts the document but does not add to the "
#~ "``2dsphere`` index."
#~ msgstr ""

#~ msgid ""
#~ "Version 1 ``2dsphere`` indexes are not sparse by default and will reject "
#~ "documents with ``null`` location fields."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB allows *only one* geospatial index per collection. You can create "
#~ "either a |first-geo-index| **or** a |second-geo-index| per collection."
#~ msgstr ""

#~ msgid ""
#~ "The :ref:`geojson-multipoint`, :ref:`geojson-multilinestring`, :ref"
#~ ":`geojson-multilinestring`, :ref:`geojson-multipolygon`, and :ref:`geojson-"
#~ "geometrycollection` require ``2dsphere`` index version 2."
#~ msgstr ""

#~ msgid ""
#~ "Interior rings cannot intersect or overlap each other. Interior rings can "
#~ "share an edge."
#~ msgstr ""
