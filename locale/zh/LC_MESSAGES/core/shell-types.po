# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# e0600db625214028a36ab74845f937d4
#: ../source/core/shell-types.txt:3
msgid "Data Types in the ``mongo`` Shell"
msgstr ""

# 8a6c10a0cf3a4abd828f3debeaa0c596
#: ../source/core/shell-types.txt:7
msgid ""
"MongoDB :term:`BSON` provides support for additional data types than "
":term:`JSON`. :doc:`Drivers </applications/drivers>` provide native support "
"for these data types in host languages and the :program:`mongo` shell also "
"provides several helper classes to support the use of these data types in "
"the :program:`mongo` JavaScript shell. See :doc:`/reference/mongodb-"
"extended-json` for additional information."
msgstr ""

# fece0f1bace44dfdb58d54636a2e32f5
#: ../source/core/shell-types.txt:18
msgid "Types"
msgstr ""

# 5a849aad88f8437b838a29d530076b3c
#: ../source/core/shell-types.txt:21
msgid "Date"
msgstr ""

# 852061f517b24877b129fecab16017b6
#: ../source/core/shell-types.txt:26
msgid "``Date()`` method which returns the current date as a string."
msgstr ""

# d95bf4a7a2ca4f0ca4275f2d52454527
#: ../source/core/shell-types.txt:42
msgid ""
"To return the date as a string, use the ``Date()`` method, as in the "
"following example:"
msgstr ""

# 38dfdbb7d8074b788b9703b15e10083c
# 12ea822fd4084288bc823092878d02b9
# a8ccfdd37faf402b8e6f242ef86190c4
#: ../source/core/shell-types.txt:49 ../source/core/shell-types.txt:87
msgid ""
"To print the value of the variable, type the variable name in the shell, as "
"in the following:"
msgstr ""

# 0ddf7d37e4944a2681f218828cfe59d1
#: ../source/core/shell-types.txt:56
msgid "The result is the value of ``myDateString``:"
msgstr ""

# 2e00525fa4d14187930907a3243f805b
# bea61e7d15ed4aad9bf49deb8ed67111
# f83a46c7a1a4495ab8e0ac33d8db3f11
#: ../source/core/shell-types.txt:62
msgid "To verify the type, use the ``typeof`` operator, as in the following:"
msgstr ""

# 6db16f25911f4c54850702e2aa486d4a
#: ../source/core/shell-types.txt:68
msgid "The operation returns ``string``."
msgstr ""

# b91de755380b427180dafe94ea067238
#: ../source/core/shell-types.txt:84
msgid ""
"You can use the ``new`` operator with the ``ISODate()`` constructor as well."
msgstr ""

# 5cf07aebe3144e388c415493bc518095
#: ../source/core/shell-types.txt:112
msgid "ObjectId"
msgstr ""

# d91683f381f1492fb23246706a437762
#: ../source/core/shell-types.txt:0
msgid "See"
msgstr ""

# 5bdf6a3bc2c74f5982dc7c33553a2f07
#: ../source/core/shell-types.txt:128
msgid "NumberLong"
msgstr ""

# aef8de540e82408097fa874602fdfa63
#: ../source/core/shell-types.txt:151
msgid "Retrieve the document to verify:"
msgstr ""

# 742c9995edc24b73bdf0c51276d123bb
#: ../source/core/shell-types.txt:157
msgid ""
"In the returned document, the ``calc`` field contains a ``NumberLong`` "
"object:"
msgstr ""

# 34433e1b4ef64d348a34cac99e7aa0c1
#: ../source/core/shell-types.txt:164
msgid ""
"If you use the :update:`$inc` to increment the value of a field that "
"contains a ``NumberLong`` object by a **float**, the data type changes to a "
"floating point value, as in the following example:"
msgstr ""

# 81045f9a6fe144279dff83bba85b35e1
#: ../source/core/shell-types.txt:168
msgid ""
"Use :update:`$inc` to increment the ``calc`` field by ``5``, which the "
":program:`mongo` shell treats as a float:"
msgstr ""

# 21b671b8f866480698c3d6e14f75252d
#: ../source/core/shell-types.txt:176
msgid "Retrieve the updated document:"
msgstr ""

# 492260d69e8142f5835277ce04b9c265
#: ../source/core/shell-types.txt:182
msgid ""
"In the updated document, the ``calc`` field contains a floating point value:"
msgstr ""

# 000d3eb02c974651b4057e3c8b5563a0
#: ../source/core/shell-types.txt:192
msgid "NumberInt"
msgstr ""

# 8fe6e470ce9d4a81840953d513a8b94d
#: ../source/core/shell-types.txt:194
msgid ""
"By default, the :program:`mongo` shell treats all numbers as floating-point "
"values. The :program:`mongo` shell provides the ``NumberInt()`` constructor "
"to explicitly specify 32-bit integers."
msgstr ""

# c22527ff59a4424a9967aae8c723f2fa
#: ../source/core/shell-types.txt:201
msgid "Check Types in the ``mongo`` Shell"
msgstr ""

# a5b75a3ba71f442d9d2ce6168753909f
#: ../source/core/shell-types.txt:225
msgid "``typeof`` returns the type of a field."
msgstr ""

# cd0aef6f241a4197ab9000e9b3d496d6
#: ../source/core/shell-types.txt:220
msgid "The operation returns ``true``."
msgstr ""

# 1c04ec5a0777411ebd59193e61d06428
#: ../source/core/shell-types.txt:234
msgid ""
"In this case ``typeof`` will return the more generic ``object`` type rather "
"than ``ObjectId`` type."
msgstr ""

#: ../source/core/shell-types.txt:23
msgid ""
"The :program:`mongo` shell provides various methods to return the date, "
"either as a string or as a ``Date`` object:"
msgstr ""

#: ../source/core/shell-types.txt:28
msgid ""
"``new Date()`` constructor which returns a ``Date`` object using the "
"``ISODate()`` wrapper."
msgstr ""

#: ../source/core/shell-types.txt:31
msgid ""
"``ISODate()`` constructor which returns a ``Date`` object using the "
"``ISODate()`` wrapper."
msgstr ""

#: ../source/core/shell-types.txt:34
msgid ""
"Internally, ``Date`` objects are stored as a 64 bit integer representing the"
" number of milliseconds since the Unix epoch (Jan 1, 1970), which results in"
" a representable date range of about 290 millions years into the past and "
"future."
msgstr ""

#: ../source/core/shell-types.txt:40
msgid "Return Date as a String"
msgstr ""

#: ../source/core/shell-types.txt:71
msgid "Return ``Date``"
msgstr ""

#: ../source/core/shell-types.txt:73
msgid ""
"The :program:`mongo` shell wrap objects of ``Date`` type with the "
"``ISODate`` helper; however, the objects remain of type ``Date``."
msgstr ""

#: ../source/core/shell-types.txt:76
msgid ""
"The following example uses both the ``new Date()`` constructor and the "
"``ISODate()`` constructor to return ``Date`` objects."
msgstr ""

#: ../source/core/shell-types.txt:94
msgid ""
"The result is the ``Date`` value of ``myDate`` wrapped in the ``ISODate()`` "
"helper:"
msgstr ""

#: ../source/core/shell-types.txt:101
msgid ""
"To verify the type, use the ``instanceof`` operator, as in the following:"
msgstr ""

#: ../source/core/shell-types.txt:109
msgid "The operation returns ``true`` for both."
msgstr ""

#: ../source/core/shell-types.txt:114
msgid ""
"The :program:`mongo` shell provides the ``ObjectId()`` wrapper class around "
"the :term:`ObjectId` data type. To generate a new ObjectId, use the "
"following operation in the :program:`mongo` shell:"
msgstr ""

#: ../source/core/shell-types.txt:130
msgid ""
"By default, the :program:`mongo` shell treats all numbers as floating-point "
"values. The :program:`mongo` shell provides the ``NumberLong()`` wrapper to "
"handle 64-bit integers."
msgstr ""

#: ../source/core/shell-types.txt:134
msgid "The ``NumberLong()`` wrapper accepts the long as a string:"
msgstr ""

#: ../source/core/shell-types.txt:140
msgid ""
"The following examples use the ``NumberLong()`` wrapper to write to the "
"collection:"
msgstr ""

#: ../source/core/shell-types.txt:203
msgid ""
"To determine the type of fields, the :program:`mongo` shell provides the "
"``instanceof`` and ``typeof`` operators."
msgstr ""

#: ../source/core/shell-types.txt:208
msgid "``instanceof``"
msgstr ""

#: ../source/core/shell-types.txt:210
msgid ""
"``instanceof`` returns a boolean to test if a value is an instance of some "
"type."
msgstr ""

#: ../source/core/shell-types.txt:213
msgid ""
"For example, the following operation tests whether the ``_id`` field is an "
"instance of type ``ObjectId``:"
msgstr ""

#: ../source/core/shell-types.txt:223
msgid "``typeof``"
msgstr ""

#: ../source/core/shell-types.txt:227
msgid ""
"For example, the following operation returns the type of the ``_id`` field:"
msgstr ""

#~ msgid ""
#~ "The :program:`mongo` shell provides various options to return the date, "
#~ "either as a string or as an object:"
#~ msgstr ""

#~ msgid ""
#~ "``Date()`` constructor which returns an ``ISODate`` object when used with "
#~ "the ``new`` operator."
#~ msgstr ""

#~ msgid ""
#~ "``ISODate()`` constructor which returns an ``ISODate`` object when used with"
#~ " *or* without the ``new`` operator."
#~ msgstr ""

#~ msgid "Consider the following examples:"
#~ msgstr ""

#~ msgid ""
#~ "To get the date as an ``ISODate`` object, instantiate a new instance using "
#~ "the ``Date()`` constructor with the ``new`` operator, as in the following "
#~ "example:"
#~ msgstr ""

#~ msgid "The result is the value of ``myDateObject``:"
#~ msgstr ""

#~ msgid "The operation returns ``object``."
#~ msgstr ""

#~ msgid ""
#~ "To get the date as an ``ISODate`` object, instantiate a new instance using "
#~ "the ``ISODate()`` constructor *without* the ``new`` operator, as in the "
#~ "following example:"
#~ msgstr ""

#~ msgid "The result is the value of ``myDateObject2``:"
#~ msgstr ""

#~ msgid ""
#~ "The :program:`mongo` shell provides the ``ObjectId()`` wrapper class around "
#~ ":term:`ObjectId` data types. To generate a new ObjectId, use the following "
#~ "operation in the :program:`mongo` shell:"
#~ msgstr ""

#~ msgid ""
#~ "By default, the :program:`mongo` shell treats all numbers as floating-point "
#~ "values. The :program:`mongo` shell provides the ``NumberLong()`` class to "
#~ "handle 64-bit integers."
#~ msgstr ""

#~ msgid "The ``NumberLong()`` constructor accepts the long as a string:"
#~ msgstr ""

#~ msgid ""
#~ "The following examples use the ``NumberLong()`` class to write to the "
#~ "collection:"
#~ msgstr ""

#~ msgid ""
#~ "To determine the type of fields, the :program:`mongo` shell provides the "
#~ "following operators:"
#~ msgstr ""

#~ msgid ""
#~ "``instanceof`` returns a boolean to test if a value has a specific type."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid "Consider the following operations using ``instanceof`` and ``typeof``:"
#~ msgstr ""

#~ msgid ""
#~ "The following operation tests whether the ``_id`` field is of type "
#~ "``ObjectId``:"
#~ msgstr ""

#~ msgid "The following operation returns the type of the ``_id`` field:"
#~ msgstr ""
