# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 8a733e98950442609abd5f0360efd3cb
#: ../source/core/replica-set-oplog.txt:5
msgid "Replica Set Oplog"
msgstr ""

# 6d00393279d34f8a9de2833bb6659f82
#: ../source/core/replica-set-oplog.txt:18
msgid ""
"To facilitate replication, all replica set members send heartbeats (pings) "
"to all other members. Any member can import oplog entries from any other "
"member."
msgstr ""

# 4bf3ec7948c04faebe63f90d10df18fb
#: ../source/core/replica-set-oplog.txt:22
msgid ""
"Whether applied once or multiple times to the target dataset, each operation"
" in the oplog produces the same results, i.e. each operation in the oplog is"
" :term:`idempotent`. For proper replication operations, entries in the oplog"
" must be idempotent:"
msgstr ""

# 74c3a7749bca45b8b1359acc73fa6f3d
#: ../source/core/replica-set-oplog.txt:27
msgid "initial sync"
msgstr ""

# e27b8ffbbe98459fb2159cb3fd1ede2a
#: ../source/core/replica-set-oplog.txt:28
msgid "post-rollback catch-up"
msgstr ""

# a3d12629fc5c43b798ea82b456ace9aa
#: ../source/core/replica-set-oplog.txt:29
msgid "sharding chunk migrations"
msgstr ""

# 8506d616bb6547efa3a7e1550bc38fe6
#: ../source/core/replica-set-oplog.txt:34
msgid "Oplog Size"
msgstr ""

# 12b729c7abc64b7d90fcae9112780ad2
#: ../source/core/replica-set-oplog.txt:36
msgid ""
"When you start a replica set member for the first time, MongoDB creates an "
"oplog of a default size. The size depends on the architectural details of "
"your operating system."
msgstr ""

# df2c0f21ebcb46309e515a73d8abc1ba
#: ../source/core/replica-set-oplog.txt:40
msgid ""
"In most cases, the default oplog size is sufficient. For example, if an "
"oplog is 5% of free disk space and fills up in 24 hours of operations, then "
"secondaries can stop copying entries from the oplog for up to 24 hours "
"without becoming too stale to continue replicating. However, most replica "
"sets have much lower operation volumes, and their oplogs can hold much "
"higher numbers of operations."
msgstr ""

# d4db0a1c5eb64bfea7d69ff9122f20be
#: ../source/core/replica-set-oplog.txt:47
msgid ""
"Before :program:`mongod` creates an oplog, you can specify its size with the"
" :setting:`~replication.oplogSizeMB` option. However, after you have started"
" a replica set member for the first time, you can only change the size of "
"the oplog using the :doc:`/tutorial/change-oplog-size` procedure."
msgstr ""

# caac8e653e1f41e58feda2f97042f00d
#: ../source/core/replica-set-oplog.txt:57
msgid "By default, the size of the oplog is as follows:"
msgstr ""

# a8c99d5b0ad243959d26bdb09a1c21cc
#: ../source/core/replica-set-oplog.txt:63
msgid ""
"For 64-bit OS X systems, MongoDB allocates 183 megabytes of space to the "
"oplog."
msgstr ""

# e726ddfd09014822bcfbbf31efa6c5d3
#: ../source/core/replica-set-oplog.txt:66
msgid ""
"For 32-bit systems, MongoDB allocates about 48 megabytes of space to the "
"oplog."
msgstr ""

# e391da89f4704995bab71a01335d5ea9
#: ../source/core/replica-set-oplog.txt:70
msgid "Workloads that Might Require a Larger Oplog Size"
msgstr ""

# c3e1ac5d3f634dcba52cc30ce79e6f61
#: ../source/core/replica-set-oplog.txt:72
msgid ""
"If you can predict your replica set's workload to resemble one of the "
"following patterns, then you might want to create an oplog that is larger "
"than the default. Conversely, if your application predominantly performs "
"reads with a minimal amount of write operations, a smaller oplog may be "
"sufficient."
msgstr ""

# 301e047e24ea4ed1820d88f7b8de4cd0
#: ../source/core/replica-set-oplog.txt:78
msgid "The following workloads might require a larger oplog size."
msgstr ""

# c22ffd3b9b7d4713a5ae45cae90addc5
#: ../source/core/replica-set-oplog.txt:81
msgid "Updates to Multiple Documents at Once"
msgstr ""

# a434eafc5d5b435ca8e502b7f650ce42
#: ../source/core/replica-set-oplog.txt:83
msgid ""
"The oplog must translate multi-updates into individual operations in order "
"to maintain :term:`idempotency <idempotent>`. This can use a great deal of "
"oplog space without a corresponding increase in data size or disk use."
msgstr ""

# 5de604cb52b844eeabd33f7cb2ef6b3c
#: ../source/core/replica-set-oplog.txt:89
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr ""

# d2cd7e73d5714784b9965b48d8397faf
#: ../source/core/replica-set-oplog.txt:91
msgid ""
"If you delete roughly the same amount of data as you insert, the database "
"will not grow significantly in disk use, but the size of the operation log "
"can be quite large."
msgstr ""

# 92a561278e64487c8ad12e97ba3580b1
#: ../source/core/replica-set-oplog.txt:96
msgid "Significant Number of In-Place Updates"
msgstr ""

# de739f5dc2784613ac9c728952c28dd8
#: ../source/core/replica-set-oplog.txt:98
msgid ""
"If a significant portion of the workload is in-place updates, the database "
"records a large number of operations but does not change the quantity of "
"data on disk."
msgstr ""

# 13b6d0afab5c4f2da54bad866c79304a
#: ../source/core/replica-set-oplog.txt:103
msgid "Oplog Status"
msgstr ""

# 8f354b1b92784b68b8e24255001b141e
#: ../source/core/replica-set-oplog.txt:105
msgid ""
"To view oplog status, including the size and the time range of operations, "
"issue the :method:`rs.printReplicationInfo()` method. For more information "
"on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""

# fe59c950a52947628e76775ec60f33a5
#: ../source/core/replica-set-oplog.txt:110
msgid ""
"Under various exceptional situations, updates to a :term:`secondary's "
"<secondary>` oplog might lag behind the desired performance time.  Use "
":method:`db.getReplicationInfo()` from a secondary member and the "
":doc:`replication status </reference/method/db.getReplicationInfo>` output "
"to assess the current state of replication and determine if there is any "
"unintended replication delay."
msgstr ""

# b15797b5a5c341489cac99e3a8ec1ab7
#: ../source/core/replica-set-oplog.txt:117
msgid ""
"See :ref:`Replication Lag <replica-set-replication-lag>` for more "
"information."
msgstr ""

#: ../source/core/replica-set-oplog.txt:9
msgid ""
"The :term:`oplog` (operations log) is a special :term:`capped collection` "
"that keeps a rolling record of all operations that modify the data stored in"
" your databases. MongoDB applies database operations on the :term:`primary` "
"and then records the operations on the primary's oplog. The "
":term:`secondary` members then copy and apply these operations in an "
"asynchronous process. All replica set members contain a copy of the oplog, "
"in the :data:`local.oplog.rs` collection, which allows them to maintain the "
"current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:59
msgid ""
"For 64-bit Linux, Solaris, FreeBSD, and Windows systems, MongoDB allocates "
"5% of the available free disk space, but will always allocate at least 1 "
"gigabyte and never more than 50 gigabytes."
msgstr ""

#~ msgid ""
#~ "The :term:`oplog` (operations log) is a special :term:`capped collection` "
#~ "that keeps a rolling record of all operations that modify the data stored in"
#~ " your databases. MongoDB applies database operations on the :term:`primary` "
#~ "and then records the operations on the primary's oplog. The "
#~ ":term:`secondary` members then copy and apply these operations in an "
#~ "asynchronous process. All replica set members contain a copy of the oplog, "
#~ "allowing them to maintain the current state of the database."
#~ msgstr ""

#~ msgid ""
#~ "For 64-bit Linux, Solaris, FreeBSD, and Windows systems, MongoDB allocates "
#~ "5% of the available free disk space to the oplog. If this amount is smaller "
#~ "than a gigabyte, then MongoDB allocates 1 gigabyte of space."
#~ msgstr ""
