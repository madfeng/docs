# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/indexes.txt:3
msgid "FAQ: Indexes"
msgstr ""

#: ../source/faq/indexes.txt:7
msgid "This document addresses common questions regarding MongoDB indexes."
msgstr ""

#: ../source/faq/indexes.txt:9
msgid ""
"If you don't find the answer you're looking for, check the :doc:`complete "
"list of FAQs </faq>` or post your question to the `MongoDB User Mailing List"
" <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_. See "
"also :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:15
msgid "Should you run ``ensureIndex()`` after every insert?"
msgstr ""

#: ../source/faq/indexes.txt:17
msgid ""
"No. You only need to create an index once for a single collection. After "
"initial creation, MongoDB automatically updates the index as data changes."
msgstr ""

#: ../source/faq/indexes.txt:21
msgid ""
"While running :method:`~db.collection.ensureIndex()` is usually ok, if an "
"index doesn't exist because of ongoing administrative work, a call to "
":method:`~db.collection.ensureIndex()` may disrupt database availability. "
"Running :method:`~db.collection.ensureIndex()` can render a replica set "
"inaccessible as the index creation is happening. See :ref:`index-building-"
"replica-sets`."
msgstr ""

#: ../source/faq/indexes.txt:29
msgid "How do you know what indexes exist in a collection?"
msgstr ""

#: ../source/faq/indexes.txt:31
msgid ""
"To list a collection's indexes, use the :method:`db.collection.getIndexes()`"
" method or a similar :api:`method for your driver <>`."
msgstr ""

#: ../source/faq/indexes.txt:36
msgid "How do you determine the size of an index?"
msgstr ""

#: ../source/faq/indexes.txt:38
msgid ""
"To check the sizes of the indexes on a collection, use "
":method:`db.collection.stats()`."
msgstr ""

#: ../source/faq/indexes.txt:43
msgid "What happens if an index does not fit into RAM?"
msgstr ""

#: ../source/faq/indexes.txt:45
msgid ""
"When an index is too large to fit into RAM, MongoDB must read the index from"
" disk, which is a much slower operation than reading from RAM. Keep in mind "
"an index fits into RAM when your server has RAM available for the index "
"combined with the rest of the :term:`working set`."
msgstr ""

#: ../source/faq/indexes.txt:50
msgid ""
"In certain cases, an index does not need to fit *entirely* into RAM. For "
"details, see :ref:`indexing-right-handed`."
msgstr ""

#: ../source/faq/indexes.txt:56
msgid "How do you know what index a query used?"
msgstr ""

#: ../source/faq/indexes.txt:58
msgid ""
"To inspect how MongoDB processes a query, use the "
":method:`~cursor.explain()` method in the :program:`mongo` shell, or in your"
" application driver."
msgstr ""

#: ../source/faq/indexes.txt:63
msgid "How do you determine what fields to index?"
msgstr ""

#: ../source/faq/indexes.txt:65
msgid ""
"A number of factors determine what fields to index, including "
":ref:`selectivity <index-selectivity>`, fitting indexes into RAM, reusing "
"indexes in multiple queries when possible, and creating indexes that can "
"support all the fields in a given query. For detailed documentation on "
"choosing which fields to index, see :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:81
msgid "How do write operations affect indexes?"
msgstr ""

#: ../source/faq/indexes.txt:83
msgid ""
"Any write operation that alters an indexed field requires an update to the "
"index in addition to the document itself. If you update a document that "
"causes the document to grow beyond the allotted record size, then MongoDB "
"must update all indexes that include this document as part of the update "
"operation."
msgstr ""

#: ../source/faq/indexes.txt:89
msgid ""
"Therefore, if your application is write-heavy, creating too many indexes "
"might affect performance."
msgstr ""

#: ../source/faq/indexes.txt:93
msgid "Will building a large index affect database performance?"
msgstr ""

#: ../source/faq/indexes.txt:95
msgid ""
"Building an index can be an IO-intensive operation, especially if you have a"
" large collection. This is true on any database system that supports "
"secondary indexes, including MySQL. If you need to build an index on a large"
" collection, consider building the index in the background. See :ref:`index-"
"creation-operations`."
msgstr ""

#: ../source/faq/indexes.txt:101
msgid ""
"If you build a large index without the background option, and if doing so "
"causes the database to stop responding, do one of the following:"
msgstr ""

#: ../source/faq/indexes.txt:105
msgid "Wait for the index to finish building."
msgstr ""

#: ../source/faq/indexes.txt:107
msgid ""
"Kill the current operation (see :method:`db.killOp()`). The partial index "
"will be deleted."
msgstr ""

#: ../source/faq/indexes.txt:113
msgid "Can I use index keys to constrain query matches?"
msgstr ""

#: ../source/faq/indexes.txt:115
msgid ""
"You can use the :method:`~cursor.min()` and :method:`~cursor.max()` methods "
"to constrain the results of the cursor returned from "
":method:`~db.collection.find()` by using index keys."
msgstr ""

#: ../source/faq/indexes.txt:120
msgid "Using ``$ne`` and ``$nin`` in a query is slow. Why?"
msgstr ""

#: ../source/faq/indexes.txt:122
msgid ""
"The :query:`$ne` and :query:`$nin` operators are not selective. See :ref"
":`index-selectivity`. If you need to use these, it is often best to make "
"sure that an additional, more selective criterion is part of the query."
msgstr ""

#: ../source/faq/indexes.txt:128
msgid "Can I use a multi-key index to support a query for a whole array?"
msgstr ""

#: ../source/faq/indexes.txt:130
msgid ""
"Not entirely. The index can partially support these queries because it can "
"speed the selection of the first element of the array; however, comparing "
"all subsequent items in the array cannot use the index and must scan the "
"documents individually."
msgstr ""

#: ../source/faq/indexes.txt:136
msgid "How can I effectively use indexes strategy for attribute lookups?"
msgstr ""

#: ../source/faq/indexes.txt:138
msgid ""
"For simple attribute lookups that don't require sorted result sets or range "
"queries, consider creating a field that contains an array of documents where"
" each document has a field (e.g. ``attrib`` ) that holds a specific type of "
"attribute. You can index this ``attrib`` field."
msgstr ""

#: ../source/faq/indexes.txt:144
msgid ""
"For example, the ``attrib`` field in the following document allows you to "
"add an unlimited number of attributes types:"
msgstr ""

#: ../source/faq/indexes.txt:158
msgid ""
"*Both* of the following queries could use the same ``{ \"attrib.k\": 1, "
"\"attrib.v\": 1 }`` index:"
msgstr ""
