# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/applications/replication.txt:3
msgid "Replica Set Read and Write Semantics"
msgstr ""

#: ../source/applications/replication.txt:7
msgid ""
"From the perspective of a client application, whether a MongoDB instance is "
"running as a single server (i.e. \"standalone\") or a :term:`replica set` is"
" transparent."
msgstr ""

#: ../source/applications/replication.txt:11
msgid ""
"By default, in MongoDB, read operations to a replica set return results from"
" the :doc:`primary </core/replica-set-primary>` and are :term:`consistent "
"<strict consistency>` with the last write operation."
msgstr ""

#: ../source/applications/replication.txt:15
msgid ""
"Users may configure :term:`read preference` on a per-connection basis to "
"prefer that the read operations return on the :term:`secondary` members. If "
"clients configure the :term:`read preference` to permit secondary reads, "
"read operations can return from :term:`secondary` members that have not "
"replicated more recent updates or operations. When reading from a secondary,"
" a query may return data that reflects a previous state."
msgstr ""

#: ../source/applications/replication.txt:23
msgid ""
"This behavior is sometimes characterized as :term:`eventual consistency` "
"because the secondary member's state will *eventually* reflect the primary's"
" state and MongoDB cannot guarantee :term:`strict consistency` for read "
"operations from secondary members."
msgstr ""

#: ../source/applications/replication.txt:28
msgid ""
"To guarantee consistency for reads from secondary members, you can configure"
" the :term:`client` and :term:`driver` to ensure that write operations "
"succeed on all members before completing successfully. See :doc:`/core"
"/write-concern` for more information. Additionally, such configuration can "
"help prevent :doc:`/core/replica-set-rollbacks` during a failover."
msgstr ""

#: ../source/applications/replication.txt:37
msgid ""
":term:`Sharded clusters <sharded cluster>` where the shards are also replica"
" sets provide the same operational semantics with regards to write and read "
"operations."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:6
msgid ":doc:`/core/replica-set-write-concern`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:4
msgid ""
"Write concern is the guarantee an application requires from MongoDB to "
"consider a write operation successful."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:11
msgid ":doc:`/core/read-preference`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:9
msgid ""
"Applications specify *read preference* to control how drivers direct read "
"operations to members of the replica set."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:13
msgid ":doc:`/core/read-preference-mechanics`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:14
msgid ""
"With replica sets, read operations may have additional semantics and "
"behavior."
msgstr ""
