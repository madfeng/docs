# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharded-cluster-high-availability.txt:5
# 3c5c6a54ce4a4d8e9f96a5bb3110ea44
msgid "Sharded Cluster High Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:9
# 04435aef2fbc4cfc9cc9363339ddc307
msgid "A :ref:`production <sharding-production-architecture>` :term:`cluster` has no single point of failure. This section introduces the availability concerns for MongoDB deployments in general and highlights potential failure scenarios and available resolutions."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:15
# d5d8fd45232849dbb26daca9356972e6
msgid "Application Servers or :program:`mongos` Instances Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:17
# ef0a4216f82e4657bba68b9838f6421b
msgid "If each application server has its own :program:`mongos` instance, other application servers can continue access the database. Furthermore, :program:`mongos` instances do not maintain persistent state, and they can restart and become unavailable without losing any state or data. When a :program:`mongos` instance starts, it retrieves a copy of the :term:`config database` and can begin routing queries."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:25
# fccb356d3b164f0db86708fe920de89f
msgid "A Single :program:`mongod` Becomes Unavailable in a Shard"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:27
# 9e94e14f89554690a073d25553bd747f
msgid ":doc:`Replica sets </replication>` provide high availability for shards. If the unavailable :program:`mongod` is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary. If the unavailable :program:`mongod` is a :term:`secondary`, and it disconnects the primary and secondary will continue to hold all data. In a three member replica set, even if a single member of the set experiences catastrophic failure, two other members have full copies of the data. [#recovery-window]_"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:36
# 6d80f311c9674ce39cd720cffa0a119a
msgid "Always investigate availability interruptions and failures. If a system is unrecoverable, replace it and create a new member of the replica set as soon as possible to replace the lost redundancy."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:41
# cd9748d2d39341bc9b8b4db600b42dac
msgid "All Members of a Replica Set Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:43
# 95e872fddf554d2693b35b464f846709
msgid "If all members of a replica set within a shard are unavailable, all data held in that shard is unavailable. However, the data on all other shards will remain available, and it's possible to read and write data to the other shards. However, your application must be able to deal with partial results, and you should investigate the cause of the interruption and attempt to recover the shard as soon as possible."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:51
# b05c352b58a544138431333759772813
msgid "One or Two Config Databases Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:53
# 896bc648fcc24f9caa9557f2fe9b9002
msgid "Three distinct :program:`mongod` instances provide the :term:`config database` using a special two-phase commits to maintain consistent state between these :program:`mongod` instances. Cluster operation will continue as normal but :ref:`chunk migration <sharding-balancing>` and the cluster can create no new :doc:`chunk splits </tutorial/split-chunks-in-sharded-cluster>`. Replace the config server as soon as possible. If all config databases become unavailable, the cluster can become inoperable."
msgstr ""

#: ../source/includes/note-config-server-startup.rst:3
# d4757394482543628016f27d71cb4795
msgid "All config servers must be running and available when you first initiate a :term:`sharded cluster`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:64
# b2332f936a45445b83b8743ea1610d13
msgid "If an unavailable secondary becomes available while it still has current oplog entries, it can catch up to the latest state of the set using the normal :term:`replication process <sync>`, otherwise it must perform an :term:`initial sync`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:72
# 4ecdd369b98d407baabc65cfffce2af8
msgid "Renaming Config Servers and Cluster Availability"
msgstr ""

#: ../source/includes/fact-rename-config-servers-requires-cluster-restart.rst:1
# 70fec6e9e7c947e6943fa7a14d97a1f4
msgid "If the name or address that a sharded cluster uses to connect to a config server changes, you must restart **every** :program:`mongod` and :program:`mongos` instance in the sharded cluster. Avoid downtime by using CNAMEs to identify config servers within the MongoDB deployment."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:76
# 9a364302061a407a972c151019ec08e2
msgid "To avoid downtime when renaming config servers, use DNS names unrelated to physical or virtual hostnames to refer to your :ref:`config servers <sharding-config-server>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:80
# db8254a810bc4155baff090addd7fddc
msgid "Generally, refer to each config server using the DNS alias (e.g. a CNAME record). When specifying the config server connection string to :program:`mongos`, use these names. These records make it possible to change the IP address or rename config servers without changing the connection string and without having to restart the entire cluster."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:87
# 8431bdb6506b4506939a861f983fb586
msgid "Shard Keys and Cluster Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:89
# f178fed8c9264157b330dc0d43ceb7c2
msgid "The most important consideration when choosing a :term:`shard key` are:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:92
# f93730e0038f4a1bb523026429417996
msgid "to ensure that MongoDB will be able to distribute data evenly among shards, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:95
# a5c5f3f569ef48cfa4b7b6bd3efba9fc
msgid "to scale writes across the cluster, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:97
# bee10b495c2a4224b0f6887941d8fe07
msgid "to ensure that :program:`mongos` can isolate most queries to a specific :program:`mongod`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:100
# e974a88266914d5eb562ac55a5c4e8b1
msgid "Furthermore:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:102
# 157f93b4c96e4e53adb493f20e6011a6
msgid "Each shard should be a :term:`replica set`, if a specific :program:`mongod` instance fails, the replica set members will elect another to be :term:`primary` and continue operation. However, if an entire shard is unreachable or fails for some reason, that data will be unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:108
# 052d7589430a45e5b699958997c7282a
msgid "If the shard key allows the :program:`mongos` to isolate most operations to a single shard, then the failure of a single shard will only render *some* data unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:112
# 95fddf14b64f439e9c5f71ac99653871
msgid "If your shard key distributes data required for every operation throughout the cluster, then the failure of the entire shard will render the entire cluster unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:116
# 3050466037764f638048b89a838e05fc
msgid "In essence, this concern for reliability simply underscores the importance of choosing a shard key that isolates query operations to a single shard."
msgstr ""

