# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-architecture-geographically-distributed.txt:5
# 9f6030d21e5147d391881dd1c6d54971
msgid "Geographically Distributed Replica Sets"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:9
# ed200c34186e4aebb2058a72cecf3836
msgid "Adding members to a replica set in multiple data centers adds redundancy and provides fault tolerance if one data center is unavailable. Members in additional data centers should have a :doc:`priority of 0 </core/replica-set-priority-0-member>` to prevent them from becoming primary."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:15
# f500fc5829ad4c569d3c8bccc3835595
msgid "For example: the architecture of a geographically distributed replica set may be:"
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:18
# 326e25a0f5ee438499837d99b84cec4c
msgid "One :term:`primary <primary>` in the main data center."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:20
# 257312ae927d40af8d2fd7632ba3ab58
msgid "One :term:`secondary <secondary>` member in the main data center. This member can become primary at any time."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:23
# 89b4f30e93194e3d8e25c7086169dc5f
msgid "One :doc:`priority 0 </core/replica-set-priority-0-member>` member in a second data center. This member cannot become primary."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:26
# 10f16baec4734d64872087e54733887b
msgid "In the following replica set, the primary and one secondary are in *Data Center 1*, while *Data Center 2* has a :doc:`priority 0 </core/replica-set-priority-0-member>` secondary that cannot become a primary."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:33
# e8890171a5e64fd0a15edc760dc5d87e
msgid "If the primary is unavailable, the replica set will elect a new primary from *Data Center 1*. If the data centers cannot connect to each other, the member in *Data Center 2* will not become the primary."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:37
# f23cb463a8eb4456adbc0482f5d0560f
msgid "If *Data Center 1* becomes unavailable, you can manually recover the data set from *Data Center 2* with minimal downtime. With sufficient :ref:`write concern <write-concern>`, there will be no data loss."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:41
# 0c5be7c97da84f7787708dfa2a409939
msgid "To facilitate elections, the main data center should hold a majority of members. Also ensure that the set has an odd number of members. If adding a member in another data center results in a set with an even number of members, deploy an :ref:`arbiter <replica-set-arbiters>`. For more information on elections, see :doc:`/core/replica-set-elections`."
msgstr ""

#: ../source/core/replica-set-architecture-geographically-distributed.txt:48
# 20b44b7ef2c04f35b09a17f083731655
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`."
msgstr ""

