# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-creation.txt:7
# 3b719494a6194a30aa870f939d95568e
msgid "Index Creation"
msgstr ""

#: ../source/core/index-creation.txt:11
# 6a5d0f49221c46b8a0960643c82bc95d
msgid "MongoDB provides several options that *only* affect the creation of the index. Specify these options in a document as the second argument to the :method:`db.collection.ensureIndex()` method. This section describes the uses of these creation options and their behavior."
msgstr ""

#: ../source/core/index-creation.txt:0
# 989f03d4731b430b8c825c53a97df3c8
msgid "Related"
msgstr ""

#: ../source/core/index-creation.txt:18
# 4be6074cb8744763b4d5208454505acb
msgid "Some options that you can specify to :method:`~db.collection.ensureIndex()` options control the :doc:`properties of the index </core/index-properties>`, which are *not* index creation options. For example, the :doc:`unique </core/index-unique>` option affects the behavior of the index after creation."
msgstr ""

#: ../source/core/index-creation.txt:25
# 6ca8947f2705497c921b923c58e3e474
msgid "For a detailed description of MongoDB's index types, see :doc:`/core/index-types` and :doc:`/core/index-properties` for related documentation."
msgstr ""

#: ../source/core/index-creation.txt:33
# 2664eb4978cb49b79ee95d04439e2a39
msgid "Background Construction"
msgstr ""

#: ../source/core/index-creation.txt:35
# aa0168f9a04c4fe6ae7b2c62873048d4
msgid "By default, creating an index blocks all other operations on a database. When building an index on a collection, the database that holds the collection is unavailable for read or write operations until the index build completes. Any operation that requires a read or write lock on all databases (e.g. :command:`listDatabases`) will wait for the foreground index build to complete."
msgstr ""

#: ../source/core/index-creation.txt:42
# 8cb14bb24a68460f9c9b177af7a3ede4
msgid "For potentially long running index building operations, consider the ``background`` operation so that the MongoDB database remains available during the index building operation. For example, to create an index in the background of the ``zipcode`` field of the ``people`` collection, issue the following:"
msgstr ""

#: ../source/core/index-creation.txt:52
# 20c16fad16cc4970b5d14a0477da7ec9
msgid "By default, ``background`` is ``false`` for building MongoDB indexes."
msgstr ""

#: ../source/core/index-creation.txt:54
# 3fd34411e1ca4be787f88d9e96050081
msgid "You can combine the background option with other options, as in the following:"
msgstr ""

#: ../source/core/index-creation.txt:62
# b26710afc3c44540a12141c6234a7962
msgid "Behavior"
msgstr ""

#: ../source/core/index-creation.txt:64
# d3dc3ee313164e42bb71d557719fc35f
msgid "As of MongoDB version 2.4, a :program:`mongod` instance can build more than one index in the background concurrently."
msgstr ""

#: ../source/core/index-creation.txt:67
# 55d6ca9e9450436baedcb3e7a87f8dcc
msgid "Before 2.4, a :program:`mongod` instance could only build one background index per database at a time."
msgstr ""

#: ../source/core/index-creation.txt:71
# d8268b6597f8484f94dff977cef5b8b9
msgid "Before 2.2, a single :program:`mongod` instance could only build one index at a time."
msgstr ""

#: ../source/core/index-creation.txt:75
# 08d162adf12e48ba8693753d02822778
msgid "Background indexing operations run in the background so that other database operations can run while creating the index. However, the :program:`mongo` shell session or connection where you are creating the index *will* block until the index build is complete. To continue issuing commands to the database, open another connection or :program:`mongo` instance."
msgstr ""

#: ../source/core/index-creation.txt:82
# af99669e19e04edeba5a0907cac8c86d
msgid "Queries will not use partially-built indexes: the index will only be usable once the index build is complete."
msgstr ""

#: ../source/core/index-creation.txt:87
# 901e1de17f874bc08e616dffc3e6d9ee
msgid "If MongoDB is building an index in the background, you cannot perform other administrative operations involving that collection, including running :dbcommand:`repairDatabase`, dropping the collection (i.e. :method:`db.collection.drop()`), and running :dbcommand:`compact`. These operations will return an error during background index builds."
msgstr ""

#: ../source/core/index-creation.txt:95
# 5a6c0955c98d4e5e876ea89401d538f3
msgid "Performance"
msgstr ""

#: ../source/core/index-creation.txt:97
# 282ba3921dc040e584764c597aaebeaa
msgid "The background index operation uses an incremental approach that is slower than the normal \"foreground\" index builds. If the index is larger than the available RAM, then the incremental process can take *much* longer than the foreground build."
msgstr ""

#: ../source/core/index-creation.txt:102
# 2884daae121b4fb18f45358e3127e671
msgid "If your application includes :method:`ensureIndex() <db.collection.ensureIndex()>` operations, and an index *doesn't* exist for other operational concerns, building the index can have a severe impact on the performance of the database."
msgstr ""

#: ../source/core/index-creation.txt:108
# 5a0ec21f72814a8c9a6fe743db8d4997
msgid "To avoid performance issues, make sure that your application checks for the indexes at start up using the :method:`~db.collection.getIndexes()` method or the :api:`equivalent method for your driver <>` and terminates if the proper indexes do not exist. Always build indexes in production instances using separate application code, during designated maintenance windows."
msgstr ""

#: ../source/core/index-creation.txt:118
# 928fe67bcbfc40cfaa5fed5bf8e89f6e
msgid "Building Indexes on Secondaries"
msgstr ""

#: ../source/core/index-creation.txt:120
# 619766d6bbbb4520ac1984c94666bc84
msgid "Secondary members can now build indexes in the background. Previously all index builds on secondaries were in the foreground."
msgstr ""

#: ../source/core/index-creation.txt:125
# 14cca8c4808b457d9001bbf0548265f4
msgid "Background index operations on a :term:`replica set` :term:`secondaries <secondary>` begin after the :term:`primary` completes building the index. If MongoDB builds an index in the background on the primary, the secondaries will then build that index in the background."
msgstr ""

#: ../source/core/index-creation.txt:131
# 5a5d53b2486e43559212c498d023b576
msgid "To build large indexes on secondaries the best approach is to restart one secondary at a time in :term:`standalone` mode and build the index. After building the index, restart as a member of the replica set, allow it to catch up with the other members of the set, and then build the index on the next secondary. When all the secondaries have the new index, step down the primary, restart it as a standalone, and build the index on the former primary."
msgstr ""

#: ../source/core/index-creation.txt:139
# 8e730089974147efa89937d637f2b958
msgid "The amount of time required to build the index on a secondary must be within the window of the :term:`oplog`, so that the secondary can catch up with the primary."
msgstr ""

#: ../source/core/index-creation.txt:143
# 6fd5d8b40605457890e646f42de6798a
msgid "Indexes on secondary members in \"recovering\" mode are always built in the foreground to allow them to catch up as soon as possible."
msgstr ""

#: ../source/core/index-creation.txt:146
# ffcc09aedf114b9d8f1966c05f071263
msgid "See :ref:`index-building-replica-sets` for a complete procedure for building indexes on secondaries."
msgstr ""

#: ../source/core/index-creation.txt:154
# 50333641aadf444c8e90b889b3212ecf
msgid "Drop Duplicates"
msgstr ""

#: ../source/core/index-creation.txt:156
# 1d1b4d351c81454f9a42dfe1cd93a9f0
msgid "MongoDB cannot create a :ref:`unique index <index-type-unique>` on a field that has duplicate values. To force the creation of a unique index, you can specify the ``dropDups`` option, which will only index the first occurrence of a value for the key, and delete all subsequent values."
msgstr ""

#: ../source/core/index-creation.txt:164
# e6a6bbd8867c4340877b2af6e065deef
msgid "As in all unique indexes, if a document does not have the indexed field, MongoDB will include it in the index with a \"null\" value."
msgstr ""

#: ../source/core/index-creation.txt:167
# 2cbf5d57acaa4ff2968b026b19c634b7
msgid "If subsequent fields *do not* have the indexed field, and you have set ``{dropDups: true}``, MongoDB will remove these documents from the collection when creating the index. If you combine ``dropDups`` with the :ref:`sparse <index-type-sparse>` option, this index will only include documents in the index that have the value, and the documents without the field will remain in the database."
msgstr ""

#: ../source/core/index-creation.txt:174
# 6019e73852644e5fa96d1a79e4222ff6
msgid "To create a unique index that drops duplicates on the ``username`` field of the ``accounts`` collection, use a command in the following form:"
msgstr ""

#: ../source/core/index-creation.txt:183
# bd839550cf0e462fbe9ac541e53d7c49
msgid "Specifying ``{ dropDups: true }`` will delete data from your database. Use with extreme caution."
msgstr ""

#: ../source/core/index-creation.txt:186
# 65f4f9739b91497797c70a8f56705f35
msgid "By default, ``dropDups`` is ``false``."
msgstr ""

#: ../source/core/index-creation.txt:192
# e7fd67eb69b9437ebfaee6f51cf2a321
msgid "Index Names"
msgstr ""

#: ../source/core/index-creation.txt:196
# 5988ff08eeb84ab7be89066216ae27a9
msgid "The default name for an index is the concatenation of the indexed keys and each key's direction in the index, 1 or -1."
msgstr ""

#: ../source/core/index-creation.txt:0
#: ../source/core/index-creation.txt:0
# 4c387df5121a40b6bc444806b47f068f
# b7927ad695b24cd7a1a091a0c980d02a
msgid "Example"
msgstr ""

#: ../source/core/index-creation.txt:206
# 92bb681df86d4d2f8cd202399165284e
msgid "The resulting index is named: ``item_1_quantity_-1``."
msgstr ""

#: ../source/core/index-creation.txt:208
# e247bde5de444765a124bbfb5a58e47f
msgid "Optionally, you can specify a name for an index instead of using the default name."
msgstr ""

#: ../source/core/index-creation.txt:218
# 11b27734e57c4784b67105c5879acfc5
msgid "The resulting index has the name ``inventory``."
msgstr ""

#: ../source/core/index-creation.txt:220
# 84e657f844f84e3890ab34da1a55f3a8
msgid "To view the name of an index, use the :method:`getIndexes() <db.collection.getIndexes()>` method."
msgstr ""

#: ../source/core/index-creation.txt:1
#: ../source/core/index-creation.txt:29
#: ../source/core/index-creation.txt:149
#: ../source/core/index-creation.txt:150
#: ../source/core/index-creation.txt:188
# c5df37208a29462d9abf14496594cd2f
# 977cc7db5be14315843e7e88b8f153d3
# f1c5cf2820964e4bb631917ce3b5c45d
# a19a8b409c944fbca360355a9004c4ac
# f5e3fec270424b59b32b07e3454f0fd0
msgid "index"
msgstr ""

#: ../source/core/index-creation.txt:1
# c5df37208a29462d9abf14496594cd2f
msgid "options"
msgstr ""

#: ../source/core/index-creation.txt:29
# 977cc7db5be14315843e7e88b8f153d3
msgid "background creation"
msgstr ""

#: ../source/core/index-creation.txt:149
# f1c5cf2820964e4bb631917ce3b5c45d
msgid "duplicates"
msgstr ""

#: ../source/core/index-creation.txt:150
# a19a8b409c944fbca360355a9004c4ac
msgid "drop duplicates"
msgstr ""

#: ../source/core/index-creation.txt:188
# f5e3fec270424b59b32b07e3454f0fd0
msgid "name"
msgstr ""

