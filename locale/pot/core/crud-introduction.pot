# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/crud-introduction.txt:3
# 7765aa8656c5482ca04d4a0c16210da4
msgid "MongoDB CRUD Introduction"
msgstr ""

#: ../source/core/crud-introduction.txt:7
# 027e21b2b0f34121a825176f76d9339e
msgid "MongoDB stores data in the form of *documents*, which are JSON-like field and value pairs. Documents are analogous to structures in programming languages that associate keys with values (e.g. dictionaries, hashes, maps, and associative arrays). Formally, MongoDB documents are :term:`BSON` documents. BSON is a binary representation of :term:`JSON` with additional type information. In the documents, the value of a field can be any of the BSON data types, including other documents, arrays, and arrays of documents. For more information, see :doc:`/core/document`."
msgstr ""

#: ../source/core/crud-introduction.txt:19
# 03a84a1a6cd14e2ca095431a389a57bf
msgid "MongoDB stores all documents in :term:`collections <collection>`. A collection is a group of related documents that have a set of shared common indexes. Collections are analogous to a table in relational databases."
msgstr ""

#: ../source/core/crud-introduction.txt:27
# 13d87172632d44578fa0dca987e52998
msgid "Database Operations"
msgstr ""

#: ../source/core/crud-introduction.txt:30
# 1a168ea57c8b4ee89057864fb370d6ef
msgid "Query"
msgstr ""

#: ../source/core/crud-introduction.txt:32
# fbc16983aa454b37ae8b1dd2965d3a13
msgid "In MongoDB a query targets a specific collection of documents. Queries specify criteria, or conditions, that identify the documents that MongoDB returns to the clients. A query may include a *projection* that specifies the fields from the matching documents to return. You can optionally modify queries to impose limits, skips, and sort orders."
msgstr ""

#: ../source/core/crud-introduction.txt:38
# 9122ea42fa1d454cbab3964f578d0ce3
msgid "In the following diagram, the query process specifies a query criteria and a sort modifier:"
msgstr ""

#: ../source/core/crud-introduction.txt:43
# 29143be5f6814a7fb36a7cadda62d98c
msgid "See :doc:`/core/read-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:46
# c243cfd2bbe744aebab645686b357718
msgid "Data Modification"
msgstr ""

#: ../source/core/crud-introduction.txt:48
# d129d23a931049d4b2747a90055941a5
msgid "Data modification refers to operations that create, update, or delete data. In MongoDB, these operations modify the data of a single :term:`collection`. For the update and delete operations, you can specify the criteria to select the documents to update or remove."
msgstr ""

#: ../source/core/crud-introduction.txt:53
# 68f495188e324a25879bcbd8769434b9
msgid "In the following diagram, the insert operation adds a new document to the ``users`` collection."
msgstr ""

#: ../source/core/crud-introduction.txt:58
# ff8172b39e3648468428d9e8ef794761
msgid "See :doc:`/core/write-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:62
# c4bbfb0fea544694ac838efd1c555307
msgid "Related Features"
msgstr ""

#: ../source/core/crud-introduction.txt:65
# 07be7799e8fc432a939f79299a9642f9
msgid ":doc:`Indexes </indexes>`"
msgstr ""

#: ../source/core/crud-introduction.txt:67
# f0258c1b99db4f0194c11f0fed3cd5eb
msgid "To enhance the performance of common queries and updates, MongoDB has full support for secondary indexes. These indexes allow applications to store a *view* of a portion of the collection in an efficient data structure. Most indexes store an ordered representation of all values of a field or a group of fields. Indexes may also :ref:`enforce uniqueness <index-type-unique>`, store objects in a :doc:`geospatial representation </applications/geospatial-indexes>`, and facilitate :doc:`text search </core/index-text>`."
msgstr ""

#: ../source/core/crud-introduction.txt:78
# e80ba6403c374b368825a035bb4493d0
msgid ":doc:`Replica Set Read Preference </core/read-preference>`"
msgstr ""

#: ../source/core/crud-introduction.txt:80
# 0629eb0234164ea0833f4a33a3f19bf7
msgid "For replica sets and sharded clusters with replica set components, applications specify :ref:`read preferences <replica-set-read-preference>`. A read preference determines how the client direct read operations to the set."
msgstr ""

#: ../source/core/crud-introduction.txt:86
# b05d5a2cfde74c4d89cf25713891d456
msgid ":doc:`Write Concern </core/write-concern>`"
msgstr ""

#: ../source/core/crud-introduction.txt:88
# ca18973aa2ce4a06aca7343a2f4f2422
msgid "Applications can also control the behavior of write operations using :ref:`write concern <write-concern>`. Particularly useful for deployments with replica sets, the write concern semantics allow clients to specify the assurance that MongoDB provides when reporting on the success of a write operation."
msgstr ""

#: ../source/core/crud-introduction.txt:95
# 68d07b8f80fb434fa4b65cf8539a6093
msgid ":doc:`Aggregation </aggregation>`"
msgstr ""

#: ../source/core/crud-introduction.txt:97
# 818dbd3a7bea4a40a1b95106e804447e
msgid "In addition to the basic queries, MongoDB provides several data aggregation features. For example, MongoDB can return counts of the number of documents that match a query, or return the number of distinct values for a field, or process a collection of documents using a versatile stage-based data processing pipeline or map-reduce operations."
msgstr ""

