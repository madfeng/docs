# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/data-model-design.txt:5
# 8dd81d9124d047438fa44ebe8ffb3d7e
msgid "Data Model Design"
msgstr ""

#: ../source/core/data-model-design.txt:9
# bf3ad913c303427d81f118b889ba8c35
msgid "Effective data models support your application needs. The key consideration for the structure of your documents is the decision to :ref:`embed <data-modeling-embedding>` or to :ref:`use references <data-modeling-referencing>`."
msgstr ""

#: ../source/core/data-model-design.txt:17
# 7e1a95998e9c48d78745301c4ae9d0d0
msgid "Embedded Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:19
# ca1e0c459dfd457786482407fa769b2b
msgid "With MongoDB, you may embed related data in a single structure or document. These schema are generally known as \"denormalized\" models, and take advantage of MongoDB's rich documents. Consider the following diagram:"
msgstr ""

#: ../source/core/data-model-design.txt:26
# 60dc214a32714bc890faf6eedb25df9c
msgid "Embedded data models allow applications to store related pieces of information in the same database record. As a result, applications may need to issue fewer queries and updates to complete common operations."
msgstr ""

#: ../source/core/data-model-design.txt:30
# eec965988e87401d87e811b91da1650d
msgid "In general, use embedded data models when:"
msgstr ""

#: ../source/core/data-model-design.txt:32
# 44f9e5d44107423bae92af2bcf1c6442
msgid "you have \"contains\" relationships between entities. See :ref:`data-modeling-example-one-to-one`."
msgstr ""

#: ../source/core/data-model-design.txt:35
# 78c5f35542c04a9ab7b7df4fca1e4260
msgid "you have one-to-many relationships between entities. In these relationships the \"many\" or child documents always appear with or are viewed in the context of the \"one\" or parent documents.  See :ref:`data-modeling-example-one-to-many`."
msgstr ""

#: ../source/core/data-model-design.txt:40
# b016a6bc2ae04e71a86d0aae3c679837
msgid "In general, embedding provides better performance for read operations, as well as the ability to request and retrieve related data in a single database operation. Embedded data models make it possible to update related data in a single atomic write operation."
msgstr ""

#: ../source/core/data-model-design.txt:45
# 275de4f6b35845129f13649e470e713c
msgid "However, embedding related data in documents may lead to situations where documents grow after creation. Document growth can impact write performance and lead to data fragmentation. See :ref:`data-model-document-growth` for details. Furthermore, documents in MongoDB must be smaller than the :limit:`maximum BSON document size <BSON Document Size>`. For bulk binary data, consider :doc:`GridFS </core/gridfs>`."
msgstr ""

#: ../source/core/data-model-design.txt:53
# d285813c38714c378ac9647e53b7a22a
msgid "To interact with embedded documents, use :term:`dot notation` to \"reach into\" embedded documents. See :ref:`query for data in arrays <read-operations-arrays>` and :ref:`query data in sub-documents <read-operations-subdocuments>` for more examples on accessing data in arrays and embedded documents."
msgstr ""

#: ../source/core/data-model-design.txt:62
# 735486e249b74903a01b613578a26eb0
msgid "Normalized Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:64
# 0e3b0e8c40cd4594b41974a832b383e6
msgid "Normalized data models describe relationships using :doc:`references </reference/database-references>` between documents."
msgstr ""

#: ../source/core/data-model-design.txt:69
# 2ac32588a5624c4082d99f240eb82bbe
msgid "In general, use normalized data models:"
msgstr ""

#: ../source/core/data-model-design.txt:71
# b453de0799e9425e87fa07d9167c69e0
msgid "when embedding would result in duplication of data but would not provide sufficient read performance advantages to outweigh the implications of the duplication."
msgstr ""

#: ../source/core/data-model-design.txt:75
# bf7ead07f49a43e8b471a316eb4b5abd
msgid "to represent more complex many-to-many relationships."
msgstr ""

#: ../source/core/data-model-design.txt:77
# f71a7b1a2b104e1ca32c7ee82c46c7ba
msgid "to model large hierarchical data sets."
msgstr ""

#: ../source/core/data-model-design.txt:79
# 9c2344b742bb4e00871dd94f7542feae
msgid "References provides more flexibility than embedding. However, client-side applications must issue follow-up queries to resolve the references. In other words, normalized data models can require more round trips to the server."
msgstr ""

#: ../source/core/data-model-design.txt:84
# 79d5d84535cc416e9decd3c1ca71ef82
msgid "See :ref:`data-modeling-publisher-and-books` for an example of referencing. For examples of various tree models using references, see :doc:`/applications/data-models-tree-structures`."
msgstr ""

