# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/import-export.txt:3
# bf3c7306d5f440ef9226809edee52f94
msgid "Import and Export MongoDB Data"
msgstr ""

#: ../source/core/import-export.txt:10
# adc2a786bb804b9d9b3e7e6656735ced
msgid "This document provides an overview of the import and export programs included in the MongoDB distribution. These tools are useful when you want to backup or export a portion of your data without capturing the state of the entire database, or for simple data ingestion cases. For more complex data migration tasks, you may want to write your own import and export scripts using a client :term:`driver` to interact with the database itself. For disaster recovery protection and routine database backup operation, use full :doc:`database instance backups </core/backups>`."
msgstr ""

#: ../source/core/import-export.txt:22
# 16a8e7e009e44f998b7da37b5afdab3d
msgid "Because these tools primarily operate by interacting with a running :program:`mongod` instance, they can impact the performance of your running database."
msgstr ""

#: ../source/core/import-export.txt:26
# 50a2f8238b614650aad58740ea74ab4e
msgid "Not only do these processes create traffic for a running database instance, they also force the database to read all data through memory. When MongoDB reads infrequently used data, it can supplant more frequently accessed data, causing a deterioration in performance for the database's regular workload."
msgstr ""

#: ../source/core/import-export.txt:32
# f1d14b1f1d8f4e0dad91cf23fb13bd43
msgid ":doc:`/core/backups` or :mms:`MMS Backup Manual </backup>` for more information on backing up MongoDB instances. Additionally, consider the following references for the MongoDB import/export tools:"
msgstr ""

#: ../source/core/import-export.txt:37
# 6170762451fb4891ac51ce3efb5fb5bf
msgid ":doc:`/reference/program/mongoimport`"
msgstr ""

#: ../source/core/import-export.txt:38
# 3e58f54e68d04a4b9323da0ed45d49fe
msgid ":doc:`/reference/program/mongoexport`"
msgstr ""

#: ../source/core/import-export.txt:39
# 45d8e21f943142afbc7f336c099d5e3c
msgid ":doc:`/reference/program/mongorestore`"
msgstr ""

#: ../source/core/import-export.txt:40
# 1802cd4d04a643049739fdd81d2871ac
msgid ":doc:`/reference/program/mongodump`"
msgstr ""

#: ../source/core/import-export.txt:43
# 72296f3537c043798ebf2f9adf10c1ca
msgid "Data Import, Export, and Backup Operations"
msgstr ""

#: ../source/core/import-export.txt:45
# 3e00a192300b4b0187fbebdf30badeb8
msgid "For resilient and non-disruptive backups, use a file system or block-level disk snapshot function, such as the methods described in the :doc:`/core/backups` document. The tools and operations discussed provide functionality that is useful in the context of providing some kinds of backups."
msgstr ""

#: ../source/core/import-export.txt:51
# f8bf3acea11b4f938478ccf73368f177
msgid "In contrast, use import and export tools to backup a small subset of your data or to move data to or from a third party system. These backups may capture a small crucial set of data or a frequently modified section of data for extra insurance, or for ease of access."
msgstr ""

#: ../source/includes/warning-type-fidelity-loss.rst:3
#: ../source/includes/warning-type-fidelity-loss.rst:3
#: ../source/includes/warning-type-fidelity-loss.rst:3
# b5992b62e07b4869becee081fe2a7dbf
# bd62ae78cab84b44a5d55b16f9d8397a
# 99da971d25f34b7cbdaadb6d25f995a4
msgid ":program:`mongoimport` and :program:`mongoexport` do not reliably preserve all rich :term:`BSON` data types because :term:`JSON` can only represent a subset of the types supported by BSON. As a result, data exported or imported with these tools may lose some measure of fidelity. See :doc:`/reference/mongodb-extended-json` for more information."
msgstr ""

#: ../source/core/import-export.txt:58
# 588a73ea905e4b54af607c2614b0b4f2
msgid "No matter how you decide to import or export your data, consider the following guidelines:"
msgstr ""

#: ../source/core/import-export.txt:61
# 00d19ff994f0441cb3cfc647cdf26fb2
msgid "Label files so that you can identify the contents of the export or backup as well as the point in time the export/backup reflect."
msgstr ""

#: ../source/core/import-export.txt:64
# afbee9c761894e05a5964112d5739b28
msgid "Do not create or apply exports if the backup process itself will have an adverse effect on a production system."
msgstr ""

#: ../source/core/import-export.txt:67
# 994fb0ae8fc14f5188ec8ca50ff2dd9e
msgid "Make sure that they reflect a consistent data state. Export or backup processes can impact data integrity (i.e. type fidelity) and consistency if updates continue during the backup process."
msgstr ""

#: ../source/core/import-export.txt:71
# 53300d910701499794074d7902b51a8b
msgid "Test backups and exports by restoring and importing to ensure that the backups are useful."
msgstr ""

#: ../source/core/import-export.txt:75
# d1b87e3b6ca143188f9f9c1c1d1ba8b8
msgid "Human Intelligible Import/Export Formats"
msgstr ""

#: ../source/core/import-export.txt:77
# d91c5ec264294f0da0026d80065b9352
msgid "This section describes a process to import/export a collection to a file in a :term:`JSON` or :term:`CSV` format."
msgstr ""

#: ../source/core/import-export.txt:80
# e9f7ac5f700a4380983124bd4f6a0bea
msgid "The examples in this section use the MongoDB tools :doc:`/reference/program/mongoimport` and :doc:`/reference/program/mongoexport`. These tools may also be useful for importing data into a MongoDB database from third party applications."
msgstr ""

#: ../source/core/import-export.txt:86
# 276602fa31c34af5ab8558fa06074884
msgid "If you want to simply copy a database or collection from one instance to another, consider using the :dbcommand:`copydb`, :dbcommand:`clone`, or :dbcommand:`cloneCollection` commands, which may be more suited to this task. The :program:`mongo` shell provides the :method:`db.copyDatabase()` method."
msgstr ""

#: ../source/core/import-export.txt:93
# 9d8964532f8f4c9186421f84dced9456
msgid "Collection Export with :program:`mongoexport`"
msgstr ""

#: ../source/core/import-export.txt:97
# 31b9ac141da346c3beee18266313e221
msgid "With the :program:`mongoexport` utility you can create a backup file. In the most simple invocation, the command takes the following form:"
msgstr ""

#: ../source/core/import-export.txt:105
# 1f4d9b9a6d1e4bd3842b4e6c89518755
msgid "This will export all documents in the collection named ``collection`` into the file ``collection.json``. Without the output specification (i.e. \":option:`--out collection.json <mongoexport --out>`\"), :program:`mongoexport` writes output to standard output (i.e. \"stdout\"). You can further narrow the results by supplying a query filter using the \":option:`--query <mongoexport --query>`\" and limit results to a single database using the \":option:`--db <mongoexport --db>`\" option. For instance:"
msgstr ""

#: ../source/core/import-export.txt:118
# 9f0e20d877c6468e87c81c517b006cde
msgid "This command returns all documents in the ``sales`` database's ``contacts`` collection, with a field named ``field`` with a value of ``1``. Enclose the query in single quotes (e.g. ``'``) to ensure that it does not interact with your shell environment. The resulting documents will return on standard output."
msgstr ""

#: ../source/core/import-export.txt:124
# f8ca770e017c452e91de33c93c35ef36
msgid "By default, :program:`mongoexport` returns one :term:`JSON document` per MongoDB document. Specify the \":option:`--jsonArray <mongoexport --jsonArray>`\" argument to return the export as a single :term:`JSON` array. Use the \":option:`--csv <mongoexport --csv>`\" file to return the result in CSV (comma separated values) format."
msgstr ""

#: ../source/core/import-export.txt:131
# c4e5b7715b7d44bcad8bea17cc18dc23
msgid "If your :program:`mongod` instance is not running, you can use the \":option:`--dbpath <mongoexport --dbpath>`\" option to specify the location to your MongoDB instance's database files. See the following example:"
msgstr ""

#: ../source/core/import-export.txt:140
# c926cfdd18a64695a1c72edba692da93
msgid "This reads the data files directly. This locks the data directory to prevent conflicting writes. The :program:`mongod` process must *not* be running or attached to these data files when you run :program:`mongoexport` in this configuration."
msgstr ""

#: ../source/core/import-export.txt:145
# 4e3c245400d34b76a7af821e06150a5b
msgid "The \":option:`--host <mongoexport --host>`\" and \":option:`--port <mongoexport --port>`\" options allow you to specify a non-local host to connect to capture the export. Consider the following example:"
msgstr ""

#: ../source/core/import-export.txt:153
# b2270ef577694bd3960ee14b6f956443
msgid "On any :program:`mongoexport` command you may, as above specify username and password credentials as above."
msgstr ""

#: ../source/core/import-export.txt:157
# 4ad70d80bcf34f18a2d197acdd059686
msgid "Collection Import with :program:`mongoimport`"
msgstr ""

#: ../source/core/import-export.txt:161
# 1f0cbc3cf993449da4cd47103517fff7
msgid "To restore a backup taken with :program:`mongoexport`. Most of the arguments to :program:`mongoexport` also exist for :program:`mongoimport`. Consider the following command:"
msgstr ""

#: ../source/core/import-export.txt:169
# 407884f151114fb19be239659fd8532f
msgid "This imports the contents of the file ``collection.json`` into the collection named ``collection``. If you do not specify a file with the \":option:`--file <mongoimport --file>`\" option, :program:`mongoimport` accepts input over standard input (e.g. \"stdin.\")"
msgstr ""

#: ../source/core/import-export.txt:175
# 8ffdffd9e3154801aad8f66a66b210d9
msgid "If you specify the \":option:`--upsert <mongoimport --upsert>`\" option, all of :program:`mongoimport` operations will attempt to update existing documents in the database and insert other documents. This option will cause some performance impact depending on your configuration."
msgstr ""

#: ../source/core/import-export.txt:181
# 3de0fb8e23914094b2aad47c82604969
msgid "You can specify the database option :option:`--db <mongoimport --db>` to import these documents to a particular database. If your MongoDB instance is not running, use the \":option:`--dbpath <mongoimport --dbpath>`\" option to specify the location of your MongoDB instance's database files. Consider using the \":option:`--journal <mongoimport --journal>`\" option to ensure that :program:`mongoimport` records its operations in the journal. The ``mongod`` process must *not* be running or attached to these data files when you run :program:`mongoimport` in this configuration."
msgstr ""

#: ../source/core/import-export.txt:191
# 17c0337128374527b19d274ae7d0e560
msgid "Use the \":option:`--ignoreBlanks <mongoimport --ignoreBlanks>`\" option to ignore blank fields. For :term:`CSV` and :term:`TSV` imports, this option provides the desired functionality in most cases: it avoids inserting blank fields in MongoDB documents."
msgstr ""

