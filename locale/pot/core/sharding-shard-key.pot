# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharding-shard-key.txt:10
# c551b728bad14f1586c5240756023cc4
msgid "Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:14
# c38c30bcfd8642ed84fc68f789dda3d9
msgid "The shard key determines the distribution of the collection's :term:`documents <document>` among the cluster's :term:`shards <shard>`. The shard key is either an indexed :term:`field` or an indexed compound field that exists in every document in the collection."
msgstr ""

#: ../source/core/sharding-shard-key.txt:20
# 78fd6fd9a77646e690ebd820262a660d
msgid "MongoDB partitions data in the collection using ranges of shard key values. Each range, or :term:`chunk`, defines a non-overlapping range of shard key values. MongoDB distributes the chunks, and their documents, among the shards in the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:27
# ca63397c05174a2cb96f638eb9dc00e6
msgid "When a chunk grows beyond the :ref:`chunk size <sharding-chunk-size>`, MongoDB :term:`splits <split>` the chunk into smaller chunks, always based on ranges in the shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:32
# 0a22a3f106654dd8b5043b3c9fabf1cc
msgid "Considerations"
msgstr ""

#: ../source/core/sharding-shard-key.txt:34
# 7f6479345bce46f7b1b47053ac076af6
msgid "Shard keys are immutable and cannot be changed after insertion. See the :ref:`system limits for sharded cluster <limits-sharding>` for more information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:38
# 8908be6b6f59466aa66da32e4915883e
msgid "The index on the shard key **cannot** be a :ref:`multikey index <index-type-multikey>`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:44
# 651819d316e84551acfb320424dfaf00
msgid "Hashed Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:48
# edfea2504f2f4776b75f413173e89e92
msgid "Hashed shard keys use a :ref:`hashed index <index-hashed-index>` of a single field as the :term:`shard key` to partition data across your sharded cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:52
# 5bb703c0e87f4e47b7ef84eb8131cade
msgid "The field you choose as your hashed shard key should have a good cardinality, or large number of different values. Hashed keys work well with fields that increase monotonically like :term:`ObjectId` values or timestamps."
msgstr ""

#: ../source/core/sharding-shard-key.txt:57
# 6e5d615f0c9b44929b7a6d514012c021
msgid "If you shard an empty collection using a hashed shard key, MongoDB will automatically create and migrate chunks so that each shard has two chunks.  You can control how many chunks MongoDB will create with the ``numInitialChunks`` parameter to :dbcommand:`shardCollection` or by manually creating chunks on the empty collection using the :dbcommand:`split` command."
msgstr ""

#: ../source/core/sharding-shard-key.txt:64
# bdb4c297d7584dae80200dc546ac171e
msgid "To shard a collection using a hashed shard key, see :doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:0
# 9a81f2b83f13424e840276e2e80d466b
msgid "Tip"
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:3
# fe6b8ba7a9964d1d9d7890228a786129
msgid "MongoDB automatically computes the hashes when resolving queries using hashed indexes.  Applications do **not** need to compute hashes."
msgstr ""

#: ../source/core/sharding-shard-key.txt:70
# 64336ae6223e4550b21f72492456e04a
msgid "Impacts of Shard Keys on Cluster Operations"
msgstr ""

#: ../source/core/sharding-shard-key.txt:72
# 2c383500d1fb49b79c66a142bf382248
msgid "The shard key affects write and query performance by determining how the MongoDB partitions data in the cluster and how effectively the :program:`mongos` instances can direct operations to the cluster. Consider the following operational impacts of shard key selection:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:82
# 78125add485a42afb0d86e24fe615092
msgid "Write Scaling"
msgstr ""

#: ../source/core/sharding-shard-key.txt:84
# 6a096d6b2d7943deb2880f3643df5cf8
msgid "Some possible shard keys will allow your application to take advantage of the increased write capacity that the cluster can provide, while others do not. Consider the following example where you shard by the values of the default :term:`_id` field, which is :term:`ObjectId`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:89
# ee46a6d7b501428085169987d30ff229
msgid "MongoDB generates ``ObjectId`` values upon document creation to produce a unique identifier for the object. However, the most significant bits of data in this value represent a time stamp, which means that they increment in a regular and predictable pattern. Even though this value has :ref:`high cardinality <sharding-shard-key-cardinality>`, when using this, *any date, or other monotonically increasing number* as the shard key, all insert operations will be storing data into a single chunk, and therefore, a single shard. As a result, the write capacity of this shard will define the effective write capacity of the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:100
# dfe870836f0349c0ae761b176e2e73a8
msgid "A shard key that increases monotonically will not hinder performance if you have a very low insert rate, or if most of your write operations are :method:`~db.collection.update()` operations distributed through your entire data set. Generally, choose shard keys that have *both* high cardinality and will distribute write operations across the *entire cluster*."
msgstr ""

#: ../source/core/sharding-shard-key.txt:107
# 711b0f24c6fa447a83d7932a75f88b7b
msgid "Typically, a computed shard key that has some amount of \"randomness,\" such as ones that include a cryptographic hash (i.e. MD5 or SHA1) of other content in the document, will allow the cluster to scale write operations. However, random shard keys do not typically provide :ref:`query isolation <sharding-shard-key-query-isolation>`, which is another important characteristic of shard keys."
msgstr ""

#: ../source/core/sharding-shard-key.txt:114
# a26711df35454b558dbb9a5d5e332346
msgid "MongoDB makes it possible to shard a collection on a hashed index. This can greatly improve write scaling. See :doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:122
# e17c3322e053491f9a91c0d9256a88b1
msgid "Querying"
msgstr ""

#: ../source/core/sharding-shard-key.txt:124
# 2779c360023e4209a61dbf71aae3b1ea
msgid "The :program:`mongos` provides an interface for applications to interact with sharded clusters that hides the complexity of :term:`data partitioning <partition>`. A :program:`mongos` receives queries from applications, and uses metadata from the :ref:`config server <sharding-config-server>`, to route queries to the :program:`mongod` instances with the appropriate data. While the :program:`mongos` succeeds in making all querying operational in sharded environments, the :term:`shard key` you select can have a profound affect on query performance."
msgstr ""

#: ../source/core/sharding-shard-key.txt:134
# 80b0789341294993ad7b9cc59a37de0c
msgid "The :doc:`/core/sharded-cluster-query-router` and :ref:`config server <sharding-config-server>` sections for a more general overview of querying in sharded environments."
msgstr ""

#: ../source/core/sharding-shard-key.txt:142
# 028153f3d0be4b659c6a3a034d409347
msgid "Query Isolation"
msgstr ""

#: ../source/core/sharding-shard-key.txt:144
# 41e9656c3dee4ba1a49e09419927b48e
msgid "The fastest queries in a sharded environment are those that :program:`mongos` will route to a single shard, using the :term:`shard key` and the cluster meta data from the :ref:`config server <sharding-config-server>`. For queries that don't include the shard key, :program:`mongos` must query all shards, wait for their response and then return the result to the application. These \"scatter/gather\" queries can be long running operations."
msgstr ""

#: ../source/core/sharding-shard-key.txt:152
# c66156cf6c8a405fba4f59d307349437
msgid "If your query includes the first component of a compound shard key [#shard-key-index]_, the :program:`mongos` can route the query directly to a single shard, or a small number of shards, which provides better performance. Even if you query values of the shard key that reside in different chunks, the :program:`mongos` will route queries directly to specific shards."
msgstr ""

#: ../source/core/sharding-shard-key.txt:159
# b579baad93754bc28a576921959f89bf
msgid "To select a shard key for a collection:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:161
# de330236bd714486af2a5db7ca5e45fd
msgid "determine the most commonly included fields in queries for a given application"
msgstr ""

#: ../source/core/sharding-shard-key.txt:164
# 8ada96d55ef14368a447943edb52857e
msgid "find which of these operations are most performance dependent."
msgstr ""

#: ../source/core/sharding-shard-key.txt:168
# 2cb8198083524c25bfbdbfe2161e84eb
msgid "If this field has low cardinality (i.e not sufficiently selective) you should add a second field to the shard key making a compound shard key. The data may become more splittable with a compound shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:0
# 0729d35e24544a8c9e1905f89ee2c862
msgid "See"
msgstr ""

#: ../source/core/sharding-shard-key.txt:176
# 0cb753ecd8ba44dfb9317d7f4506d346
msgid "In many ways, you can think of the shard key a cluster-wide unique index. However, be aware that sharded systems cannot enforce cluster-wide unique indexes *unless* the unique field is in the shard key. Consider the :doc:`/core/indexes` page for more information on indexes and compound indexes."
msgstr ""

#: ../source/core/sharding-shard-key.txt:183
# d5a44e7ab2724a5a80495eba674a2d9a
msgid "Sorting"
msgstr ""

#: ../source/core/sharding-shard-key.txt:185
# 1c49a12ef03447f79aa314c71f98ab18
msgid "In sharded systems, the :program:`mongos` performs a merge-sort of all sorted query results from the shards. See :doc:`/core/sharded-cluster-query-router` and :ref:`index-sort` for more information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:78
#: ../source/core/sharding-shard-key.txt:138
# f306e603106c4e14a5dd5fe51a5147bf
# f306e603106c4e14a5dd5fe51a5147bf
# c9fc53263c52420f83bd7fcdd2a63757
# 4326764f3dc1477b9fbd1824b3076e55
msgid "shard key"
msgstr ""

#: ../source/core/sharding-shard-key.txt:1
# f306e603106c4e14a5dd5fe51a5147bf
msgid "sharding"
msgstr ""

#: ../source/core/sharding-shard-key.txt:78
# c9fc53263c52420f83bd7fcdd2a63757
msgid "write scaling"
msgstr ""

#: ../source/core/sharding-shard-key.txt:138
# 4326764f3dc1477b9fbd1824b3076e55
msgid "query isolation"
msgstr ""

