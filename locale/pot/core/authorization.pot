# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authorization.txt:5
# 33c3a444032741d0ac77268ce640f7ba
msgid "Authorization"
msgstr ""

#: ../source/core/authorization.txt:9
# c2ab1848cf524551b492a4085e2f8e15
msgid "MongoDB employs Role-Based Access Control (RBAC) to govern access to a MongoDB system. A user is granted one or more :ref:`roles <roles>` that determine the user's access to database resources and operations. Outside of role assignments, the user has no access to the system."
msgstr ""

#: ../source/core/authorization.txt:14
# 992ac7400db2410a87d66b8cd66a5bdc
msgid "MongoDB does not enable authorization by default. You can enable authorization using the :option:`--auth` or the :option:`--keyFile` options, or if using a configuration file, with the :setting:`security.authorization` or the :setting:`security.keyFile` settings."
msgstr ""

#: ../source/core/authorization.txt:20
# 46d3875c3ecc4f4e8709429d3230e002
msgid "MongoDB provides :doc:`built-in roles </reference/built-in-roles>`, each with a dedicated purpose for a common use case. Examples include the :authrole:`read`, :authrole:`readWrite`, :authrole:`dbAdmin`, and :authrole:`root` roles."
msgstr ""

#: ../source/core/authorization.txt:25
# c1d5674e01d5459ebef3f19f730e59bf
msgid "Administrators also can create new roles and privileges to cater to operational needs. Administrators can assign privileges scoped as granularly as the collection level."
msgstr ""

#: ../source/core/authorization.txt:29
# f1a9eec990f14cfe8c0b81a5b3f2f01a
msgid "When granted a role, a user receives all the privileges of that role. A user can have several roles concurrently, in which case the user receives the union of all the privileges of the respective roles."
msgstr ""

#: ../source/core/authorization.txt:36
# 6f9e140bd8624d9d8d39259804bd288b
msgid "Roles"
msgstr ""

#: ../source/core/authorization.txt:38
# 490fc7831cda45e3a8fc565d776c525f
msgid "A role consists of privileges that pair resources with allowed operations. Each privilege is defined directly in the role or inherited from another role."
msgstr ""

#: ../source/core/authorization.txt:42
# 24ee4cd538ae4eb588e486887a5989f1
msgid "A role's privileges apply to the database where the role is created. A role created on the ``admin`` database can include privileges that apply to all databases or to the :ref:`cluster <resource-cluster>`."
msgstr ""

#: ../source/core/authorization.txt:46
# fed68e67f5d54b9db22ae4796eaafcb1
msgid "A user assigned a role receives all the privileges of that role. The user can have multiple roles and can have different roles on different databases."
msgstr ""

#: ../source/core/authorization.txt:49
# 617b1a3f0e8a41da85d83df60e512bec
msgid "Roles always grant privileges and never limit access. For example, if a user has both :authrole:`read` *and* :authrole:`readWriteAnyDatabase` roles on a database, the greater access prevails."
msgstr ""

#: ../source/core/authorization.txt:56
# f34e79425b4e42daa616e9c0fafa7fa5
msgid "Privileges"
msgstr ""

#: ../source/core/authorization.txt:58
# 20159a46c4bd45849a1763d782db449d
msgid "A privilege consists of a specified resource and the actions permitted on the resource."
msgstr ""

#: ../source/core/authorization.txt:61
# c30c23d1a2c34648afe21f2155c58ed2
msgid "A privilege :doc:`resource </reference/resource-document>` is either a database, collection, set of collections, or the cluster. If the cluster, the affiliated actions affect the state of the system rather than a specific database or collection."
msgstr ""

#: ../source/core/authorization.txt:66
# 91d1eb56d02e4fd69d3fe85665bab5c7
msgid "An :doc:`action </reference/privilege-actions>` is a command or method the user is allowed to perform on the resource. A resource can have multiple allowed actions. For available actions see :doc:`/reference/privilege-actions`."
msgstr ""

#: ../source/core/authorization.txt:71
# d912fe1754b54b41884ab3b6ac1ee659
msgid "For example, a privilege that includes the :authaction:`update` action allows a user to modify existing documents on the resource. To additionally grant the user permission to create documents on the resource, the administrator would add the :authaction:`insert` action to the privilege."
msgstr ""

#: ../source/core/authorization.txt:77
# 6d2af2ec15344ddb92a47e6107a21ec0
msgid "For privilege syntax, see :data:`admin.system.roles.privileges`."
msgstr ""

#: ../source/core/authorization.txt:82
# 4cc5da5f6fea42568ebccb0d701dcfb0
msgid "Inherited Privileges"
msgstr ""

#: ../source/core/authorization.txt:84
# 4ec793e309b14a6fac5467c25178a9ed
msgid "A role can include one or more existing roles in its definition, in which case the role inherits all the privileges of the included roles."
msgstr ""

#: ../source/core/authorization.txt:87
# 9cb81cec8f53437e9f945a72f028c3fd
msgid "A role can inherit privileges from other roles in its database. A role created on the ``admin`` database can inherit privileges from roles in any database."
msgstr ""

#: ../source/core/authorization.txt:93
# 08694f81fcf24deea92eee1889cea985
msgid "User-Defined Roles"
msgstr ""

#: ../source/core/authorization.txt:97
# 4df8a2867cea4b09ace8ded123f549a1
msgid "User administrators can create custom roles to ensure collection-level and command-level granularity and to adhere to the policy of :term:`least privilege`. Administrators create and edit roles using the :ref:`role management commands <role-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:102
# 8e78241220cc4b208c16aa96221cd015
msgid "MongoDB scopes a user-defined role to the database in which it is created and uniquely identifies the role by the pairing of its name and its database. MongoDB stores the roles in the ``admin`` database's :doc:`system.roles </reference/system-roles-collection>` collection. Do not access this collection directly but instead use the :ref:`role management commands <role-management-commands>` to view and edit custom roles."
msgstr ""

#: ../source/core/authorization.txt:110
# a636cc23a3944751ab0356aaba0973b0
msgid "Collection-Level Access Control"
msgstr ""

#: ../source/core/authorization.txt:112
# f24367d166124f328e6b81fb41247484
msgid "By creating a role with :ref:`privileges <privileges>` that are scoped to a specific collection in a particular database, administrators can implement collection-level access control."
msgstr ""

#: ../source/core/authorization.txt:116
# 2eaff2fc550a445891723a0c877a868e
msgid "See :doc:`/core/collection-level-access-control` for more information."
msgstr ""

#: ../source/core/authorization.txt:121
# c58146790bd649dea346e714b7f9a998
msgid "Users"
msgstr ""

#: ../source/core/authorization.txt:123
# 24dfed71d0e84add9eab40c8d66c4321
msgid "MongoDB stores user credentials in the protected :data:`admin.system.users`. Use the :ref:`user management methods <user-management-methods>` to view and edit user credentials."
msgstr ""

#: ../source/core/authorization.txt:129
# a017092fbb50483b82f2eae0cf7a423f
msgid "Role Assignment to Users"
msgstr ""

#: ../source/core/authorization.txt:131
# 4e72b2225fcb4923a5c58695c193be90
msgid "User administrators create the users that access the system's databases. MongoDB's :ref:`user management commands <user-management-commands>` let administrators create users and assign them roles."
msgstr ""

#: ../source/core/authorization.txt:135
# 2719a304f28a415c8047c434d4d0f7bc
msgid "MongoDB scopes a user to the database in which the user is created. MongoDB stores all user definitions in the ``admin`` database, no matter which database the user is scoped to. MongoDB stores users in the ``admin`` database's :doc:`system.users collection </reference/system-users-collection>`. Do not access this collection directly but instead use the :ref:`user management commands <user-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:143
# c155739c7e2b43dcab5c52ff940ff2ff
msgid "The first role assigned in a database should be either :authrole:`userAdmin` or :authrole:`userAdminAnyDatabase`. This user can then create all other users in the system. See :doc:`/tutorial/add-user-administrator`."
msgstr ""

#: ../source/core/authorization.txt:148
# e2954cdc8b924964958e2bdd62b02208
msgid "Protect the User and Role Collections"
msgstr ""

#: ../source/core/authorization.txt:150
# 5605cbeabc014443b9a7f71570c8dbee
msgid "MongoDB stores role and user data in the protected :data:`admin.system.roles` and :data:`admin.system.users` collections, which are only accessible using the :ref:`user management methods <user-management-methods>`."
msgstr ""

#: ../source/core/authorization.txt:155
# 4afd63dacab646e3abdfd1f493b3a940
msgid "If you disable access control, **do not** modify the :data:`admin.system.roles` and :data:`admin.system.users` collections using normal :method:`~db.collection.insert()` and :method:`~db.collection.update()` operations."
msgstr ""

#: ../source/core/authorization.txt:161
# 56526506c7884761af27c8ce78431cf7
msgid "Additional Information"
msgstr ""

#: ../source/core/authorization.txt:163
# 54ab8ca6387441b0a27bfbfabc4b1b13
msgid "See the reference section for documentation of all :doc:`built-in-roles </reference/built-in-roles>` and all available :doc:`privilege actions </reference/privilege-actions>`. Also consider the reference for the form of the :doc:`resource documents </reference/resource-document>`."
msgstr ""

#: ../source/core/authorization.txt:168
# 35ef6f20143440e8962551a0828933d5
msgid "To create users see the :doc:`/tutorial/add-user-administrator` and :doc:`/tutorial/add-user-to-database` tutorials."
msgstr ""

