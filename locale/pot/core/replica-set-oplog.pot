# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-oplog.txt:5
# 10759047ff684d54b0e4c17f3863e225
msgid "Replica Set Oplog"
msgstr ""

#: ../source/core/replica-set-oplog.txt:9
# 1def93dec65d4a22ae79ca5d02097dab
msgid "The :term:`oplog` (operations log) is a special :term:`capped collection` that keeps a rolling record of all operations that modify the data stored in your databases. MongoDB applies database operations on the :term:`primary` and then records the operations on the primary's oplog. The :term:`secondary` members then copy and apply these operations in an asynchronous process. All replica set members contain a copy of the oplog, in the :data:`local.oplog.rs` collection, which allows them to maintain the current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:18
# 47900cf676ba447dbdbd0603be55418c
msgid "To facilitate replication, all replica set members send heartbeats (pings) to all other members. Any member can import oplog entries from any other member."
msgstr ""

#: ../source/core/replica-set-oplog.txt:22
# 2b5853b51ad049d791002e24cc953f1e
msgid "Whether applied once or multiple times to the target dataset, each operation in the oplog produces the same results, i.e. each operation in the oplog is :term:`idempotent`. For proper replication operations, entries in the oplog must be idempotent:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:27
# aa7ccd31aad74559b00dc238b7df7795
msgid "initial sync"
msgstr ""

#: ../source/core/replica-set-oplog.txt:28
# 06d60655547b40d39f67bc34b09b636f
msgid "post-rollback catch-up"
msgstr ""

#: ../source/core/replica-set-oplog.txt:29
# ec93c4b2c9e64b9fb48593e843ebf738
msgid "sharding chunk migrations"
msgstr ""

#: ../source/core/replica-set-oplog.txt:34
# a25321f1f9e04e618a9dea45461b465a
msgid "Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:36
# 8f6acb93c1d24bf2b6a3e92dde9f263a
msgid "When you start a replica set member for the first time, MongoDB creates an oplog of a default size. The size depends on the architectural details of your operating system."
msgstr ""

#: ../source/core/replica-set-oplog.txt:40
# d6a250a88dd84a42b5d7311e161d5195
msgid "In most cases, the default oplog size is sufficient. For example, if an oplog is 5% of free disk space and fills up in 24 hours of operations, then secondaries can stop copying entries from the oplog for up to 24 hours without becoming too stale to continue replicating. However, most replica sets have much lower operation volumes, and their oplogs can hold much higher numbers of operations."
msgstr ""

#: ../source/core/replica-set-oplog.txt:47
# a5fe80761a264f2bb6aeb22d2145b3e5
msgid "Before :program:`mongod` creates an oplog, you can specify its size with the :setting:`~replication.oplogSizeMB` option. However, after you have started a replica set member for the first time, you can only change the size of the oplog using the :doc:`/tutorial/change-oplog-size` procedure."
msgstr ""

#: ../source/core/replica-set-oplog.txt:57
# 1651f76eb662408986dde1e9dd40e26f
msgid "By default, the size of the oplog is as follows:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:59
# 7f6a24858ec84bc4b030d572c9548155
msgid "For 64-bit Linux, Solaris, FreeBSD, and Windows systems, MongoDB allocates 5% of the available free disk space, but will always allocate at least 1 gigabyte and never more than 50 gigabytes."
msgstr ""

#: ../source/core/replica-set-oplog.txt:63
# 54da81912cb8491fb4d33515add09915
msgid "For 64-bit OS X systems, MongoDB allocates 183 megabytes of space to the oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:66
# 9e315a88781b4acc9ea80bddacd660bc
msgid "For 32-bit systems, MongoDB allocates about 48 megabytes of space to the oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:70
# 576ffd46ef3847268e3ca0a2c7997637
msgid "Workloads that Might Require a Larger Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:72
# 283e0ae72fcc417d865bcc41cb9432db
msgid "If you can predict your replica set's workload to resemble one of the following patterns, then you might want to create an oplog that is larger than the default. Conversely, if your application predominantly performs reads with a minimal amount of write operations, a smaller oplog may be sufficient."
msgstr ""

#: ../source/core/replica-set-oplog.txt:78
# 91732d5a29b84ea28f357a2d2a6960ff
msgid "The following workloads might require a larger oplog size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:81
# bc49c5b1dd9b4fb0b0ce657945ea178f
msgid "Updates to Multiple Documents at Once"
msgstr ""

#: ../source/core/replica-set-oplog.txt:83
# 91125b41254348b6aa0aa6ad938d8a1a
msgid "The oplog must translate multi-updates into individual operations in order to maintain :term:`idempotency <idempotent>`. This can use a great deal of oplog space without a corresponding increase in data size or disk use."
msgstr ""

#: ../source/core/replica-set-oplog.txt:89
# 6cfebc61a84f4e7db5c158d486fdf867
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr ""

#: ../source/core/replica-set-oplog.txt:91
# 43379097011047a2911bd60a76aa15e1
msgid "If you delete roughly the same amount of data as you insert, the database will not grow significantly in disk use, but the size of the operation log can be quite large."
msgstr ""

#: ../source/core/replica-set-oplog.txt:96
# 2a6a77e0e5dd460fa9ddf4f8fe29e74c
msgid "Significant Number of In-Place Updates"
msgstr ""

#: ../source/core/replica-set-oplog.txt:98
# 68a2db6e72524e76b644f153ea1bec4e
msgid "If a significant portion of the workload is in-place updates, the database records a large number of operations but does not change the quantity of data on disk."
msgstr ""

#: ../source/core/replica-set-oplog.txt:103
# a2118b88ded0490ea40194c449d96e5e
msgid "Oplog Status"
msgstr ""

#: ../source/core/replica-set-oplog.txt:105
# a49a4da292fb4a728e7a47693e05a9d9
msgid "To view oplog status, including the size and the time range of operations, issue the :method:`rs.printReplicationInfo()` method. For more information on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:110
# d4d735e4852c4dd5a7a62a48ecdd7881
msgid "Under various exceptional situations, updates to a :term:`secondary's <secondary>` oplog might lag behind the desired performance time.  Use :method:`db.getReplicationInfo()` from a secondary member and the :doc:`replication status </reference/method/db.getReplicationInfo>` output to assess the current state of replication and determine if there is any unintended replication delay."
msgstr ""

#: ../source/core/replica-set-oplog.txt:117
# fc8c756971674818b868f162a6dd6c45
msgid "See :ref:`Replication Lag <replica-set-replication-lag>` for more information."
msgstr ""

