# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/distributed-queries.txt:6
# 6e1df601826a4932ba6ec635d38b7d38
msgid "Distributed Queries"
msgstr ""

#: ../source/core/distributed-queries.txt:14
# 44254cfea3124e97b3bd757e74f2a4f0
msgid "Read Operations to Sharded Clusters"
msgstr ""

#: ../source/core/distributed-queries.txt:16
# e0fcc3ba1b78492d966fa9c0d2090c69
msgid ":term:`Sharded clusters <sharded cluster>` allow you to partition a data set among a cluster of :program:`mongod` instances in a way that is nearly transparent to the application. For an overview of sharded clusters, see the :doc:`/sharding` section of this manual."
msgstr ""

#: ../source/core/distributed-queries.txt:21
# 867f14ef07e143529dda1fed7bbb5d09
msgid "For a sharded cluster, applications issue operations to one of the :program:`mongos` instances associated with the cluster."
msgstr ""

#: ../source/core/distributed-queries.txt:26
# 62ad2f585f2a41318e9c4c5fc7fd98f0
msgid "Read operations on sharded clusters are most efficient when directed to a specific shard. Queries to sharded collections should include the collection's :ref:`shard key <sharding-shard-key>`. When a query includes a shard key, the :program:`mongos` can use cluster metadata from the :ref:`config database <sharding-config-server>` to route the queries to shards."
msgstr ""

#: ../source/core/distributed-queries.txt:35
# 135c4bb6f005438399d3410ffcc7376b
msgid "If a query does not include the shard key, the :program:`mongos` must direct the query to *all* shards in the cluster. These *scatter gather* queries can be inefficient. On larger clusters, scatter gather queries are unfeasible for routine operations."
msgstr ""

#: ../source/core/distributed-queries.txt:42
# db47642a766d43b79ba09954c85b3bbd
msgid "For more information on read operations in sharded clusters, see the :doc:`/core/sharded-cluster-query-router` and :ref:`sharding-shard-key` sections."
msgstr ""

#: ../source/core/distributed-queries.txt:51
# fe00959628a54ca4bb5be92804d603e8
msgid "Read Operations to Replica Sets"
msgstr ""

#: ../source/core/distributed-queries.txt:53
# 20d77f5455a24e00a0790eee1ebcab9e
msgid ":term:`Replica sets <replica set>` use :term:`read preferences <read preference>` to determine where and how to route read operations to members of the replica set. By default, MongoDB always reads data from a replica set's :term:`primary`. You can modify that behavior by changing the :ref:`read preference mode <replica-set-read-preference-modes>`."
msgstr ""

#: ../source/core/distributed-queries.txt:60
# c41fe8240f3a42eea0a9b120e2d91cec
msgid "You can configure the :ref:`read preference mode <replica-set-read-preference-modes>` on a per-connection or per-operation basis to allow reads from :term:`secondaries <secondary>` to:"
msgstr ""

#: ../source/core/distributed-queries.txt:65
# e3518d96bc6743f7a476242bc5637258
msgid "reduce latency in multi-data-center deployments,"
msgstr ""

#: ../source/core/distributed-queries.txt:67
# 0e9bdaafb2574fd788dc430b7d571cf2
msgid "improve read throughput by distributing high read-volumes (relative to write volume),"
msgstr ""

#: ../source/core/distributed-queries.txt:70
# e05e4b2538ce42dcbb7ac6ca327f084c
msgid "for backup operations, and/or"
msgstr ""

#: ../source/core/distributed-queries.txt:72
# f1b71e7834b14c47b5fafb54f7be090c
msgid "to allow reads during :ref:`failover <replica-set-failover>` situations."
msgstr ""

#: ../source/core/distributed-queries.txt:77
# fead454b124d4a9a810d9b6802d99074
msgid "Read operations from secondary members of replica sets are not guaranteed to reflect the current state of the primary, and the state of secondaries will trail the primary by some amount of time. Often, applications don't rely on this kind of strict consistency, but application developers should always consider the needs of their application before setting read preference."
msgstr ""

#: ../source/core/distributed-queries.txt:84
# 178d7490b5db46c996b21a8050821dd2
msgid "For more information on read preference or on the read preference modes, see :doc:`/core/read-preference` and :ref:`replica-set-read-preference-modes`."
msgstr ""

#: ../source/core/distributed-queries.txt:1
#: ../source/core/distributed-queries.txt:46
# bccce43f180b42629b593e11cfcf315e
# 1a44266eab3e4bbe8008057872777ce7
msgid "read operation"
msgstr ""

#: ../source/core/distributed-queries.txt:1
# bccce43f180b42629b593e11cfcf315e
msgid "architecture"
msgstr ""

#: ../source/core/distributed-queries.txt:46
#: ../source/core/distributed-queries.txt:47
# 1a44266eab3e4bbe8008057872777ce7
# 7c83431530544a65b66ef0537e25408c
msgid "connection pooling"
msgstr ""

#: ../source/core/distributed-queries.txt:47
# 7c83431530544a65b66ef0537e25408c
msgid "read operations"
msgstr ""

