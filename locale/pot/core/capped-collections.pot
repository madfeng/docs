# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/capped-collections.txt:3
# c513cf3c07d0462c8817f3185acc0998
msgid "Capped Collections"
msgstr ""

#: ../source/core/capped-collections.txt:7
# c8594b57292547438b50073611247532
msgid ":term:`Capped collections <capped collection>` are fixed-size collections that support high-throughput operations that insert, retrieve, and delete documents based on insertion order. Capped collections work in a way similar to circular buffers: once a collection fills its allocated space, it makes room for new documents by overwriting the oldest documents in the collection."
msgstr ""

#: ../source/core/capped-collections.txt:14
# 66df43399da14317a7a542c3ad1a233a
msgid "See :method:`~db.createCollection()` or :dbcommand:`create` for more information on creating capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:17
# 2f36364e29cc4b4c8cb92e4746ee3b0c
msgid "Capped collections have the following behaviors:"
msgstr ""

#: ../source/core/capped-collections.txt:19
# 2a0eecad010d4c7b8ecb2084a9079aa2
msgid "Capped collections guarantee preservation of the insertion order. As a result, queries do not need an index to return documents in insertion order. Without this indexing overhead, they can support higher insertion throughput."
msgstr ""

#: ../source/core/capped-collections.txt:24
# e0640ab8e07a4f23a901e25032f3fa70
msgid "Capped collections guarantee that insertion order is identical to the order on disk (:term:`natural order`) and do so by prohibiting updates that increase document size. Capped collections only allow updates that fit the original document size, which ensures a document does not change its location on disk."
msgstr ""

#: ../source/core/capped-collections.txt:30
# 9ac19481e2a14aa6b859762f38769cf3
msgid "Capped collections automatically remove the oldest documents in the collection without requiring scripts or explicit remove operations."
msgstr ""

#: ../source/core/capped-collections.txt:33
# e1c3e8b5ed8a46f89e5897cbafc4416d
msgid "For example, the :term:`oplog.rs <oplog>` collection that stores a log of the operations in a :term:`replica set` uses a capped collection. Consider the following potential use cases for capped collections:"
msgstr ""

#: ../source/core/capped-collections.txt:38
# 94708e4dbf5742ca8c561955d28bc83d
msgid "Store log information generated by high-volume systems. Inserting documents in a capped collection without an index is close to the speed of writing log information directly to a file system. Furthermore, the built-in *first-in-first-out* property maintains the order of events, while managing storage use."
msgstr ""

#: ../source/core/capped-collections.txt:44
# bf85dfcc225344ca8ea3cd01a97a1b69
msgid "Cache small amounts of data in a capped collections. Since caches are read rather than write heavy, you would either need to ensure that this collection *always* remains in the working set (i.e. in RAM) *or* accept some write penalty for the required index or indexes."
msgstr ""

#: ../source/core/capped-collections.txt:53
# 51664cc408de4c02afc1fdde9408acf1
msgid "Recommendations and Restrictions"
msgstr ""

#: ../source/core/capped-collections.txt:55
# e49d9915a0654fa7b0846d31e585fb09
msgid "You can only make in-place updates of documents. If the update operation causes the document to grow beyond their original size, the update operation will fail."
msgstr ""

#: ../source/core/capped-collections.txt:59
# 5cf5b6e6821845f4a9ee8d87836cc4d8
msgid "If you plan to update documents in a capped collection, create an index so that these update operations do not require a table scan."
msgstr ""

#: ../source/core/capped-collections.txt:62
# cb15d0ea0b604ac1ae2d763aba435e20
msgid "If you update a document in a capped collection to a size smaller than its original size, and then a secondary resyncs from the primary, the secondary will replicate and allocate space based on the current smaller document size. If the primary then receives an update which increases the document back to its original size, the primary will accept the update but the secondary will fail with a ``failing update: objects in a capped ns cannot grow`` error message."
msgstr ""

#: ../source/core/capped-collections.txt:70
# 7afbe8c5bd704538beaf2c3de3de55fd
msgid "To prevent this error, create your secondary from a snapshot of one of the other up-to-date members of the replica set. Follow :doc:`our tutorial on filesystem snapshots </tutorial/backup-with-filesystem-snapshots>` to seed your new secondary."
msgstr ""

#: ../source/core/capped-collections.txt:75
# 0edc739a61b0404fa53ec61c14ff9d98
msgid "Seeding the secondary with a filesystem snapshot is the only way to guarantee the primary and secondary binary files are compatible. MMS Backup snapshots are insufficient in this situation since you need more than the content of the secondary to match the primary."
msgstr ""

#: ../source/core/capped-collections.txt:80
# 8e72d1ceb2c84246bbc18ac6bb175424
msgid "You cannot delete documents from a capped collection. To remove all records from a capped collection, use the 'emptycapped' command. To remove the collection entirely, use the :method:`~db.collection.drop()` method."
msgstr ""

#: ../source/core/capped-collections.txt:85
# 81be01ab5c6b4b51b3e0897527a2d5bd
msgid "You cannot shard a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:87
# 4b23ad3253c041938320f761440a8d43
msgid "Capped collections created after 2.2 have an ``_id`` field and an index on the ``_id`` field by default. Capped collections created before 2.2 do not have an index on the ``_id`` field by default. If you are using capped collections with replication prior to 2.2, you should explicitly create an index on the ``_id`` field."
msgstr ""

#: ../source/core/capped-collections.txt:95
# 6981df4274c64db09bb7646b67bb269c
msgid "If you have a capped collection in a :term:`replica set` outside of the ``local`` database, before 2.2, you should create a unique index on ``_id``. Ensure uniqueness using the ``unique: true`` option to the :method:`~db.collection.ensureIndex()` method or by using an :term:`ObjectId` for the ``_id`` field. Alternately, you can use the ``autoIndexId`` option to :dbcommand:`create` when creating the capped collection, as in the :ref:`capped-collections-options` procedure."
msgstr ""

#: ../source/core/capped-collections.txt:104
# b6a1b16cda3c4dadb2496390449e73c9
msgid "Use natural ordering to retrieve the most recently inserted elements from the collection efficiently. This is (somewhat) analogous to tail on a log file."
msgstr ""

#: ../source/core/capped-collections.txt:108
# 5fd65cb6e69a43b2bd86a3c963d92d1f
msgid "The aggregation pipeline operator :pipeline:`$out` cannot write results to a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:112
# 46b86077b63440d8aabd018b19bd02a6
msgid "Procedures"
msgstr ""

#: ../source/core/capped-collections.txt:115
# 2950fadf1c204bcaa32c7337430f991e
msgid "Create a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:117
# a854fef9ad6b4cc0a4336f36e82a7f91
msgid "You must create capped collections explicitly using the :method:`~db.createCollection()` method, which is a helper in the :program:`mongo` shell for the :dbcommand:`create` command. When creating a capped collection you must specify the maximum size of the collection in bytes, which MongoDB will pre-allocate for the collection. The size of the capped collection includes a small amount of space for internal overhead."
msgstr ""

#: ../source/core/capped-collections.txt:129
# fd5dc62ca00e4da580092124838909cd
msgid "Additionally, you may also specify a maximum number of documents for the collection using the ``max`` field as in the following document:"
msgstr ""

#: ../source/core/capped-collections.txt:136
# fb3a9734951241f4bac78a117854b84b
msgid "The ``size`` argument is *always* required, even when you specify ``max`` number of documents. MongoDB will remove older documents if a collection reaches the maximum size limit before it reaches the maximum document count."
msgstr ""

#: ../source/core/capped-collections.txt:0
# e9861ebd2e2d4e6499f0aa114525855a
msgid "See"
msgstr ""

#: ../source/core/capped-collections.txt:146
# ef99987667684057850e56ca05288f13
msgid "Query a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:148
# 4b0eca22d3cb47ce9110177b28db27c1
msgid "If you perform a :method:`~db.collection.find()` on a capped collection with no ordering specified, MongoDB guarantees that the ordering of results is the same as the insertion order."
msgstr ""

#: ../source/core/capped-collections.txt:152
# a2bd4e55c5f441009dc3cd8ae12aecc5
msgid "To retrieve documents in reverse insertion order, issue :method:`~db.collection.find()` along with the :method:`~cursor.sort()` method with the :operator:`$natural` parameter set to ``-1``, as shown in the following example:"
msgstr ""

#: ../source/core/capped-collections.txt:162
# cf6fa3260a634144aa731dd4c8f67137
msgid "Check if a Collection is Capped"
msgstr ""

#: ../source/core/capped-collections.txt:164
# 75f4427d7ef349d294038d9046927983
msgid "Use the :method:`~db.collection.isCapped()` method to determine if a collection is capped, as follows:"
msgstr ""

#: ../source/core/capped-collections.txt:172
# 33c4a1414c4e40d09045fc00bbaa34fb
msgid "Convert a Collection to Capped"
msgstr ""

#: ../source/core/capped-collections.txt:174
# 79f05d8dddc24e82a3811c8eb4ca7ea5
msgid "You can convert a non-capped collection to a capped collection with the :dbcommand:`convertToCapped` command:"
msgstr ""

#: ../source/core/capped-collections.txt:181
# cff66a030ff140f2841d3b5fa84fe172
msgid "The ``size`` parameter specifies the size of the capped collection in bytes."
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# 0b8a6dad175b44a481629fafd003e116
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/core/capped-collections.txt:186
# dc97179a7c524b338996309986cfa0c0
msgid "Before 2.2, capped collections did not have an index on ``_id`` unless you specified ``autoIndexId`` to the :dbcommand:`create`, after 2.2 this became the default."
msgstr ""

#: ../source/core/capped-collections.txt:192
# 0b559d1feafa43cea58eb9b2934457a9
msgid "Automatically Remove Data After a Specified Period of Time"
msgstr ""

#: ../source/core/capped-collections.txt:194
# 094ec7ce94ca4ce4ada4759ebf09400f
msgid "For additional flexibility when expiring data, consider MongoDB's :term:`TTL` indexes, as described in :doc:`/tutorial/expire-data`. These indexes allow you to expire and remove data from normal collections using a special type, based on the value of a date-typed field and a TTL value for the index."
msgstr ""

#: ../source/core/capped-collections.txt:200
# 7605cc0e4b4043faaca567d429f26602
msgid ":doc:`TTL Collections </tutorial/expire-data>` are not compatible with capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:204
# d9a40c351c914f029a158d79569d7858
msgid "Tailable Cursor"
msgstr ""

#: ../source/core/capped-collections.txt:206
# 06843390b5144127822b1d9a9a57d4de
msgid "You can use a :term:`tailable cursor` with capped collections. Similar to the Unix ``tail -f`` command, the tailable cursor \"tails\" the end of a capped collection. As new documents are inserted into the capped collection, you can use the tailable cursor to continue retrieving documents."
msgstr ""

#: ../source/core/capped-collections.txt:212
# 5209eb6626fd42ddbae23352a4c92289
msgid "See :doc:`/tutorial/create-tailable-cursor` for information on creating a tailable cursor."
msgstr ""

