# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authentication.txt:5
# 7a199d38a63c4269831febc8b2c53368
msgid "Authentication"
msgstr ""

#: ../source/core/authentication.txt:9
# 886da2a332344501bdd81abfcfefe445
msgid "Authentication is the process of verifying the identity of a client. When access control, i.e. :doc:`authorization </core/authorization>`, is enabled, MongoDB requires all clients to authenticate themselves first in order to determine the access for the client."
msgstr ""

#: ../source/core/authentication.txt:14
# 0975de9381b94cc2bae752de3320faeb
msgid "Although authentication and :doc:`authorization </core/authorization>` are closely connected, authentication is distinct from authorization. Authentication verifies the identity of a user; authorization determines the verified user's access to resources and operations."
msgstr ""

#: ../source/core/authentication.txt:19
# 2b552522936f48d685368df85b72fe89
msgid "MongoDB supports a number of :ref:`authentication mechanisms <security-authentication-mechanisms>` that clients can use to verify their identity. These mechanisms allow MongoDB to integrate into your existing authentication system. See :ref:`security-authentication-mechanisms` for details."
msgstr ""

#: ../source/core/authentication.txt:25
# ce588797cbfe449e81c6e26066f052de
msgid "In addition to verifying the identity of a client, MongoDB can require members of replica sets and sharded clusters to :ref:`authenticate their membership <inter-process-auth>` to their respective replica set or sharded cluster. See :ref:`inter-process-auth` for more information."
msgstr ""

#: ../source/core/authentication.txt:32
# 749e595eb6b7475a9566155a1e1a807f
msgid "Client Users"
msgstr ""

#: ../source/core/authentication.txt:34
# 516c30a9db7448b58a26010495df0d07
msgid "To authenticate a client in MongoDB, you must add a corresponding user to MongoDB. When adding a user, you create the user in a specific database. Together, the user's name and database serve as a unique identifier for that user. That is, if two users have the same name but are created in different databases, they are two separate users. To authenticate, the client must authenticate the user against the user's database. For instance, if using the :program:`mongo` shell as a client, you can specify the database for the user with the :ref:`--authenticationDatabase <mongo-shell-authentication-options>` option."
msgstr ""

#: ../source/core/authentication.txt:45
# 89f47d9d3b194133ba78b027ab5e743c
msgid "To add and manage user information, MongoDB provides the :method:`db.createUser()` method as well as other :ref:`user management methods <user-management-methods>`. For an example of adding a user to MongoDB, see :doc:`/tutorial/add-user-to-database`."
msgstr ""

#: ../source/core/authentication.txt:50
# 913c2b6fcf1c4247aa6dfb2049abcefd
msgid "MongoDB stores all user information, including :data:`name <admin.system.users.user>`, :data:`password <admin.system.users.credentials>`, and the :data:`user's database <admin.system.users.db>`, in the :doc:`system.users </reference/system-users-collection>` collection in the ``admin`` database."
msgstr ""

#: ../source/core/authentication.txt:60
# 229cca0d0b324fa295e8697900bc95e7
msgid "Authentication Mechanisms"
msgstr ""

#: ../source/core/authentication.txt:62
# 5d5d66a1c1da4daabd0aca344b6b0266
msgid "MongoDB supports multiple authentication mechanisms. MongoDB's default authentication method is a :ref:`challenge and response mechanism (MONGODB-CR) <authentication-mongodb-cr>`. MongoDB also supports :ref:`x509 certificate authentication <security-auth-x509>`, :ref:`LDAP proxy authentication <security-auth-ldap>`, and :ref:`Kerberos authentication <security-auth-kerberos>`."
msgstr ""

#: ../source/core/authentication.txt:69
# 83993ee0180e49d9bd2e378dd3449c8c
msgid "This section introduces the mechanisms available in MongoDB."
msgstr ""

#: ../source/core/authentication.txt:71
# 1306c8f43a9c43b78e88383495d50b87
msgid "To specify the authentication mechanism to use, see :parameter:`authenticationMechanisms`."
msgstr ""

#: ../source/core/authentication.txt:77
# f43b45671c3a4dd4a8609505e897eb48
msgid "``MONGODB-CR`` Authentication"
msgstr ""

#: ../source/core/authentication.txt:79
# aff3846134dd44aea70b4f2188580173
msgid "``MONGODB-CR`` is a challenge-response mechanism that authenticates users through passwords. ``MONGODB-CR`` is the default mechanism."
msgstr ""

#: ../source/core/authentication.txt:82
# 359d4e0edfe04afcaca2240b65f2dc54
msgid "When you use ``MONGODB-CR`` authentication, ``MONGODB-CR`` verifies the user against the user's :data:`name <admin.system.users.user>`, :data:`password <admin.system.users.credentials>` and :data:`database <admin.system.users.db>`. The user's database is the database where the user was created, and the user's database and the user's name together serves to identify the user."
msgstr ""

#: ../source/core/authentication.txt:89
# 8e84476a8707411a8b0b6dc2d8682a7c
msgid "Using :setting:`key files <security.keyFile>`, you can also use ``MONGODB-CR`` authentication for the :ref:`internal member authentication <inter-process-auth>` of replica set members and sharded cluster members. The contents of the key files serve as the shared password for the members. You must store the key file on each :program:`mongod` or :program:`mongos` instance for that replica set or sharded cluster. The content of the key file is arbitrary but must be the same on all :program:`mongod` and :program:`mongos` instances that connect to each other."
msgstr ""

#: ../source/core/authentication.txt:99
# 71e1895f79b24f668e482cd4966efb53
msgid "See :doc:`/tutorial/generate-key-file` for instructions on generating a key file and turning on key file authentication for members."
msgstr ""

#: ../source/core/authentication.txt:105
# ed421c8a88c44d70ab45e81191ed48f8
msgid "x.509 Certificate Authentication"
msgstr ""

#: ../source/core/authentication.txt:109
# 00e91f8738984f00984c5614a53a9a4e
msgid "MongoDB supports x.509 certificate authentication for use with a secure :doc:`SSL connection </tutorial/configure-ssl>`."
msgstr ""

#: ../source/core/authentication.txt:112
# bb8d25dc578f47518a8b465f4252293c
msgid "To authenticate to servers, clients can use x.509 certificates instead of usernames and passwords. See :ref:`x509-client-authentication` for more information."
msgstr ""

#: ../source/core/authentication.txt:116
# fe9eae4ff9a64769b0b562feeddcfad9
msgid "For membership authentication, members of sharded clusters and replica sets can use x.509 certificates instead of key files. See :ref:`x509-internal-authentication` for more information."
msgstr ""

#: ../source/core/authentication.txt:123
# d6010899a95a4040aa878b6d4644f9c2
msgid "Kerberos Authentication"
msgstr ""

#: ../source/core/authentication.txt:125
# 8fdc2d6969544fd6982224be178ec86b
msgid "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_ supports authentication using a Kerberos service. Kerberos is an industry standard authentication protocol for large client/server systems."
msgstr ""

#: ../source/core/authentication.txt:129
# 5310e1dc176443428d4b457ad16e89a2
msgid "To use MongoDB with Kerberos, you must have a properly configured Kerberos deployment, configured :ref:`Kerberos service principals <kerberos-service-principal>` for MongoDB, and added :ref:`Kerberos user principal <kerberos-user-principal>` to MongoDB."
msgstr ""

#: ../source/core/authentication.txt:134
# ce7b302c8592496d9b1d8cfd4ffdd604
msgid "See :doc:`/core/kerberos` for more information on Kerberos and MongoDB. To configure MongoDB to use Kerberos authentication, see :doc:`/tutorial/control-access-to-mongodb-with-kerberos-authentication` and :doc:`/tutorial/control-access-to-mongodb-windows-with-kerberos-authentication`."
msgstr ""

#: ../source/core/authentication.txt:143
# f34da325695c4a248aeb7fc5360f770c
msgid "LDAP Proxy Authority Authentication"
msgstr ""

#: ../source/core/authentication.txt:145
# be986dd0686646d39802e40cff63c24e
msgid "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise>`_ supports proxy authentication through a Lightweight Directory Access Protocol (LDAP) service. See :doc:`/tutorial/configure-ldap-sasl-openldap` and :doc:`/tutorial/configure-ldap-sasl-activedirectory`."
msgstr ""

#: ../source/includes/admonition-mongodb-enterprise-windows-ldap.rst:1
# 0bb5b2e8d11b45e38145349ce3af477b
msgid "MongoDB Enterprise for Windows does **not** include LDAP support for authentication. However, MongoDB Enterprise for Linux supports using LDAP authentication with an ActiveDirectory server."
msgstr ""

#: ../source/core/authentication.txt:153
# 06a4b3286bb64a18a9839be2e8dc2254
msgid "MongoDB does **not** support LDAP authentication in mixed sharded cluster deployments that contain both version 2.4 and version 2.6 shards."
msgstr ""

#: ../source/core/authentication.txt:157
# f30e210ae44b4c7d9925a58f9c430d60
msgid "Authentication Behavior"
msgstr ""

#: ../source/core/authentication.txt:162
# 25b680a0d10a422e9ec1d0c80df1e036
msgid "Client Authentication"
msgstr ""

#: ../source/core/authentication.txt:164
# 938788f169df4fa8886968fd9bea81ad
msgid "Clients can authenticate using the :ref:`challenge and response <authentication-mongodb-cr>`, :ref:`x.509 <security-auth-x509>`, :ref:`LDAP Proxy <security-auth-ldap>` and :ref:`Kerberos <security-auth-kerberos>` mechanisms."
msgstr ""

#: ../source/core/authentication.txt:169
# 88b430ae972d4700b127425ac4e75adc
msgid "Each client connection should authenticate as exactly one user. If a client authenticates to a database as one user and later authenticates to the same database as a different user, the second authentication invalidates the first. While clients can authenticate as multiple users if the users are defined on different databases, we recommend authenticating as one user at a time, providing the user with appropriate privileges on the databases required by the user."
msgstr ""

#: ../source/core/authentication.txt:177
# 37571fe7d88544f98eb5ee4582d0ac4a
msgid "See :doc:`/tutorial/authenticate-as-client` for more information."
msgstr ""

#: ../source/core/authentication.txt:182
# 38c215bf58a84e12bbcdbcfa8d9d064f
msgid "Authentication Between MongoDB Instances"
msgstr ""

#: ../source/core/authentication.txt:184
# ae3ec978f23042c3b23d5e44ac1dc5aa
msgid "You can authenticate members of :term:`replica sets <replica set>` and :term:`sharded clusters <sharded cluster>`. To authenticate members of a single MongoDB deployment to each other, MongoDB can use the :setting:`~security.keyFile` and :ref:`x.509 <security-auth-x509>` mechanisms. Using :setting:`~security.keyFile` authentication for members also enables authorization."
msgstr ""

#: ../source/core/authentication.txt:198
# bce4f1dd8d5f4800acf6536bc84530d6
msgid "Always run replica sets and sharded clusters in a trusted networking environment. Ensure that the network permits only trusted traffic to reach each :program:`mongod` and :program:`mongos` instance."
msgstr ""

#: ../source/core/authentication.txt:202
# 83310305f8144585aaaa2bc1289586e9
msgid "Use your environment's firewall and network routing to ensure that traffic *only* from clients and other members can reach your :program:`mongod` and :program:`mongos` instances. If needed, use virtual private networks (VPNs) to ensure secure connections over wide area networks (WANs)."
msgstr ""

#: ../source/core/authentication.txt:207
# 09dd65cda52a4e408de1b8b79ac5d7c0
msgid "Always ensure that:"
msgstr ""

#: ../source/core/authentication.txt:209
# 186d2e8424774d1f80596626af52689f
msgid "Your network configuration will allow every member of the replica set or sharded cluster to contact every other member."
msgstr ""

#: ../source/core/authentication.txt:212
# 34e02fb59a46482497e3824fd4d94a4b
msgid "If you use MongoDB's authentication system to limit access to your infrastructure, ensure that you configure a :setting:`~security.keyFile` on all members to permit authentication."
msgstr ""

#: ../source/core/authentication.txt:216
# 3cc0b98aaaef4d79a82ed19508a4366a
msgid "See :doc:`/tutorial/generate-key-file` for instructions on generating a key file and turning on key file authentication for members. For an example of using key files for sharded cluster authentication, see :doc:`/tutorial/enable-authentication-in-sharded-cluster`."
msgstr ""

#: ../source/core/authentication.txt:226
# e6da6f7b5bc746ffbe9d697f4a461a6b
msgid "Authentication on Sharded Clusters"
msgstr ""

#: ../source/core/authentication.txt:228
# a2e9209fb03c4dec884844757ea071a7
msgid "In sharded clusters, applications authenticate to directly to :program:`mongos` instances, using credentials stored in the ``admin`` database of the :term:`config servers <config server>`. The shards in the sharded cluster also have credentials, and clients can authenticate directly to the shards to perform maintenance directly on the shards. In general, applications and clients should connect to the sharded cluster through the :program:`mongos`."
msgstr ""

#: ../source/core/authentication.txt:237
# bf0284f19e4b40c491035b4a9603df46
msgid "Previously, the credentials for authenticating to a database on a cluster resided on the :ref:`primary shard <primary-shard>` for that database."
msgstr ""

#: ../source/core/authentication.txt:242
# 0208aa791f5c474f9be0eb5974b1e5ce
msgid "Some maintenance operations, such as :dbcommand:`cleanupOrphaned`, :dbcommand:`compact`, :method:`rs.reconfig()`, require direct connections to specific shards in a sharded cluster. To perform these operations with authentication enabled, you must connect directly to the shard and authenticate as a *shard local* administrative user. To create a *shard local* administrative user, connect directly to the shard and create the user. MongoDB stores *shard local* users in the ``admin`` database of the shard itself. These *shard local* users are completely independent from the users added to the sharded cluster via :program:`mongos`. *Shard local* users are local to the shard and are inaccessible by :program:`mongos`. Direct connections to a shard should only be for shard-specific maintenance and configuration."
msgstr ""

#: ../source/core/authentication.txt:258
# 195a23f64453424394e0d0e7438ddd32
msgid "Localhost Exception"
msgstr ""

#: ../source/core/authentication.txt:260
# 2569d99905564424b22876f959bb72a3
msgid "The localhost exception allows you to enable authorization before creating the first user in the system. When active, the localhost exception allows all connections from the localhost interface to have full access to that instance. The exception applies only when there are no users created in the MongoDB instance."
msgstr ""

#: ../source/core/authentication.txt:266
# 63c53a4267e34593b8710703ac7c7ec4
msgid "If you use the localhost exception when deploying a new MongoDB system, the first user you create must be in the ``admin`` database with privileges to create other users, such as a user with the :authrole:`userAdmin` or :authrole:`userAdminAnyDatabase` role. See :doc:`/tutorial/enable-authentication` and :doc:`/tutorial/add-user-administrator` for more information."
msgstr ""

#: ../source/core/authentication.txt:273
# 5c4cfe1db93540e0ab3d79e83d3f5239
msgid "In the case of a sharded cluster, the localhost exception can apply to the cluster as a whole or separately to each shard. The localhost exception can apply to the cluster as a whole if there are no user information stored on the config servers *and* clients access via :program:`mongos` instances."
msgstr ""

#: ../source/core/authentication.txt:279
# fa647412e4e4400ca06a710dc53556cf
msgid "The localhost exception can apply separately to each shard if there is no user information stored on the shard itself and clients connect to the shard directly."
msgstr ""

#: ../source/core/authentication.txt:283
# 25c456c2aafa482d8a5fa7246ef7508e
msgid "To prevent unauthorized access to a cluster's shards, you must either create an administrator on each shard or disable the localhost exception. To disable the localhost exception, use :setting:`setParameter` to set the :parameter:`enableLocalhostAuthBypass` parameter to ``0`` during startup."
msgstr ""

#: ../source/core/authentication.txt:221
# 748600a4b67e440cabccb46d795820ef
msgid "sharding"
msgstr ""

#: ../source/core/authentication.txt:221
# 748600a4b67e440cabccb46d795820ef
msgid "localhost"
msgstr ""

