# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/2dsphere.txt:3
# 14636f527d22474e969e095d9bc4372c
msgid "``2dsphere`` Indexes"
msgstr ""

#: ../source/core/2dsphere.txt:9
# 8c8fb28f3b414246b5da15cda5a78246
msgid "A ``2dsphere`` index supports queries that calculate geometries on an earth-like sphere. The index supports data stored as both :term:`GeoJSON` objects and as legacy coordinate pairs. The index supports legacy coordinate pairs by converting the data to the GeoJSON ``Point`` type. The default datum for an earth-like sphere in MongoDB 2.4 is :term:`WGS84`. Coordinate-axis order is **longitude, latitude**."
msgstr ""

#: ../source/core/2dsphere.txt:16
# f2962204ef704607b48aed51b0a3c2c9
msgid "The ``2dsphere`` index supports all MongoDB geospatial queries: queries for inclusion, intersection and proximity. See the :doc:`/reference/operator/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2dsphere.txt:21
# cabb6bcf41fb478a86f40234cdc1c871
msgid "To create a ``2dsphere`` index, use the :method:`db.collection.ensureIndex` method. A :ref:`compound <index-type-compound>` ``2dsphere`` index can reference multiple location and non-location fields within a collectionâ€™s documents. See :doc:`/tutorial/build-a-2dsphere-index` for more information."
msgstr ""

#: ../source/core/2dsphere.txt:30
# c541e90ded1d4e9eb00d59dbea1d4be6
msgid "``2dsphere`` Version 2"
msgstr ""

#: ../source/core/2dsphere.txt:34
# 0eb88a2dc4e4480680a27f640c76318c
msgid "MongoDB 2.6 introduces a version 2 of ``2dsphere`` indexes. Version 2 is the default version of ``2dsphere`` indexes created in MongoDB 2.6. To create a ``2dsphere`` index as a version 1, include the option ``{ \"2dsphereIndexVersion\": 1 }`` when creating the index."
msgstr ""

#: ../source/core/2dsphere.txt:40
# a5abe101cc5c4a478ea072c2cf26a2a3
msgid "Additional GeoJSON Objects"
msgstr ""

#: ../source/core/2dsphere.txt:44
# a4836d077b6745bfbf273b7eab4c8571
msgid "Version 2 adds support for additional GeoJSON object: :ref:`geojson-multipoint`, :ref:`geojson-multilinestring`, :ref:`geojson-multipolygon`, and :ref:`geojson-geometrycollection`."
msgstr ""

#: ../source/core/2dsphere.txt:50
# 94c28c4ae8a44624bf1dc1a14c9dbd3e
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2dsphere.txt:54
# f12d98293f01428c95c2ccb2eda03c3c
msgid "Version 2 ``2dsphere`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a ``2dsphere`` index field (or the field is ``null`` or an empty array), MongoDB does not add an entry for the document to the ``2dsphere`` index. For inserts, MongoDB inserts the document but does not add to the ``2dsphere`` index."
msgstr ""

#: ../source/core/2dsphere.txt:61
# 0c9b88d28dee43fba60d3e27906c259b
msgid "For a compound index that includes a ``2dsphere`` index key along with keys of other types, only the ``2dsphere`` index field determines whether the index references a document."
msgstr ""

#: ../source/core/2dsphere.txt:65
# b0a1555353cf4a3cafb98cf92b01bc5a
msgid "Earlier versions of MongoDB only support Version 1 ``2dsphere`` indexes. Version 1 ``2dsphere`` indexes are *not* sparse by default and will reject documents with ``null`` location fields."
msgstr ""

#: ../source/core/2dsphere.txt:70
# b3d51374f19a4b1584007921942125c7
msgid "Considerations"
msgstr ""

#: ../source/core/2dsphere.txt:73
# 94cb7f9ee2e14b339064411d57b26071
msgid "``geoNear`` and ``$geoNear`` Restrictions"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
# 3b1cef60baa74327bf8cf01c7331e7a3
msgid "The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage require that a collection have *at most* only one |first-geo-index| and/or only one |second-geo-index| whereas :ref:`geospatial query operators <geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
# 47aafc93c051415cbf7829f96f0278f6
msgid "The geospatial index restriction for the :dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage exists because neither the :dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage syntax includes the location field. As such, index selection among multiple ``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
# a03104eeb36a4de5a82c32ea721e87d9
msgid "No such restriction applies for :ref:`geospatial query operators <geospatial-query-selectors>` since these operators take a location field, eliminating the ambiguity."
msgstr ""

#: ../source/core/2dsphere.txt:80
# f0e6d870dbd6477ab70c209f3c54bbb6
msgid "Shard Key Restrictions"
msgstr ""

#: ../source/core/2dsphere.txt:82
# 4f8bd3d59d3141c791b2223bcaf42f97
msgid "You cannot use a ``2dsphere`` index as a shard key when sharding a collection. However, you can create and maintain a geospatial index on a sharded collection by using a different field as the shard key."
msgstr ""

#: ../source/core/2dsphere.txt:89
# 9d2a7f3526d64fdba213763ce6e96ce2
msgid "GeoJSON Objects"
msgstr ""

#: ../source/core/2dsphere.txt:91
# 019e2a32880c4bbc812c1ceea56bf2fa
msgid "MongoDB supports the following GeoJSON objects:"
msgstr ""

#: ../source/core/2dsphere.txt:93
# 0e018fc353e74afa8200dc147dc0ce0d
msgid ":ref:`geojson-point`"
msgstr ""

#: ../source/core/2dsphere.txt:95
# 49fe228023de403aa8a2545774f5f461
msgid ":ref:`geojson-linestring`"
msgstr ""

#: ../source/core/2dsphere.txt:97
# f4d71838333443548bc40b2e880f263c
msgid ":ref:`geojson-polygon`"
msgstr ""

#: ../source/core/2dsphere.txt:99
# 7f9a373f047d45b48099a75ee53387e2
msgid ":ref:`geojson-multipoint`"
msgstr ""

#: ../source/core/2dsphere.txt:101
# 5407c64a7a9f4787958fa84911e4ef6a
msgid ":ref:`geojson-multilinestring`"
msgstr ""

#: ../source/core/2dsphere.txt:103
# 98cbbc0cf0204a6ea5bbb921c5099fee
msgid ":ref:`geojson-multipolygon`"
msgstr ""

#: ../source/core/2dsphere.txt:105
# d0d31859b0a1400c80da039daae8d000
msgid ":ref:`geojson-geometrycollection`"
msgstr ""

#: ../source/core/2dsphere.txt:107
# 064f01224796405b8f881348ba011565
msgid "The :ref:`geojson-multipoint`, :ref:`geojson-multilinestring`, :ref:`geojson-multipolygon`, and :ref:`geojson-geometrycollection` require ``2dsphere`` index version 2."
msgstr ""

#: ../source/core/2dsphere.txt:111
# 9f141a438c704b0eaf621cead8c4d62e
msgid "In order to index GeoJSON data, you must store the data in a location field that you name. The location field contains a subdocument with a ``type`` field specifying the GeoJSON object type and a ``coordinates`` field specifying the object's coordinates. Always store coordinates in ``longitude, latitude`` order."
msgstr ""

#: ../source/core/2dsphere.txt:117
# c461121c1ffb406ba0a2bd61b7e2136e
msgid "Use the following syntax:"
msgstr ""

#: ../source/core/2dsphere.txt:126
# 24dcb5b4d9f84815a50c1b0be2563b4d
msgid "``Point``"
msgstr ""

#: ../source/core/2dsphere.txt:130
# d99e5f9d1fbd4e9185c566102f5a88d6
msgid "The following example stores a GeoJSON :term:`Point`:"
msgstr ""

#: ../source/core/2dsphere.txt:139
# c5c41a2e40134eb180bfe44114f12e23
msgid "``LineString``"
msgstr ""

#: ../source/core/2dsphere.txt:143
# c8651b21a51a4e83862d88096fd3e68d
msgid "The following example stores a GeoJSON :term:`LineString`:"
msgstr ""

#: ../source/core/2dsphere.txt:152
# 3d48156d5b9349f5a474ed056a4e5053
msgid "``Polygon``"
msgstr ""

#: ../source/core/2dsphere.txt:156
# 6daee8b3828745a08a28d69411276a1e
msgid ":term:`Polygons <Polygon>` consist of an array of GeoJSON ``LinearRing`` coordinate arrays. These ``LinearRings`` are closed ``LineStrings``. Closed ``LineStrings`` have at least four coordinate pairs and specify the same position as the first and last coordinates."
msgstr ""

#: ../source/core/2dsphere.txt:161
# 7c00959bcb0e4a38a6538753bfe8630f
msgid "The line that joins two points on a curved surface may or may not contain the same set of co-ordinates that joins those two points on a flat surface. The line that joins two points on a curved surface will be a geodesic. Carefully check points to avoid errors with shared edges, as well as overlaps and other types of intersections."
msgstr ""

#: ../source/core/2dsphere.txt:168
# 66bf7146871a4cfe8faaa0ad2bf1efad
msgid "Polygons with a Single Ring"
msgstr ""

#: ../source/core/2dsphere.txt:170
# 8ef649a6f85c4e2b99dc61df60b9649f
msgid "The following example stores a GeoJSON ``Polygon`` with an exterior ring and no interior rings (or holes). Note the first and last coordinate pair with the ``[ 0 , 0 ]`` coordinate:"
msgstr ""

#: ../source/core/2dsphere.txt:184
# bce380009da24f3093c932c15779497b
msgid "For Polygons with a single ring, the ring cannot self-intersect."
msgstr ""

#: ../source/core/2dsphere.txt:187
# df7472cfadda4ea5af400f0af356b0b9
msgid "Polygons with Multiple Rings"
msgstr ""

#: ../source/core/2dsphere.txt:189
# 90bb9af3945640bfade3c9deb28ed9da
msgid "For Polygons with multiple rings:"
msgstr ""

#: ../source/core/2dsphere.txt:191
# 9fd5ae0f36eb47ee811338f5fad759ca
msgid "The first described ring must be the exterior ring."
msgstr ""

#: ../source/core/2dsphere.txt:193
# 358c016e7206463f8d9fadd3107aea11
msgid "The exterior ring cannot self-intersect."
msgstr ""

#: ../source/core/2dsphere.txt:195
# 1da148a7a188474bb457c311a633b4dd
msgid "Any interior ring must be entirely contained by the outer ring."
msgstr ""

#: ../source/core/2dsphere.txt:197
# 090c92fbb0974e10b82b822364c661ea
msgid "Interior rings cannot intersect or overlap each other. Interior rings cannot share an edge."
msgstr ""

#: ../source/core/2dsphere.txt:200
# 338e2379c17c4d5980ad9620852dda43
msgid "The following document represents a polygon with an interior ring as GeoJSON:"
msgstr ""

#: ../source/core/2dsphere.txt:219
# 9ab3cd06182e4eaf96bb4bbeafc0b691
msgid "``MultiPoint``"
msgstr ""

#: ../source/core/2dsphere.txt:221
#: ../source/core/2dsphere.txt:245
#: ../source/core/2dsphere.txt:270
#: ../source/core/2dsphere.txt:293
# 29e7a7d9ea6045a4bf13fcc4907d0c6d
# 7f0cc081b5ed4e6db0c17514600b3ba0
# fe81c084983849aa84d003b262ad8cab
# 9641f02e5e1e41f38b4ae8d879122c24
msgid "Requires ``2dsphere`` index version 2."
msgstr ""

#: ../source/core/2dsphere.txt:224
# da5c06370757432e990d67d4230a6397
msgid "The following example stores coordinates of GeoJSON type `MultiPoint <http://geojson.org/geojson-spec.html#id5>`_:"
msgstr ""

#: ../source/core/2dsphere.txt:243
# c9f0cc966ab54fc19b78da673dede5d3
msgid "``MultiLineString``"
msgstr ""

#: ../source/core/2dsphere.txt:248
# 60b3da2cb8f04a87ab24f0ba7fefcad6
msgid "The following example stores coordinates of GeoJSON type `MultiLineString <http://geojson.org/geojson-spec.html#id6>`_:"
msgstr ""

#: ../source/core/2dsphere.txt:268
# f13ffd033939487f9da799096e63b74a
msgid "``MultiPolygon``"
msgstr ""

#: ../source/core/2dsphere.txt:273
# e83b07fc0ffd4723923a895b424dc536
msgid "The following example stores coordinates of GeoJSON type `MultiPolygon <http://geojson.org/geojson-spec.html#id7>`_:"
msgstr ""

#: ../source/core/2dsphere.txt:291
# 0731d196468d497ab0a08be41c95806e
msgid "``GeometryCollection``"
msgstr ""

#: ../source/core/2dsphere.txt:296
# b111d808ab9d445c980e606daee574e9
msgid "The following example stores coordinates of GeoJSON type `GeometryCollection <http://geojson.org/geojson-spec.html#geometrycollection>`_:"
msgstr ""

