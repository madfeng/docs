# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/query-optimization.txt:5
# e62edc19fd484edaa0a3457c443a24d2
msgid "Query Optimization"
msgstr ""

#: ../source/core/query-optimization.txt:9
# 92b886d321664bc992bc774f9660065a
msgid "Indexes improve the efficiency of read operations by reducing the amount of data that query operations need to process. This simplifies the work associated with fulfilling queries within MongoDB."
msgstr ""

#: ../source/core/query-optimization.txt:14
# d38ac3e36f3346d0a77759ab82f99ac1
msgid "Create an Index to Support Read Operations"
msgstr ""

#: ../source/core/query-optimization.txt:16
# a924863904e440ea956db3fa51c32842
msgid "If your application queries a collection on a particular field or fields, then an index on the queried field or fields can prevent the query from scanning the whole collection to find and return the query results. For more information about indexes, see the :doc:`complete documentation of indexes in MongoDB</core/indexes>`."
msgstr ""

#: ../source/core/query-optimization.txt:0
#: ../source/core/query-optimization.txt:0
# 46e55ea153e04a2890295dcae57cb84e
# 4519a954a4b0427f903c6ffd04856969
msgid "Example"
msgstr ""

#: ../source/core/query-optimization.txt:30
# a63ab9888b5946e9a1e2ce7250e61627
msgid "To improve the performance of this query, add an ascending, or a descending, index to the ``inventory`` collection on the ``type`` field. [#ensureIndexOrder]_ In the :program:`mongo` shell, you can create indexes using the :method:`db.collection.ensureIndex()` method:"
msgstr ""

#: ../source/core/query-optimization.txt:40
# 740b8f340cda46cfad85f4a637c597d0
msgid "This index can prevent the above query on ``type`` from scanning the whole collection to return the results."
msgstr ""

#: ../source/core/query-optimization.txt:43
# a06eb94c170c46b6a0073005caf033ed
msgid "To analyze the performance of the query with an index, see :doc:`/tutorial/analyze-query-plan`."
msgstr ""

#: ../source/core/query-optimization.txt:46
# bb1861a7f2344f23aead3d3d22ea6751
msgid "In addition to optimizing read operations, indexes can support sort operations and allow for a more efficient storage utilization. See :method:`db.collection.ensureIndex()` and :doc:`/administration/indexes` for more information about index creation."
msgstr ""

#: ../source/core/query-optimization.txt:53
# 023bc7d23a424b2b95b579cc0df5e23b
msgid "For single-field indexes, the selection between ascending and descending order is immaterial. For compound indexes, the selection is important. See :ref:`indexing order <index-ascending-and-descending>` for more details."
msgstr ""

#: ../source/core/query-optimization.txt:61
# 958f3ba3bd4f4e29986efef474853d06
msgid "Query Selectivity"
msgstr ""

#: ../source/core/query-optimization.txt:63
# 4e3d4669c98b40d589fc519f4e7febee
msgid "Some query operations are not selective. These operations cannot use indexes effectively or cannot use indexes at all."
msgstr ""

#: ../source/core/query-optimization.txt:66
# af5e08971d8b4d65a582199fdee3c7a3
msgid "The inequality operators :query:`$nin` and :query:`$ne` are not very selective, as they often match a large portion of the index. As a result, in most cases, a :query:`$nin` or :query:`$ne` query with an index may perform no better than a :query:`$nin` or :query:`$ne` query that must scan all documents in a collection."
msgstr ""

#: ../source/core/query-optimization.txt:72
# 0ff04c792e99401aae280e43714da4a1
msgid "Queries that specify regular expressions, with inline JavaScript regular expressions or :query:`$regex` operator expressions, cannot use an index with one exception. Queries that specify regular expression *with anchors* at the beginning of a string *can* use an index."
msgstr ""

#: ../source/core/query-optimization.txt:81
# 4fa511057c6645728f5a6a83953247c2
msgid "Covering a Query"
msgstr ""

#: ../source/core/query-optimization.txt:83
# 3c5ab83d43b745a8aa2f618f20ac511a
msgid "An index :ref:`covers <indexes-covered-queries>` a query, a *covered query*, when:"
msgstr ""

#: ../source/core/query-optimization.txt:86
# cd8ab0cf05c94d618c392b4c381d0184
msgid "all the fields in the :ref:`query <read-operations-query-document>` are part of that index, **and**"
msgstr ""

#: ../source/core/query-optimization.txt:89
# 6dcfeffaf03b434cbc6d1c5192d73633
msgid "all the fields returned in the documents that match the query are in the same index."
msgstr ""

#: ../source/core/query-optimization.txt:92
# 9ba95e135a3c422c90ede6f1e8cae872
msgid "For these queries, MongoDB does not need to inspect documents outside of the index. This is often more efficient than inspecting entire documents."
msgstr ""

#: ../source/core/query-optimization.txt:98
# f5ca34c5b5344e11a48dbfff1afc3bc7
msgid "Given a collection ``inventory`` with the following index on the ``type`` and ``item`` fields:"
msgstr ""

#: ../source/core/query-optimization.txt:105
# 12fc42db1a254dd9b02969ffe24e9eb2
msgid "This index will cover the following query on the ``type`` and ``item`` fields, which returns only the ``item`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:113
# c431a49ce8c544abbe1e2c4d9a6aa7cf
msgid "However, the index will **not** cover the following query, which returns the ``item`` field **and** the ``_id`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:121
# 7e69ff26d8e040449bf64591ca7aefbf
msgid "See :ref:`indexes-covered-queries` for more information on the behavior and use of covered queries."
msgstr ""

