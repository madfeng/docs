# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-pipeline.txt:3
# 1764850434b74ff6a5f4f036eab62f1d
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:9
# 7fbe46ef116843739ade534562026da5
msgid "The aggregation pipeline is a framework for data aggregation modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into an aggregated results."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:16
# c38d48eeaa874f8a81089c5db3764787
msgid "The aggregation pipeline provides an alternative to :term:`map-reduce` and may be the preferred solution for aggregation tasks where the complexity of map-reduce may be unwarranted."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:20
# fa14b466b55a4fa3bfb6a674d440ad5e
msgid "Aggregation pipeline have some limitations on value types and result size. See :doc:`/core/aggregation-pipeline-limits` for details on limits and restrictions on the aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:27
# 4c5afc291acc49828018f69f071d0250
msgid "Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:29
# 99a04df1555a4f3ab7b2d5eebe17045f
msgid "The MongoDB aggregation pipeline consists of :ref:`stages <aggregation-pipeline-operator-reference>`. Each stage transforms the documents as they pass through the pipeline. Pipeline stages do not need to produce one output document for every input document; e.g., some stages may generate new documents or filter out documents. Pipeline stages can appear multiple times in the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:36
# b8328ae170364350a5bdadeba409cddd
msgid "MongoDB provides the :method:`db.collection.aggregate()` method in the :program:`mongo` shell and the :dbcommand:`aggregate` command for aggregation pipeline. See :ref:`aggregation-pipeline-operator-reference` for the available stages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:41
# 55806563ccd74e18a52cb1b5837d9578
msgid "For example usage of the aggregation pipeline, consider :doc:`/tutorial/aggregation-with-user-preference-data` and :doc:`/tutorial/aggregation-zip-code-data-set`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:48
# e1f5b21c45a048b8b07f19bffc42d14e
msgid "Pipeline Expressions"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:50
# a988a447933649da813fccfc108e72b5
msgid "Some pipeline stages takes a pipeline expression as its operand. Pipeline expressions specify the transformation to apply to the input documents. Expressions have a :doc:`document </core/document>` structure and can contain other :ref:`expression <aggregation-expressions>`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:56
# b74f094f16e54e16930d721ef0b30a99
msgid "Pipeline expressions can only operate on the current document in the pipeline and cannot refer to data from other documents: expression operations provide in-memory transformation of documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:60
# 5f4d5028b9d145e9b5e7e7dd6eecbabb
msgid "Generally, expressions are stateless and are only evaluated when seen by the aggregation process with one exception: :ref:`accumulator <aggregation-accumulator-operators>` expressions."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:64
# 61bcc856e3734fdbbadcc0dcb9cc15a5
msgid "The accumulators, used with the :pipeline:`$group` pipeline operator, maintain their state (e.g. totals, maximums, minimums, and related data) as documents progress through the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:68
# cccbf2a3f6484cfb9aead8ba2a1a1eeb
msgid "For more information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:74
# 535e6c78f2904d0fa30f36d7f980754c
msgid "Aggregation Pipeline Behavior"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:76
# 2f10e542b9a046e0947f2460495f7646
msgid "In MongoDB, the :dbcommand:`aggregate` command operates on a single collection, logically passing the *entire* collection into the aggregation pipeline. To optimize the operation, wherever possible, use the following strategies to avoid scanning the entire collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:84
# ed45dffbeb824c0ea9ff81c930b63c41
msgid "Pipeline Operators and Indexes"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:86
# 6dc0b275c2b14ac3a4e88c781ff67c30
msgid "The :pipeline:`$match` and :pipeline:`$sort` pipeline operators can take advantage of an index when they occur at the **beginning** of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:90
# 6a7e4f62aafa41588b445a2fe12f3329
msgid "The :pipeline:`$geoNear` pipeline operator takes advantage of a geospatial index. When using :pipeline:`$geoNear`, the :pipeline:`$geoNear` pipeline operation must appear as the first stage in an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:96
# 9850c6a54ff14c4099bf23fc8a736080
msgid "Even when the pipeline uses an index, aggregation still requires access to the actual documents; i.e. indexes cannot fully cover an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:100
# ae4ed3ed93d741ff96eb26d08ddc867b
msgid "In previous versions, for very select use cases, an index could cover a pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:105
# da3ff99165804a129946b48de02f1304
msgid "Early Filtering"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:107
# 53ce15fc94e84e1bbe3a3cc718affaba
msgid "If your aggregation operation requires only a subset of the data in a collection, use the :pipeline:`$match`, :pipeline:`$limit`, and :pipeline:`$skip` stages to restrict the documents that enter at the beginning of the pipeline. When placed at the beginning of a pipeline, :pipeline:`$match` operations use suitable indexes to scan only the matching documents in a collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:114
# 4fa5cc3142ee45958ac5ae7740170d26
msgid "Placing a :pipeline:`$match` pipeline stage followed by a :pipeline:`$sort` stage at the start of the pipeline is logically equivalent to a single query with a sort and can use an index. When possible, place :pipeline:`$match` operators at the beginning of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:121
# 8d1b9b9fe54f4a8d92780e0d2e8ab581
msgid "Additional Features"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:123
# ba0527223e1c441aaf8a99bf67fb0d9c
msgid "The aggregation pipeline has an internal optimization phase that provides improved performance for certain sequences of operators. For details, see :doc:`/core/aggregation-pipeline-optimization`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:127
# cbe72416f5134253826d4608c22fa5cb
msgid "The aggregation pipeline supports operations on sharded collections. See :ref:`aggregation-pipeline-sharded-collection`."
msgstr ""

