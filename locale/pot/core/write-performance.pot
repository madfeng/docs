# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-performance.txt:3
# 623f053fbcb340feb40bd312d981b7bf
msgid "Write Operation Performance"
msgstr ""

#: ../source/core/write-performance.txt:8
# f3462dad8ff34712ac0f8df443a2e264
msgid "Indexes"
msgstr ""

#: ../source/core/write-performance.txt:10
# a811ef9a79184ca09da7db60bdb11ea7
msgid "After every insert, update, or delete operation, MongoDB must update *every* index associated with the collection in addition to the data itself. Therefore, every index on a collection adds some amount of overhead for the performance of write operations. [#exceptions]_"
msgstr ""

#: ../source/core/write-performance.txt:15
# 40862724e68b493da5062ec0dcce3338
msgid "In general, the performance gains that indexes provide for *read operations* are worth the insertion penalty. However, in order to optimize write performance when possible, be careful when creating new indexes and evaluate the existing indexes to ensure that your queries actually use these indexes."
msgstr ""

#: ../source/core/write-performance.txt:21
# 07d571c1d1d746b7bc0d895abf7c9215
msgid "For indexes and queries, see :doc:`/core/query-optimization`. For more information on indexes, see :doc:`/indexes` and :doc:`/applications/indexes`."
msgstr ""

#: ../source/core/write-performance.txt:25
# d403a8ce5e92419e9b03d0da099f4ef6
msgid "For inserts and updates to un-indexed fields, the overhead for :ref:`sparse indexes <index-type-sparse>` is less than for non-sparse indexes. Also for non-sparse indexes, updates that do not change the record size have less indexing overhead."
msgstr ""

#: ../source/core/write-performance.txt:31
# 9a05832fbb914101bf52acca0d206da8
msgid "Document Growth"
msgstr ""

#: ../source/core/write-performance.txt:33
# 99666110459d4d30a2d0728876545ba8
msgid "If an update operation causes a document to exceed the currently allocated :term:`record size`, MongoDB relocates the document on disk with enough contiguous space to hold the document. These relocations take longer than in-place updates, particularly if the collection has indexes. If a collection has indexes, MongoDB must update all index entries. Thus, for a collection with many indexes, the move will impact the write throughput."
msgstr ""

#: ../source/core/write-performance.txt:41
# 0e19914e43e547b394a3405616d3c2e9
msgid "Some update operations, such as the :update:`$inc` operation, do not cause an increase in document size. For these update operations, MongoDB can apply the updates in-place. Other update operations, such as the :update:`$push` operation, change the size of the document."
msgstr ""

#: ../source/core/write-performance.txt:46
# 26ad967b3e304ed4bb0473abddf75645
msgid "In-place-updates are significantly more efficient than updates that cause document growth. When possible, use :doc:`data models </core/data-models>` that minimize the need for document growth."
msgstr ""

#: ../source/core/write-performance.txt:50
# f7c003d71bc144b0a1335849298472c4
msgid "See :doc:`/core/storage` for more information."
msgstr ""

#: ../source/core/write-performance.txt:53
# f16ed52942174007b43a1091235fa6d5
msgid "Storage Performance"
msgstr ""

#: ../source/core/write-performance.txt:56
# 43e3056de5054135a366d2971fa28b2a
msgid "Hardware"
msgstr ""

#: ../source/core/write-performance.txt:58
# 77b037cf72f24830b2379329ae89dcbc
msgid "The capability of the storage system creates some important physical limits for the performance of MongoDB's write operations. Many unique factors related to the storage system of the drive affect write performance, including random access patterns, disk caches, disk readahead and RAID configurations."
msgstr ""

#: ../source/core/write-performance.txt:64
# 404bf824906a49be8c38113b956dc748
msgid "Solid state drives (SSDs) can outperform spinning hard disks (HDDs) by 100 times or more for random workloads."
msgstr ""

#: ../source/core/write-performance.txt:0
# b300e179bd0e480c8edc3395db8fd4dc
msgid "See"
msgstr ""

#: ../source/core/write-performance.txt:71
# 8194cc8f8a914976af25c6cd847b49af
msgid "Journaling"
msgstr ""

#: ../source/core/write-performance.txt:73
# 730c22302a89427787ca7c0da90c2447
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal."
msgstr ""

#: ../source/core/write-performance.txt:78
# b4bcd7f1619343d7ba39ae89300b1df5
msgid "While the durability assurance provided by the journal typically outweigh the performance costs of the additional write operations, consider the following interactions between the journal and performance:"
msgstr ""

#: ../source/core/write-performance.txt:83
# 2cd1381b11864cb5ab3d150a5aa93f2c
msgid "if the journal and the data file reside on the same block device, the data files and the journal may have to contend for a finite number of available write operations. Moving the journal to a separate device may increase the capacity for write operations."
msgstr ""

#: ../source/core/write-performance.txt:88
# d0a1bfbc4fbe4af0af313bb253d32ad0
msgid "if applications specify :doc:`write concern </core/write-concern>` that includes :ref:`journaled <write-concern-replica-journaled>`, :program:`mongod` will decrease the duration between journal commits, which can increases the overall write load."
msgstr ""

#: ../source/core/write-performance.txt:93
# 84da9488eb0b452b9cc2838a5c73a986
msgid "the duration between journal commits is configurable using the :setting:`~storage.journal.commitIntervalMs` run-time option. Decreasing the period between journal commits will increase the number of write operations, which can limit MongoDB's capacity for write operations. Increasing the amount of time between commits may decrease the total number of write operation, but also increases the chance that the journal will not record a write operation in the event of a failure."
msgstr ""

#: ../source/core/write-performance.txt:102
# e442dcc0e4bf4c50a3370079a08b5a52
msgid "For additional information on journaling, see :doc:`/core/journaling`."
msgstr ""

