# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-sync.txt:5
# 95b84be3f5664a4d9f566a4e5fed55b4
msgid "Replica Set Data Synchronization"
msgstr ""

#: ../source/core/replica-set-sync.txt:9
# b18248ef804c40ba8c555cde11473d88
msgid "In order to maintain up-to-date copies of the shared data set, members of a replica set :term:`sync` or replicate data from other members. MongoDB uses two forms of data synchronization: :ref:`initial sync <replica-set-initial-sync>` to populate new members with the full data set, and replication to apply ongoing changes to the entire data set."
msgstr ""

#: ../source/core/replica-set-sync.txt:19
# 42f4c3dcc4de469cb1ee94eb5d65e181
msgid "Initial Sync"
msgstr ""

#: ../source/core/replica-set-sync.txt:21
# 4a84f081b40d4b7fa44c8f684376534e
msgid "Initial sync copies all the data from one member of the replica set to another member. A member uses initial sync when the member has no data, such as when the member is new, or when the member has data but is missing a history of the set's replication."
msgstr ""

#: ../source/core/replica-set-sync.txt:26
# d8ed3008245849ca8c92499b9f2fe17c
msgid "When you perform an initial sync, MongoDB does the following:"
msgstr ""

#: ../source/core/replica-set-sync.txt:28
# 4a00f16ec04447ff9abfbe26ddd1d270
msgid "Clones all databases. To clone, the :program:`mongod` queries every collection in each source database and inserts all data into its own copies of these collections.  At this time, _id indexes are also built."
msgstr ""

#: ../source/core/replica-set-sync.txt:32
# 69a84a7d94c8483c9fe1323ac8acb168
msgid "Applies all changes to the data set. Using the oplog from the source, the :program:`mongod` updates its data set to reflect the current state of the replica set."
msgstr ""

#: ../source/core/replica-set-sync.txt:36
# f18fafb1a4af4a358615452b14873c69
msgid "Builds all indexes on all collections (except _id indexes, which were already completed)."
msgstr ""

#: ../source/core/replica-set-sync.txt:38
# ddf79a4b50e144e1abafd94a199f2c95
msgid "When the :program:`mongod` finishes building all index builds, the member can transition to a normal state, i.e. :term:`secondary`."
msgstr ""

#: ../source/core/replica-set-sync.txt:41
# 9714dc00d66a428fb9c11561e80365dc
msgid "To perform an initial sync, see :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

#: ../source/core/replica-set-sync.txt:47
# af1ac7d27b7042499f531d447d56979d
msgid "Replication"
msgstr ""

#: ../source/core/replica-set-sync.txt:49
# 776e75acdb6e4beab27f298551120412
msgid "Replica set members replicate data continuously after the initial sync. This process keeps the members up to date with all changes to the replica set's data. In most cases, secondaries synchronize from the primary. Secondaries may automatically change their *sync targets* if needed based on changes in the ping time and state of other members' replication."
msgstr ""

#: ../source/core/replica-set-sync.txt:81
# a445082a4e33458c93321c87f7725049
msgid "For a member to sync from another, the :data:`~local.system.replset.members[n].buildIndexes` setting for both members must have the same value/ :data:`~local.system.replset.members[n].buildIndexes` must be either ``true`` or ``false`` for both members."
msgstr ""

#: ../source/core/replica-set-sync.txt:87
# a64fb7f5a5154c62996726a1204c1efa
msgid "Beginning in version 2.2, secondaries avoid syncing from :ref:`delayed members <replica-set-delayed-members>` and :ref:`hidden members <replica-set-hidden-members>`."
msgstr ""

#: ../source/core/replica-set-sync.txt:92
# b6f2a7202401408989829cf09abd539f
msgid "Validity and Durability"
msgstr ""

#: ../source/core/replica-set-sync.txt:96
# 5bc895a04744489897029ca21ba6ff4e
msgid "In a replica set, only the primary can accept write operations. Writing only to the primary provides :term:`strict consistency` among members."
msgstr ""

#: ../source/core/replica-set-sync.txt:99
# 6fd95909516047fc9e67ffde2f46189c
msgid ":term:`Journaling <journal>` provides single-instance write durability. Without journaling, if a MongoDB instance terminates ungracefully, you must assume that the database is in an invalid state."
msgstr ""

#: ../source/core/replica-set-sync.txt:106
# 9e4d5ca6fffc4610af5ac2eb2ea7399f
msgid "Multithreaded Replication"
msgstr ""

#: ../source/core/replica-set-sync.txt:108
# 9e9976f8f1c64827b025d5d695741ab6
msgid "MongoDB applies write operations in batches using multiple threads to improve concurrency. MongoDB groups batches by namespace and applies operations using a group of threads, but always applies the write operations to a namespace in order."
msgstr ""

#: ../source/core/replica-set-sync.txt:113
# 9e93da6382fa4843a4a1d247e692314c
msgid "While applying a batch, MongoDB blocks all reads. As a result, secondaries can never return data that reflects a state that never existed on the primary."
msgstr ""

#: ../source/core/replica-set-sync.txt:118
# 3ebc681487794140812dd17efbc723e6
msgid "Pre-Fetching Indexes to Improve Replication Throughput"
msgstr ""

#: ../source/core/replica-set-sync.txt:120
# 950c99dad981493f9b7ba0f39333dcb4
msgid "To help improve the performance of applying oplog entries, MongoDB fetches memory pages that hold affected data and indexes. This *pre-fetch* stage minimizes the amount of time MongoDB holds the write lock while applying oplog entries. By default, secondaries will pre-fetch all :ref:`indexes`."
msgstr ""

#: ../source/core/replica-set-sync.txt:126
# fb366bf080e24e39a89663cc7d60fac6
msgid "Optionally, you can disable all pre-fetching or only pre-fetch the index on the ``_id`` field. See the :setting:`~replication.secondaryIndexPrefetch` setting for more information."
msgstr ""

