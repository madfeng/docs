# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/convertToCapped.txt:3
# aea4482352c04f3baef835c11f31e1fd
msgid "convertToCapped"
msgstr ""

#: ../source/reference/command/convertToCapped.txt:9
# 1b68c9a0f50b401ea5c2200d1d44bc74
msgid "The :dbcommand:`convertToCapped` command converts an existing, non-capped collection to a :term:`capped collection` within the same database."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:13
# f27194bacb2d49d6a6df1fa7088f4d6f
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/convertToCapped.txt:19
# bc98fb090f1e48a5870a6a7aa3836de3
msgid ":dbcommand:`convertToCapped` takes an existing collection (``<collection>``) and transforms it into a capped collection with a maximum size in bytes, specified to the ``size`` argument (``<capped size>``)."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:24
# 700d7b8119dd4de8b218e64e85b21ffc
msgid "During the conversion process, the :dbcommand:`convertToCapped` command exhibit the following behavior:"
msgstr ""

#: ../source/reference/command/convertToCapped.txt:27
# ee11a16b4a1b468181c769e67291aae9
msgid "MongoDB transverses the documents in the original collection in :term:`natural order` and loads the documents into a new capped collection."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:31
# 32096404cb234ced87853f9a3976a5db
msgid "If the ``capped size`` specified for the capped collection is smaller than the size of the original uncapped collection, then MongoDB will overwrite documents in the capped collection based on insertion order, or *first in, first out* order."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:36
# 1fdaa94dc3bd4b82ac1b6a5cd8124b1f
msgid "Internally, to convert the collection, MongoDB uses the following procedure"
msgstr ""

#: ../source/reference/command/convertToCapped.txt:39
# 4b6a1d677e084cc3b83abb9f29463ae2
msgid ":dbcommand:`cloneCollectionAsCapped` command creates the capped collection and imports the data."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:42
# faf7f82432e14ba8a28c5d1d6fcfd133
msgid "MongoDB drops the original collection."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:44
# daf56d768a444b98adeb8d28357bf3b6
msgid ":dbcommand:`renameCollection` renames the new capped collection to the name of the original collection."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:49
# 42ddba74a6c44576877dc9334ba58f41
msgid "MongoDB does not support the :dbcommand:`convertToCapped` command in a sharded cluster."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:54
# e238281265ac4c0cafe96390cd51cc22
msgid "The :dbcommand:`convertToCapped` will not recreate indexes from the original collection on the new collection, other than the index on the ``_id`` field. If you need indexes on this collection you will need to create these indexes after the conversion is complete."
msgstr ""

#: ../source/reference/command/convertToCapped.txt:60
# 27ac4fc7712e4b5db208c9dffd35e794
msgid ":dbcommand:`create`"
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# f123197211ca4a51890c193442e0db5e
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

