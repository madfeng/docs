# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/split.txt:3
# 00c07257769346f3a27fa4e187be8819
msgid "split"
msgstr ""

#: ../source/reference/command/split.txt:8
# 63ac2ba1b86d44908d9357f92d3dd2da
msgid "Definition"
msgstr ""

#: ../source/reference/command/split.txt:12
# 57cd2e8d273c458c912f0d266316529f
msgid "Splits a :term:`chunk` in a :term:`sharded cluster` into two chunks. The :program:`mongos` instance splits and manages chunks automatically, but for exceptional circumstances the :dbcommand:`split` command does allow administrators to manually create splits. See :doc:`/tutorial/split-chunks-in-sharded-cluster` for information on these circumstances, and on the MongoDB shell commands that wrap :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:20
# 685d1b5110784e85bc9e4fc131271516
msgid "The :dbcommand:`split` command uses the following form:"
msgstr ""

#: ../source/reference/command/split.txt:27
# 128b68b7c0f747be9747d1563037a6f5
msgid "The :dbcommand:`split` command takes a document with the following fields:"
msgstr ""

#: ../source/reference/command/split.txt:33
# 109b5b982e784544959a61d0061cff71
msgid "Considerations"
msgstr ""

#: ../source/reference/command/split.txt:35
# 41c0acb7df584e248184cd9bc457caee
msgid "When used with either the ``find`` or the ``bounds`` option, the :dbcommand:`split` command splits the chunk along the median. As such, the command cannot use the ``find`` or the ``bounds`` option to split an empty chunk since an empty chunk has no median."
msgstr ""

#: ../source/reference/command/split.txt:40
# cbd59d2d5e20496ea8ba23089b1ff7d1
msgid "To create splits in empty chunks, use either the ``middle`` option with the :dbcommand:`split` command or use the :dbcommand:`splitAt` command."
msgstr ""

#: ../source/reference/command/split.txt:44
# d17c04fcc73549b69e99e9a73a970610
msgid "Command Formats"
msgstr ""

#: ../source/reference/command/split.txt:46
# 775d7aef636d4c138f82047de2b025a7
msgid "To create a chunk split, connect to a :program:`mongos` instance, and issue the following command to the ``admin`` database:"
msgstr ""

#: ../source/reference/command/split.txt:54
#: ../source/reference/command/split.txt:61
# 8ae9f43172174d469cdef487ee45af46
# 331b6ba3a11d4a18bc0885ea600c710e
msgid "Or:"
msgstr ""

#: ../source/reference/command/split.txt:68
# 7f51103bc6dd456fa06c3d37d5045766
msgid "To create a split for a collection that uses a :term:`hashed shard key`, use the ``bounds`` parameter. Do *not* use the ``middle`` parameter for this purpose."
msgstr ""

#: ../source/includes/warning-splitting-chunks.rst:3
# 49d9a9cfadf540d8a024c5c7cba54e69
msgid "Be careful when splitting data in a sharded collection to create new chunks. When you shard a collection that has existing data, MongoDB automatically creates chunks to evenly distribute the collection. To split data effectively in a sharded cluster you must consider the number of documents in a chunk and the average document size to create a uniform chunk size. When chunks have irregular sizes, shards may have an equal number of chunks but have very different data sizes. Avoid creating splits that lead to a collection with differently sized chunks."
msgstr ""

#: ../source/reference/command/split.txt:74
# 6a0f253db1954b92b4091fefcc037031
msgid ":dbcommand:`moveChunk`, :method:`sh.moveChunk()`, :method:`sh.splitAt()`, and :method:`sh.splitFind()`, which wrap the functionality of :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:79
# 9054d23e859d42e1bdf44abc2288d60c
msgid "Examples"
msgstr ""

#: ../source/reference/command/split.txt:81
# f73305b9b996417a86ca0447209612e7
msgid "The following sections provide examples of the :dbcommand:`split` command."
msgstr ""

#: ../source/reference/command/split.txt:84
# 0c91952baebd4cabbf8dcd655b5b5c35
msgid "Split a Chunk in Half"
msgstr ""

#: ../source/reference/command/split.txt:90
# cae4353bd3c84ce7b7bb53e74e3dbc0c
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that holds documents that match ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks of equal size."
msgstr ""

#: ../source/reference/command/split.txt:96
# 2898c20b730e4efabb70267a99c00fa2
msgid ":dbcommand:`split` creates two equal chunks by range as opposed to size, and does not use the selected point as a boundary for the new chunks"
msgstr ""

#: ../source/reference/command/split.txt:101
# e523771b9ea94413820b1db1520d890e
msgid "Define an Arbitrary Split Point"
msgstr ""

#: ../source/reference/command/split.txt:103
# 5c45e1365b304e9fb46201e7da2667c9
msgid "To define an arbitrary split point, use the following form:"
msgstr ""

#: ../source/reference/command/split.txt:109
# 48abd76d4b3e4f2998d87f485a85575a
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that would hold documents matching the query ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks, with the matching document as the lower bound of one of the split chunks."
msgstr ""

#: ../source/reference/command/split.txt:116
# 33dd4342b7774708a20ef619768a2dfd
msgid "This form is typically used when :term:`pre-splitting` data in a collection."
msgstr ""

#: ../source/reference/command/split.txt:120
# abcdc2fc5af74d3cbb44b006041b6f2e
msgid "Split a Chunk Using Values of a Hashed Shard Key"
msgstr ""

#: ../source/reference/command/split.txt:122
# 42afdd3860f240f6b7a21992caaa8484
msgid "This example uses the :term:`hashed shard key` ``userid`` in a ``people`` collection of a ``test`` database. The following command uses an array holding two single-field documents to represent the minimum and maximum values of the hashed shard key to split the chunk:"
msgstr ""

#: ../source/reference/command/split.txt:134
# 2e7471613a40419c8f1abd13aac8afdf
msgid "MongoDB uses the 64-bit :ref:`NumberLong <shell-type-long>` type to represent the hashed value."
msgstr ""

#: ../source/reference/command/split.txt:137
# d3aaaf9fd6304009bceea7395bd37062
msgid "Use :method:`sh.status()` to see the existing bounds of the shard keys."
msgstr ""

#: ../source/reference/command/split.txt:140
# 8e81cbf799aa49b9b1e5e398edb67cfb
msgid "Metadata Lock Error"
msgstr ""

#: ../source/reference/command/split.txt:142
# b1bef928032d4cfa870698b077e47896
msgid "If another process in the :program:`mongos`, such as a balancer process, changes metadata while :dbcommand:`split` is running, you may see a ``metadata lock error``."
msgstr ""

#: ../source/reference/command/split.txt:150
# b6b922451cc04c42b9573f481da34d24
msgid "This message indicates that the split has failed with no side effects. Retry the :dbcommand:`split` command."
msgstr ""

