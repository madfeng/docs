# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/repairDatabase.txt:3
# 4d852764db8e41b4896b43d0211c6617
msgid "repairDatabase"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:8
# 228953d2c2a443808d6a9c61858b6da6
msgid "Definition"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:12
# b01e87c1b90343338f738cb71d5c1b1d
msgid "Checks and repairs errors and inconsistencies in data storage. :dbcommand:`repairDatabase` is analogous to a ``fsck`` command for file systems. Run the :dbcommand:`repairDatabase` command to ensure data integrity after the system experiences an unexpected system restart or crash, if:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:18
# d184d52a2ee640de956f9e7a5098206d
msgid "The :program:`mongod` instance is not running with :term:`journaling <journal>` enabled."
msgstr ""

#: ../source/includes/note-repair.rst:1
# a4ae5d71173642faa5d0883c9b8f9f05
msgid "When using :term:`journaling <journal>`, there is almost never any need to run :dbcommand:`repairDatabase`. In the event of an unclean shutdown, the server will be able to restore the data files to a pristine state automatically."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:23
# 6beb345862fd4ccb89b0e93a65c01346
msgid "There are *no* other intact :term:`replica set` members with a complete data set."
msgstr ""

#: ../source/includes/warning-repair.rst:3
# 26cb7a21def847829e110ac550762426
msgid "During normal operations, only use the :dbcommand:`repairDatabase` command and wrappers including :method:`db.repairDatabase()` in the :program:`mongo` shell and :option:`mongod --repair`, to compact database files and/or reclaim disk space. Be aware that these operations remove and do not save any corrupt data during the repair process."
msgstr ""

#: ../source/includes/warning-repair.rst:10
# bc3105849bde4fcd96fb33e344d512bb
msgid "If you are trying to repair a :term:`replica set` member, and you have access to an intact copy of your data (e.g. a recent backup or an intact member of the :term:`replica set`), you should restore from that intact copy, and **not** use :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:28
# f5ee0e8171774079a5fcc590640c3849
msgid ":dbcommand:`repairDatabase` takes the following form:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:34
# 9355e0f84d9e4f3493c2904cc7f2e2ac
msgid ":dbcommand:`repairDatabase` has the following fields:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:38
# 95a02e36765c4ae3b1cffd834ae66d91
msgid "You can explicitly set the options as follows:"
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# fb7179f1e50d41b7b3ff3bb117b845ae
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:48
# 078c7adec6b942bc92ee6eb9559ff2fc
msgid ":dbcommand:`repairDatabase` requires free disk space equal to the size of your current data set plus 2 gigabytes. If the volume that holds dbpath lacks sufficient space, you can mount a separate volume and use that for the repair. When mounting a separate volume for :dbcommand:`repairDatabase` you must run :dbcommand:`repairDatabase` from the command line and use the :option:`--repairpath <mongod --repairpath>` switch to specify the folder in which to store temporary repair files."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:58
# f4d2bd5b68a9402f89adb6eba3c69843
msgid "See :option:`mongod --repair` and :option:`mongodump --repair` for information on these related options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:62
# 5f024a183f1245e4b61e7709d26b9e0b
msgid "Behavior"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:66
# 7e40b1da9e6c42faaa65a1467779cee3
msgid "The :dbcommand:`repairDatabase` command is now available for secondary as well as primary members of replica sets."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:69
# 377ab24bdd2c4a9c8372f0324d8d87bd
msgid "The :dbcommand:`repairDatabase` command compacts all collections in the database. It is identical to running the :dbcommand:`compact` command on each collection individually."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:73
# 1a7c2a48443947c484322de7194f81b9
msgid ":dbcommand:`repairDatabase` reduces the total size of the data files on disk. It also recreates all indexes in the database."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:76
# 705c2960260b494aaa103f27279833e5
msgid "The time requirement for :dbcommand:`repairDatabase` depends on the size of the data set."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:79
# 6a7dfc950db54f69a3f3aa843cf9eab7
msgid "You may invoke :dbcommand:`repairDatabase` from multiple contexts:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:81
# 9f689d3502094aa59f41675850cea97c
msgid "Use the :program:`mongo` shell to run the command, as above."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:83
# fffb3b50cb1347b5825a35805e86b184
msgid "Use the :method:`db.repairDatabase()` in the :program:`mongo` shell."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:86
# 9e040e046882475ea0f3b631fd32d3cd
msgid "Run :program:`mongod` directly from your system's shell. Make sure that :program:`mongod` isn't already running, and that you invoke :program:`mongod` as a user that has access to MongoDB's data files. Run as:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:95
# d5cceaf0437e4f61aa232ebe6f40b996
msgid "To add a repair path:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:103
# 411c385e57594b81b7779df284bb9472
msgid ":option:`mongod --repair <mongod --repair>` will fail if your database is not a master or primary. In most cases, you should recover a corrupt secondary using the data from an existing intact node. To run repair on a secondary/slave restart the instance in standalone mode without the :option:`--replSet <mongod --replSet>` or :option:`--slave <mongod --slave>` options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:111
# dfb344badb3e4a2abd2b15b015d90ff6
msgid "Example"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:118
# 8e151720e94748d39a69855d1750595c
msgid "Using ``repairDatabase`` to Reclaim Disk Space"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:120
# b353441d05c24697b6ab39415c0d1864
msgid "You should not use :dbcommand:`repairDatabase` for data recovery unless you have no other option."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:123
# e2c3d5a6b543414395ad1f73b1610442
msgid "However, if you trust that there is no corruption and you have enough free space, then :dbcommand:`repairDatabase` is the appropriate and the only way to reclaim disk space."
msgstr ""

