# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/findAndModify.txt:3
# dd79212619a74129b5ecc9ed5efa2cf8
msgid "findAndModify"
msgstr ""

#: ../source/reference/command/findAndModify.txt:12
# 8992bacf893840e8ad0aeefa7fc60d79
msgid "Definition"
msgstr ""

#: ../source/reference/command/findAndModify.txt:16
# 1ebdf0a214ae4729b863dc3648c359ec
msgid "The :dbcommand:`findAndModify` command modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option."
msgstr ""

#: ../source/reference/command/findAndModify.txt:21
# e802ad67f8664368b1fc0c0e45b9e9dc
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:36
# 670f0d5849ed4a938969b93068ab7e9b
msgid "The :dbcommand:`findAndModify` command takes the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:44
# c7e427cea8494aa48a97a17570afa7c2
msgid "Output"
msgstr ""

#: ../source/reference/command/findAndModify.txt:46
# 0052aa633115421698de060267276700
msgid "The return document contains the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:48
# 5ef3c2ac4a2741febf6cbc780de5db1d
msgid "The ``lastErrorObject`` field that returns the details of the command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:51
# c2737f4adfa84c9aac88c10003466874
msgid "The ``updatedExisting`` field **only** appears if the command specifies an ``update`` or an ``update`` with ``upsert: true``; i.e. the field does not appear for a ``remove``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:55
# f72b55c87d254336a0d0e286232a2bf4
msgid "The ``upserted`` field **only** appears if the ``update`` with the ``upsert: true`` operation results in an insertion."
msgstr ""

#: ../source/reference/command/findAndModify.txt:58
# 64e0eb85c61744d98ef71fa76aeddebc
msgid "The ``value`` field that returns either:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:60
# c86783c6bec1427c979c6d12c5cbb014
msgid "the original (i.e. pre-modification) document if ``new`` is false, or"
msgstr ""

#: ../source/reference/command/findAndModify.txt:63
# 97073c903daf4f908c718bf8c0c73c7d
msgid "the modified or inserted document if ``new: true``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:65
# f92d67a537f7496e82094435ffb15c8a
msgid "The ``ok`` field that returns the status of the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:69
# eb2131d8f3d6470aab504ca29252af08
msgid "If the :dbcommand:`findAndModify` finds no matching document, then:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:72
# f5f8ee1351cb4f788afc45c41db8d972
msgid "for ``update`` or ``remove`` operations, ``lastErrorObject`` does not appear in the return document and the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:80
# 2e0acf4694854554bbcabc97ecaed57a
msgid "for ``update`` with ``upsert: true`` operation that results in an insertion, if the command also specifies ``new`` is ``false`` **and** specifies a ``sort``, the return document has a ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds an empty document ``{}``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:86
# bdb6c3edf69840e09a7376d0ee36bf30
msgid "for ``update`` with ``upsert: true`` operation that results in an insertion, if the command also specifies ``new`` is ``false`` but does **not** specify a ``sort``, the return document has a ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:93
# f56a37e782344a8694115d204acf847c
msgid "Behavior"
msgstr ""

#: ../source/reference/command/findAndModify.txt:95
# c7dca661a61d417d8f8e3683258da985
msgid "When the :dbcommand:`findAndModify` command includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the command could insert a document multiple times in certain circumstances. For instance, if multiple clients issue the :dbcommand:`findAndModify` command and these commands complete the ``find`` phase before any one starts the ``modify`` phase, these commands could insert the same document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:103
# a4c37021bd0b4b668069b15a4c5f0707
msgid "Consider an example where no document with the name ``Andy`` exists and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:118
# 810e8298c7a54a128dd4d5c45119adc3
msgid "If all the commands finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all result in an insert. To prevent this condition, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, then the multiple :dbcommand:`findAndModify` commands would observe one of the following behaviors:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:126
# 4c955b4430a742988e192ff4430e64dc
msgid "Exactly one :dbcommand:`findAndModify` would successfully insert a new document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:129
# 7ac6f2dc57ff423f87f5dce4d5870d93
msgid "Zero or more :dbcommand:`findAndModify` commands would update the newly inserted document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:132
# 8baef2f930444d02b69a8b90fdd132f2
msgid "Zero or more :dbcommand:`findAndModify` commands would fail when they attempted to insert a duplicate. If the command fails due to a unique index constraint violation, you can retry the command. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/command/findAndModify.txt:138
# a59b1d67100544728c274954680b827e
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/command/findAndModify.txt:140
# 870c544c65e34c23a3a394fe0e852a1e
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` must contain the :term:`shard key` for all operations against the shard cluster. :dbcommand:`findAndModify` operations issued against :program:`mongos` instances for non-sharded collections function normally."
msgstr ""

#: ../source/reference/command/findAndModify.txt:148
# bef8454a118d4a7eb7d084aa05a5cddb
msgid "Concurrency"
msgstr ""

#: ../source/reference/command/findAndModify.txt:150
# 9e606e78051e425cabe4d3804877f889
msgid "This command obtains a write lock on the affected database and will block other operations until it has completed; however, typically the write lock is short lived and equivalent to other similar :method:`~db.collection.update()` operations."
msgstr ""

#: ../source/reference/command/findAndModify.txt:158
# 927d47e979c34cfcba9c52576a4759ac
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
# d515da0ce2bd45a08e454823aed65ec1
msgid "When updating a document, |operation| and the :method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
# 62019c2eb9ee4e5e85788022e793e4c6
msgid "By default, both operations modify a single document. However, the :method:`~db.collection.update()` method with its ``multi`` option can modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
# 2e55e23727d7432f86f22937fc4e4d57
msgid "If multiple documents match the update criteria, for |operation|, you can specify a ``sort`` to provide some measure of control on which document to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
# 47a01794f4b1472f8adb0edc8067941a
msgid "With the default behavior of the :method:`~db.collection.update()` method, you cannot specify which single document to update when multiple documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
# 172c4355b114444e8ea0a83f239cda2b
msgid "By default, |operation| method returns |return-object|. To obtain the updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
# dfbf0613fe7f4e9eafb653f86483ce57
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. To return the updated document, use the :method:`~db.collection.find()` method. However, other updates may have modified the document between your update and the document retrieval. Also, if the update modified only a single document but multiple documents matched, you will need to use additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
# 5836f62aed6246798e48c64d832aa696
msgid "You cannot specify a :doc:`write concern </core/write-concern>` to |operation| to override the default write concern whereas, starting in MongoDB 2.6, you can specify a write concern to the :method:`~db.collection.update()` method."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:32
# 4df9a31b018c4384bc3ee6c2e83d9ae4
msgid "When modifying a *single* document, both |operation| and the :method:`~db.collection.update()` method *atomically* update the document. See :doc:`/tutorial/isolate-sequence-of-operations` for more details about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/command/findAndModify.txt:167
# d933c192c2ba4540bbcc5e2cc5ec03c0
msgid "Examples"
msgstr ""

#: ../source/reference/command/findAndModify.txt:170
# 661fa7625ae24bb0bd9b897da64be90a
msgid "Update and Return"
msgstr ""

#: ../source/reference/command/findAndModify.txt:172
# 11becfdae4704801886914da8ff8fd9d
msgid "The following command updates an existing document in the ``people`` collection where the document matches the ``query`` criteria:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:186
# 0587352476c7448eaa0627be2c154b53
msgid "This command performs the following actions:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:188
# 1f88f9b8c18547e08bd4d22a45b248e3
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/command/findAndModify.txt:193
# e0adf247421c4feb84d21d46fbadfe1d
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the command will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:198
# fb439e1129374c98aee91982ae2349bf
msgid "The ``update`` :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/command/findAndModify.txt:201
# 9a31571447cd4cca88b117b533294a10
msgid "The command returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:203
# d7be55e9f2134d2aba26ead5757ca387
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``updatedExisting`` which is ``true``, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:207
# 199938e45aab4120adef1a790a273ffb
msgid "The ``value`` field that contains the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:230
# 182a0d975d02481d98657b90666dae73
msgid "To return the modified document in the ``value`` field, add the ``new:true`` option to the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:233
# 3ad0f48f48174397a6f6771d436bd05c
msgid "If no document match the ``query`` condition, the command returns a document that contains ``null`` in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:241
# f52adae13b3a4f799a9f2cca4bbd0fdc
msgid "The :program:`mongo` shell and many :term:`drivers <driver>` provide a :method:`~db.collection.findAndModify()` helper method. Using the shell helper, this previous operation can take the following form:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:254
# 4d503adcc6e447fa9118ca296d046ddc
msgid "However, the :method:`~db.collection.findAndModify()` shell helper method returns only the unmodified document, or if ``new`` is ``true``, the modified document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:269
# 837a65e5324a439b87e21031972ebe09
msgid "``upsert: true``"
msgstr ""

#: ../source/reference/command/findAndModify.txt:271
# 957332e2f033463fa6ef59e776d11a9a
msgid "The following :dbcommand:`findAndModify` command includes the ``upsert: true`` option for the ``update`` operation to either update a matching document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:287
# 8540ba0c312f4cae9f7d993ec61ec631
msgid "If the command finds a matching document, the command performs an update."
msgstr ""

#: ../source/reference/command/findAndModify.txt:289
# 2ecfd7a7074842ef84f9067411f3db5f
msgid "If the command does **not** find a matching document, the ``update`` with :term:`upsert: true <upsert>` operation results in an insertion and returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:293
# 74688bcb71f64ef29260c763304c9070
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``upserted`` that contains the ``ObjectId`` of the newly inserted document, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:297
# 3fef20bacdd14f5d8bccd1bef0986995
msgid "The ``value`` field that contains an empty document ``{}`` as the original document because the command included the ``sort`` option:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:317
# cd191df101104fc488e52112eda38034
msgid "If the command did **not** include the ``sort`` option, the ``value`` field would contain ``null``:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:333
# 0a1b3783e481485e91ef21e17c679752
msgid "Return New Document"
msgstr ""

#: ../source/reference/command/findAndModify.txt:335
# 8228543657204584a3b1bdd8eaaa04c6
msgid "The following :dbcommand:`findAndModify` command includes both ``upsert: true`` option and the ``new:true`` option. The command either updates a matching document and returns the updated document or, if no matching document exists, inserts a document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/command/findAndModify.txt:341
# b3b66908d62a422fad3a5eb47a0ca558
msgid "In the following example, no document in the ``people`` collection matches the ``query`` condition:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:357
# a46ffe36e5ef4faa8e5c56d3933e3081
msgid "The command returns the newly inserted document in the ``value`` field:"
msgstr ""

