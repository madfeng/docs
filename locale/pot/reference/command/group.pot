# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/group.txt:3
# 918afbc557f04d88a5b45008a512d46c
msgid "group"
msgstr ""

#: ../source/reference/command/group.txt:8
# e99b6d0ead3b44e8b446b3d622e7fa9b
msgid "Definition"
msgstr ""

#: ../source/reference/command/group.txt:12
# d4f7246497574005b98575fb6fab22b8
msgid "Groups documents in a collection by the specified key and performs simple aggregation functions, such as computing counts and sums. The command is analogous to a ``SELECT <...> GROUP BY`` statement in SQL. The command returns a document with the grouped records as well as the command meta-data."
msgstr ""

#: ../source/reference/command/group.txt:18
# 144bc55a45be42e9851903c1c79af0ba
msgid "The :dbcommand:`group` command takes the following prototype form:"
msgstr ""

#: ../source/reference/command/group.txt:35
# c014284be1ec4b34adef56c8b631efef
msgid "The command accepts a document with the following fields:"
msgstr ""

#: ../source/reference/command/group.txt:41
# 261f8d3be4e04fe8a431554e94d8fd3b
msgid "For the shell, MongoDB provides a wrapper method :method:`db.collection.group()`. However, the :method:`db.collection.group()` method takes the ``keyf`` field and the ``reduce`` field whereas the :dbcommand:`group` command takes the ``$keyf`` field and the ``$reduce`` field."
msgstr ""

#: ../source/reference/command/group.txt:48
# f18fea31fd9d4207b7a009984f4dbc14
msgid "Behavior"
msgstr ""

#: ../source/reference/command/group.txt:51
# 1b83f0f94f4c420a99f1a9591c18715d
msgid "Limits and Restrictions"
msgstr ""

#: ../source/reference/command/group.txt:53
# 683f466778f041dd998ff945d57ef081
msgid "The :dbcommand:`group` command does not work with :term:`sharded clusters <sharded cluster>`. Use the :term:`aggregation framework` or :term:`map-reduce` in :term:`sharded environments <sharding>`."
msgstr ""

#: ../source/reference/command/group.txt:57
# 585c4dc15f2049cfbb102344bfd58f07
msgid "The result set must fit within the :ref:`maximum BSON document size <limit-bson-document-size>`."
msgstr ""

#: ../source/reference/command/group.txt:60
# a82b46c5f53c4631b4615336ee772433
msgid "Additionally, in version 2.2, the returned array can contain at most 20,000 elements; i.e. at most 20,000 unique groupings. For group by operations that results in more than 20,000 unique groupings, use :dbcommand:`mapReduce`. Previous versions had a limit of 10,000 elements."
msgstr ""

#: ../source/reference/command/group.txt:66
# 9f491f28d5fe4aafaffafbca94908226
msgid "Prior to 2.4, the :dbcommand:`group` command took the :program:`mongod` instance's JavaScript lock which blocked all other JavaScript execution."
msgstr ""

#: ../source/reference/command/group.txt:70
# f10149470a934d138778ebf5045fe2e9
msgid "``mongo`` Shell JavaScript Functions/Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
# 3b8deb38888845b999e40b59e4eb89e3
msgid "In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
# d579c3ac8ab14bef9d0a4a844f6cd5b8
msgid "When upgrading to MongoDB 2.4, you will need to refactor your code if your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands, or :query:`$where` operator expressions include any global shell functions or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
# 0ed28c58b1b341ff9d45847ed78728ea
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
# c964e0bc67294058843147940a678e8e
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
# 5dd37c7a536f4f929b015663fddb80ea
msgid "Available Functions"
msgstr ""

#: ../source/includes/admonition-javascript-prevalence.rst:1
# 5f52bfbbbb0841c091eeebc5baefeb8a
msgid "JavaScript in MongoDB"
msgstr ""

#: ../source/includes/admonition-javascript-prevalence.rst:3
# 3a5aac0bad5043cb831eb4bc2dcd20c8
msgid "Although |javascript-using-operation| JavaScript, most interactions with MongoDB do not use JavaScript but use an :doc:`idiomatic driver </applications/drivers>` in the language of the interacting application."
msgstr ""

#: ../source/reference/command/group.txt:80
# 564d5d5702cb4b7689ac9f0eba4530ea
msgid "Examples"
msgstr ""

#: ../source/reference/command/group.txt:82
# b766cd3dbc5049eaa3f7bf70a5240cec
msgid "The following are examples of the :method:`db.collection.group()` method. The examples assume an ``orders`` collection with documents of the following prototype:"
msgstr ""

#: ../source/reference/command/group.txt:102
# cc88c32558e044998c7f442a4aa01d83
msgid "Group by Two Fields"
msgstr ""

#: ../source/reference/command/group.txt:104
# 2be173a59e854f6bb5e67d685cd8e985
msgid "The following example groups by the ``ord_dt`` and ``item.sku`` fields those documents that have ``ord_dt`` greater than ``01/01/2012``:"
msgstr ""

#: ../source/reference/command/group.txt:123
# 98b541db9a5b4ccba53144cd1b734899
msgid "The result is a document that contain the ``retval`` field which contains the group by records, the ``count`` field which contains the total number of documents grouped, the ``keys`` field which contains the number of unique groupings (i.e. number of elements in the ``retval``), and the ``ok`` field which contains the command status:"
msgstr ""

#: ../source/reference/command/group.txt:150
#: ../source/reference/command/group.txt:206
# 3699106742334a7dbfdfd69ee4c7d610
# f90d59e28fc8477cb7732b1bf6752a3f
msgid "The method call is analogous to the SQL statement:"
msgstr ""

#: ../source/reference/command/group.txt:160
# 5e79a214b5154d2581182b99bd79290e
msgid "Calculate the Sum"
msgstr ""

#: ../source/reference/command/group.txt:162
# fd11ae674e56489da8fb510bda50cbe3
msgid "The following example groups by the ``ord_dt`` and ``item.sku`` fields those documents that have ``ord_dt`` greater than ``01/01/2012`` and calculates the sum of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/command/group.txt:183
#: ../source/reference/command/group.txt:252
# a44357121b2c401faed8f168c821c05e
# 02685af3c97144df8911ef6ba9adab09
msgid "The ``retval`` field of the returned document is an array of documents that contain the group by fields and the calculated aggregation field:"
msgstr ""

#: ../source/reference/command/group.txt:216
# ab082a096f2047e9b874c2791572b435
msgid "Calculate Sum, Count, and Average"
msgstr ""

#: ../source/reference/command/group.txt:218
# a6df2662da154d6bad1632b4cd407a02
msgid "The following example groups by the calculated ``day_of_week`` field, those documents that have ``ord_dt`` greater than ``01/01/2012`` and calculates the sum, count, and average of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/command/group.txt:270
# 551dd20606d34f4381b85ea1c972d605
msgid ":doc:`/core/aggregation`"
msgstr ""

