# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/compact.txt:5
# 2b00a745d592424993c124acc8fe5864
msgid "compact"
msgstr ""

#: ../source/reference/command/compact.txt:10
# 87bde095232f4e04858d82116d0d9ea4
msgid "Definition"
msgstr ""

#: ../source/reference/command/compact.txt:16
# 23a372fea7ff48178f37d10ff644b4a2
msgid "Rewrites and defragments all data in a collection, as well as all of the indexes on that collection. :dbcommand:`compact` has the following form:"
msgstr ""

#: ../source/reference/command/compact.txt:24
# ac542460a91a446e83767d6844ed9fe5
msgid ":dbcommand:`compact` has the following fields:"
msgstr ""

#: ../source/reference/command/compact.txt:28
# 64fbb4dc228d450ea57fc582fa41e8ed
msgid ":dbcommand:`compact` is similar to :dbcommand:`repairDatabase`; however, :dbcommand:`repairDatabase` operates on an entire database."
msgstr ""

#: ../source/reference/command/compact.txt:32
# 59fa0e6bf0e74217854a080715d0b613
msgid "Always have an up-to-date backup before performing server maintenance such as the :dbcommand:`compact` operation."
msgstr ""

#: ../source/reference/command/compact.txt:38
# a1e6fea868524f63a69152c05b274581
msgid "paddingFactor"
msgstr ""

#: ../source/reference/command/compact.txt:42
# dc9ecb6be80f452d912e9f6348346637
msgid "The ``paddingFactor`` field takes the following range of values:"
msgstr ""

#: ../source/reference/command/compact.txt:44
# a94feecf3a6945ca96a52c50caf9cbce
msgid "Default: ``1.0``"
msgstr ""

#: ../source/reference/command/compact.txt:46
# e1f56d22b22d431098c516c02d1433b1
msgid "Minimum: ``1.0`` (no padding)"
msgstr ""

#: ../source/reference/command/compact.txt:48
# ec015fdf9ea948ddaaf7144415044cb8
msgid "Maximum: ``4.0``"
msgstr ""

#: ../source/reference/command/compact.txt:50
# 406aea74e0ea4a178cef5eba2d3f829e
msgid "If your updates increase the size of the documents, padding will increase the amount of space allocated to each document and avoid expensive document relocation operations within the data files."
msgstr ""

#: ../source/reference/command/compact.txt:54
# fa57cb85abc14ba6af2a163ccfc002f7
msgid "You can calculate the padding size by subtracting the document size from the record size or, in terms of the ``paddingFactor``, by subtracting ``1`` from the ``paddingFactor``:"
msgstr ""

#: ../source/reference/command/compact.txt:62
# 8fc15011178f404dadf5eaa2506b41d8
msgid "For example, a ``paddingFactor`` of ``1.0`` specifies a padding size of ``0`` whereas a ``paddingFactor`` of ``1.2`` specifies a padding size of ``0.2`` or 20 percent (20%) of the document size."
msgstr ""

#: ../source/reference/command/compact.txt:66
# cc5f66a62b6f4e05ad390de4971815f6
msgid "With the following command, you can use the ``paddingFactor`` option of the :dbcommand:`compact` command to set the record size to ``1.1`` of the document size, or a padding factor of 10 percent (10%):"
msgstr ""

#: ../source/reference/command/compact.txt:74
# d44193c9e9134bf29ee6fd50b19a65b3
msgid ":dbcommand:`compact` compacts existing documents but does not reset ``paddingFactor`` statistics for the collection. After the :dbcommand:`compact` MongoDB will use the existing ``paddingFactor`` when allocating new records for documents in this collection."
msgstr ""

#: ../source/reference/command/compact.txt:82
# 576892b5886a4a92b31d44a81f0e4c53
msgid "paddingBytes"
msgstr ""

#: ../source/reference/command/compact.txt:86
# 8a4c679605874a35b69ddb62da5c09a1
msgid "Specifying ``paddingBytes`` can be useful if your documents start small but then increase in size significantly. For example, if your documents are initially 40 bytes long and you grow them by 1KB, using ``paddingBytes: 1024`` might be reasonable since using ``paddingFactor: 4.0`` would specify a record size of 160 bytes (``4.0`` times the initial document size), which would only provide a padding of 120 bytes (i.e. record size of 160 bytes minus the document size)."
msgstr ""

#: ../source/reference/command/compact.txt:94
# a38bc42995c74d6fadfa83c9f88c5c80
msgid "With the following command, you can use the ``paddingBytes`` option of the :dbcommand:`compact` command to set the padding size to ``100`` bytes on the collection named by ``<collection>``:"
msgstr ""

#: ../source/reference/command/compact.txt:103
# c77f42126e794770b58b6d1e42f05f0e
msgid "Behaviors"
msgstr ""

#: ../source/reference/command/compact.txt:106
# 5376ce5761944a9b8cf561dd065e379d
msgid "Blocking"
msgstr ""

#: ../source/reference/command/compact.txt:108
# f95e8ac0ebfd4a2aba207dd13e6eb549
msgid "In MongoDB 2.2, :dbcommand:`compact` blocks activities only for its database. Prior to 2.2, the command blocked all activities."
msgstr ""

#: ../source/reference/command/compact.txt:111
# b411148ef0cc4fcd9c3f55f13958cb9b
msgid "You may view the intermediate progress either by viewing the :program:`mongod` log file or by running the :method:`db.currentOp()` in another shell instance."
msgstr ""

#: ../source/reference/command/compact.txt:116
# b93963647fcd4271b64dfb964404c910
msgid "Operation Termination"
msgstr ""

#: ../source/reference/command/compact.txt:118
# 4fd1bb70bbba471aafb24524d350dfce
msgid "If you terminate the operation with the :method:`db.killOp() <db.killOp()>` method or restart the server before the :dbcommand:`compact` operation has finished:"
msgstr ""

#: ../source/reference/command/compact.txt:122
# 59deaac48caf42368fba701363f8be62
msgid "If you have journaling enabled, the data remains valid and usable, regardless of the state of the :dbcommand:`compact` operation. You may have to manually rebuild the indexes."
msgstr ""

#: ../source/reference/command/compact.txt:126
# 347e5318d67142d88404f630ec40b319
msgid "If you do not have journaling enabled and the :program:`mongod` or :dbcommand:`compact` terminates during the operation, it is impossible to guarantee that the data is in a valid state."
msgstr ""

#: ../source/reference/command/compact.txt:130
# 6bf45fb6c72546f984e4b61264b80bff
msgid "In either case, much of the existing free space in the collection may become un-reusable. In this scenario, you should rerun the compaction to completion to restore the use of this free space."
msgstr ""

#: ../source/reference/command/compact.txt:135
# 550d3dd831bd47cf98a432dd7e550613
msgid "Disk Space"
msgstr ""

#: ../source/reference/command/compact.txt:137
# 4c468fe0817b48b49d08ffc6b05ca840
msgid ":dbcommand:`compact` generally uses less disk space than :dbcommand:`repairDatabase` and is faster. However, the :dbcommand:`compact` command is still slow and blocks other database use. Only use :dbcommand:`compact` during scheduled maintenance periods."
msgstr ""

#: ../source/reference/command/compact.txt:142
# cfbc00f802ba43cdb7f09590877dd84a
msgid ":dbcommand:`compact` requires up to 2 gigabytes of additional disk space while running. Unlike :dbcommand:`repairDatabase`, :dbcommand:`compact` does *not* free space on the file system."
msgstr ""

#: ../source/reference/command/compact.txt:146
# 9236717463dd4816ba8ee0a4de79b05b
msgid "To see how the storage space changes for the collection, run the :dbcommand:`collStats` command before and after compaction."
msgstr ""

#: ../source/reference/command/compact.txt:150
# 41abf776406347f6a031e7c414473d00
msgid "Size and Number of Data Files"
msgstr ""

#: ../source/reference/command/compact.txt:152
# 38538b3857644b61a4bd09e0c6492095
msgid ":dbcommand:`compact` may increase the total size and number of your data files, especially when run for the first time. However, this will not increase the total collection storage space since storage size is the amount of data allocated within the database files, and not the size/number of the files on the file system."
msgstr ""

#: ../source/reference/command/compact.txt:159
# cf07438acfd747eaa537b495dba0b340
msgid "Replica Sets"
msgstr ""

#: ../source/reference/command/compact.txt:161
# ff38e6471ce04a9db69848a8880bc668
msgid ":dbcommand:`compact` commands do not replicate to secondaries in a :term:`replica set`:"
msgstr ""

#: ../source/reference/command/compact.txt:164
# 57d27ddc43eb42e4bd0028d6572d7e9c
msgid "Compact each member separately."
msgstr ""

#: ../source/reference/command/compact.txt:166
# 09e8a3169bb0403391d4c983daeaeb0f
msgid "Ideally run :dbcommand:`compact` on a secondary. See option ``force:true`` above for information regarding compacting the primary."
msgstr ""

#: ../source/includes/fact-command-puts-secondary-into-recovering.rst:3
# b5f59c9f1d6145d8b5ca3ac0c5fac2f1
msgid "On secondaries, the |cmd-name| command forces the secondary to enter :replstate:`RECOVERING` state. Read operations issued to an instance in the :replstate:`RECOVERING` state will fail.  This prevents clients from reading during the operation. When the operation completes, the secondary returns to:replstate:`SECONDARY` state."
msgstr ""

#: ../source/includes/fact-command-puts-secondary-into-recovering.rst:10
# 88a21cb1e8174272b2d2a56f307b9fed
msgid "See :doc:`/reference/replica-states/` for more information about replica set member states."
msgstr ""

#: ../source/includes/fact-command-puts-secondary-into-recovering.rst:13
# f18529e17b7a412a985244d63ef34c17
msgid "See :doc:`/tutorial/perform-maintence-on-replica-set-members` for an example replica set maintenance procedure to maximize availability during maintenance operations."
msgstr ""

#: ../source/reference/command/compact.txt:173
# 952ab83cbb5448d6882531a543cb7380
msgid "Sharded Clusters"
msgstr ""

#: ../source/reference/command/compact.txt:175
# b7eae6757e9c42ae8fdda18a17bc92b0
msgid ":dbcommand:`compact` is a command issued to a :program:`mongod`. In a sharded environment, run :dbcommand:`compact` on each shard separately as a maintenance operation."
msgstr ""

#: ../source/reference/command/compact.txt:179
# 6801fe8903204c15906321060e56d90b
msgid "You cannot issue :dbcommand:`compact` against a :program:`mongos` instance."
msgstr ""

#: ../source/reference/command/compact.txt:182
# 741b595794164d72b5401f12028f4209
msgid "Capped Collections"
msgstr ""

#: ../source/reference/command/compact.txt:184
# d2ea5d06886d4efaa636e2235c5d3a07
msgid "It is not possible to compact :term:`capped collections <capped collection>` because they don't have padding, and documents cannot grow in these collections. However, the documents of a :term:`capped collection` are not subject to fragmentation."
msgstr ""

#: ../source/reference/command/compact.txt:190
# 5f503a294f5d424db7ef6bf24eec64e9
msgid "Index Building"
msgstr ""

#: ../source/reference/command/compact.txt:194
# b4a07b56e8ad4ff6afbbe60d22fd0815
msgid ":program:`mongod` rebuilds all indexes in parallel following the :dbcommand:`compact` operation."
msgstr ""

