# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/touch.txt:3
# 53e2bb3dfadd4dee9fd8c67d11b2c7a1
msgid "touch"
msgstr ""

#: ../source/reference/command/touch.txt:11
# 4d396428267b47798df25f674b0613e7
msgid "The :dbcommand:`touch` command loads data from the data storage layer into memory. :dbcommand:`touch` can load the data (i.e. documents) indexes or both documents and indexes. Use this command to ensure that a collection, and/or its indexes, are in memory before another operation. By loading the collection or indexes into memory, :program:`mongod` will ideally be able to perform subsequent operations more efficiently. The :dbcommand:`touch` command has the following prototypical form:"
msgstr ""

#: ../source/reference/command/touch.txt:24
# 8772522f057c4ded9f1f5b7b24276b09
msgid "By default, ``data`` and ``index`` are false, and :dbcommand:`touch` will perform no operation. For example, to load both the data and the index for a collection named ``records``, you would use the following command in the :program:`mongo` shell:"
msgstr ""

#: ../source/reference/command/touch.txt:33
# 42f531f5ae904cc292372c43a39de723
msgid ":dbcommand:`touch` will not block read and write operations on a :program:`mongod`, and can run on :term:`secondary` members of replica sets."
msgstr ""

#: ../source/reference/command/touch.txt:39
# 3a1de52a46564652b0b0917b3eaffe8c
msgid "Using :dbcommand:`touch` to control or tweak what a :program:`mongod` stores in memory may displace other records data in memory and hinder performance. Use with caution in production systems."
msgstr ""

#: ../source/reference/command/touch.txt:46
# c9398bc1b8304bff821e459e620cb594
msgid "If you run :dbcommand:`touch` on a secondary, the secondary will enter a ``RECOVERING`` state to prevent clients from sending read operations during the :dbcommand:`touch` operation. When :dbcommand:`touch` finishes the secondary will automatically return to ``SECONDARY`` state.  See :data:`~replSetGetStatus.members.state` for more information on replica set member states."
msgstr ""

