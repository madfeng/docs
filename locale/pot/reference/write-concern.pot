# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/write-concern.txt:6
# eddc063a049a453981309c1a45be1399
msgid "Write Concern Reference"
msgstr ""

#: ../source/reference/write-concern.txt:10
# 0ba868799b644880a0f56250c3806c03
msgid ":doc:`Write concern </core/write-concern>` describes the guarantee that MongoDB provides when reporting on the success of a write operation."
msgstr ""

#: ../source/reference/write-concern.txt:13
# c57816c2aee14ff6a5642d3e54e4daa3
msgid "A new protocol for :ref:`write operations <rel-notes-write-operations>` integrates write concerns with the write operations and eliminates the need to call the :dbcommand:`getLastError` command. Previous versions required a :dbcommand:`getLastError` command immediately after a write operation to specify the write concern."
msgstr ""

#: ../source/reference/write-concern.txt:22
# 1a3e503314af405aa3bdc915600781be
msgid "Read Isolation Behavior"
msgstr ""

#: ../source/includes/fact-write-concern-read-uncommitted.rst:1
# b5919ee4608147e4a0ae27df76993dd0
msgid "MongoDB allows clients to read documents inserted or modified before it commits these modifications to disk, regardless of write concern level or journaling configuration. As a result, applications may observe two classes of behaviors:"
msgstr ""

#: ../source/includes/fact-write-concern-read-uncommitted.rst:6
# f3e4cf4b47a44797a707ea5a71a960f1
msgid "For systems with multiple concurrent readers and writers, MongoDB will allow clients to read the results of a write operation before the write operation returns."
msgstr ""

#: ../source/includes/fact-write-concern-read-uncommitted.rst:10
# 6e074349d8ec4ae3a3874a6ec9fcd186
msgid "If the :program:`mongod` terminates before the journal commits, even if a write returns successfully, queries may have read data that will not exist after the :program:`mongod` restarts."
msgstr ""

#: ../source/includes/fact-write-concern-read-uncommitted.rst:14
# c69959082f5f4679a3a952e3a178bac3
msgid "Other database systems refer to these isolation semantics as *read uncommitted*. For all inserts and updates, MongoDB modifies each document in isolation: clients never see documents in intermediate states. For multi-document operations, MongoDB does not provide any multi-document transactions or isolation."
msgstr ""

#: ../source/includes/fact-write-concern-read-uncommitted.rst:20
# 24eaed154d9c410881d1681865fb01d7
msgid "When :program:`mongod` returns a successful *journaled write concern*, the data is fully committed to disk and will be available after :program:`mongod` restarts."
msgstr ""

#: ../source/includes/fact-write-concern-read-uncommitted.rst:24
# 42a7f13c77804b7cb01f6f2805e341b8
msgid "For replica sets, write operations are durable only after a write replicates and commits to the journal of a majority of the members of the set. MongoDB regularly commits data to the journal regardless of journaled write concern: use the :setting:`~storage.journal.commitIntervalMs` to control how often a :program:`mongod` commits the journal."
msgstr ""

#: ../source/reference/write-concern.txt:27
# 6db8e6f03ba946cb9e408b7153e1d33b
msgid "Available Write Concern"
msgstr ""

#: ../source/reference/write-concern.txt:29
# 2b8dba72c38c4f6baa10f2f724670bb9
msgid "Write concern can include the :ref:`w <wc-w>` option to specify the required number of acknowledgments before returning, the :ref:`j <wc-j>` option to require writes to the journal before returning, and :ref:`wtimeout <wc-wtimeout>` option to specify a time limit to prevent write operations from blocking indefinitely."
msgstr ""

#: ../source/reference/write-concern.txt:35
# 400aca96f9e94cbeb37f018ac156c029
msgid "In sharded clusters, :program:`mongos` instances will pass the write concern on to the shard."
msgstr ""

#: ../source/reference/write-concern.txt:41
# e1c0b055012f459a8232cf9e2ef55b4c
msgid "``w`` Option"
msgstr ""

#: ../source/reference/write-concern.txt:43
# bf0481f74cb148f9b694f22c466dbb85
msgid "The ``w`` option provides the ability to disable write concern entirely *as well as* specify the write concern for :term:`replica sets <replica set>`."
msgstr ""

#: ../source/reference/write-concern.txt:47
# 5d01c580177a4b628043a9e7be4994f7
msgid "MongoDB uses ``w: 1`` as the default write concern. ``w: 1`` provides basic receipt acknowledgment."
msgstr ""

#: ../source/reference/write-concern.txt:50
# eb56b341574848b0abce2be56fb80b84
msgid "The ``w`` option accepts the following values:"
msgstr ""

#: ../source/reference/write-concern.txt:56
# 913dc0d238ac4ffaaaea74e7936be926
msgid "Value"
msgstr ""

#: ../source/reference/write-concern.txt:58
# de0b9edae03f4b83b65c8fd196f66688
msgid "Description"
msgstr ""

#: ../source/reference/write-concern.txt:60
# 32e016d3ddae4b13894c02903df2b44e
msgid "``1``"
msgstr ""

#: ../source/reference/write-concern.txt:62
# a4e400e65c784cc29a1664cb04c48ee2
msgid "Provides acknowledgment of write operations on a standalone :program:`mongod` or the :term:`primary` in a replica set."
msgstr ""

#: ../source/reference/write-concern.txt:65
# 03129d513fca4d61850645f9280a2ac9
msgid "This is the default write concern for MongoDB."
msgstr ""

#: ../source/reference/write-concern.txt:67
# 76d9082a24054db886657afe61632e3b
msgid "``0``"
msgstr ""

#: ../source/reference/write-concern.txt:69
# d2e140c756674f92820c9b3897795430
msgid "Disables basic acknowledgment of write operations, but returns information about socket exceptions and networking errors to the application."
msgstr ""

#: ../source/reference/write-concern.txt:73
# cbfd84f9598c452eba082ede4d0f4432
msgid "If you disable basic write operation acknowledgment but require journal commit acknowledgment, the journal commit prevails, and the server will require that :program:`mongod` acknowledge the write operation."
msgstr ""

#: ../source/reference/write-concern.txt:78
# 025079bc42274cd489d80a7454d19ebf
msgid "<Number greater than 1>"
msgstr ""

#: ../source/reference/write-concern.txt:80
# 8f926c4e89fd493696d2685721fb6fe8
msgid "Guarantees that write operations have propagated successfully to the specified number of replica set members including the primary."
msgstr ""

#: ../source/reference/write-concern.txt:84
# 068f8df53a524d0c85dae288c9edf8c2
msgid "For example, ``w: 2`` indicates acknowledgements from the primary and at least one secondary."
msgstr ""

#: ../source/reference/write-concern.txt:87
# 5a9a1c5f7760402ea87f06692792c474
msgid "If you set ``w`` to a number that is greater than the number of set members that hold data, MongoDB waits for the non-existent members to become available, which means MongoDB blocks indefinitely."
msgstr ""

#: ../source/reference/write-concern.txt:92
# 89c67957ca96463bb16cd7a6e0006347
msgid "``\"majority\"``"
msgstr ""

#: ../source/reference/write-concern.txt:94
# c729438cd77b4fbb8fb164fccecc0b07
msgid "Confirms that write operations have propagated to the majority of configured replica set: a majority of the set's configured members must acknowledge the write operation before it succeeds. This allows you to avoid hard coding assumptions about the size of your replica set into your application."
msgstr ""

#: ../source/includes/fact-master-slave-majority.rst:1
# ea35a4708ac84e1089d150e9f1ce9617
msgid "In :doc:`Master/Slave </core/master-slave>` deployments, MongoDB treats ``w: \"majority\"`` as equivalent to ``w: 1``. In earlier versions of MongoDB, ``w: \"majority\"`` produces an error in :doc:`master/slave </core/master-slave>` deployments."
msgstr ""

#: ../source/reference/write-concern.txt:102
# c28b72567e10407dbb6daf06129d1dc5
msgid "<tag set>"
msgstr ""

#: ../source/reference/write-concern.txt:104
# ebf0a3595abf4d20b4def430d199e7e9
msgid "By specifying a :ref:`tag set <replica-set-configuration-tag-sets>`, you can have fine-grained control over which replica set members must acknowledge a write operation to satisfy the required level of write concern."
msgstr ""

#: ../source/reference/write-concern.txt:112
# de98804046344605bc727ab7eb4f5c4a
msgid "``j`` Option"
msgstr ""

#: ../source/reference/write-concern.txt:114
# 61535ab67be2475e9e450c0b21dbe5ed
msgid "The ``j`` option confirms that the :program:`mongod` instance has written the data to the on-disk journal. This ensures that data is not lost if the :program:`mongod` instance shuts down unexpectedly. Set to ``true`` to enable."
msgstr ""

#: ../source/reference/write-concern.txt:119
# 77273c4311e0492da2614953f94decc0
msgid "Specifying a write concern that includes ``j: true`` to a :program:`mongod` or :program:`mongos` running with :option:`--nojournal` option now errors. Previous versions would ignore the ``j: true``."
msgstr ""

#: ../source/includes/note-write-concern-journaled-replication.rst:1
# 6f2b18822423459ca593b0ae0c7fb136
msgid "Requiring *journaled* write concern in a replica set only requires a journal commit of the write operation to the :term:`primary` of the set regardless of the level of *replica acknowledged* write concern."
msgstr ""

#: ../source/reference/write-concern.txt:130
# 99de9b2b30c24a9a9f4d17a45a91d154
msgid "``wtimeout``"
msgstr ""

#: ../source/reference/write-concern.txt:132
# c0b26fba73cf4abbb02201534656ae57
msgid "This option specifies a time limit, in milliseconds, for the write concern. ``wtimeout`` is only applicable for ``w`` values greater than ``1``."
msgstr ""

#: ../source/reference/write-concern.txt:136
# 589e65a3af904006ab455f3f11ccde1c
msgid "``wtimeout`` causes write operations to return with an error after the specified limit, even if the required write concern is not fulfilled. When these write operations return, MongoDB **does not** undo successful data modifications performed before the write concern exceeded the ``wtimeout`` time limit."
msgstr ""

#: ../source/reference/write-concern.txt:142
# 2889777819e341a9912ee920a68f54f4
msgid "If you do not specify the ``wtimeout`` option and the level of write concern is unachievable, the write operation will block indefinitely. Specifying a ``wtimeout`` value of ``0`` is equivalent to a write concern without the ``wtimeout`` option."
msgstr ""

#: ../source/reference/write-concern.txt:147
# 2e9b44258ae44a5abc5e3eeef01896c8
msgid ":doc:`Write Concern Introduction </core/write-concern>` and :ref:`Write Concern for Replica Sets <replica-set-write-concern>`."
msgstr ""

