# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
# 6a1bde624e90426a8a9a29ab97a6c96d
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:12
# d0912f7bb1004ef6a491419174cc7a38
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:16
# 6243232f3fbe458d8c3c53711ba7e800
msgid "Modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option. The :method:`~db.collection.findAndModify()` method is a shell helper around the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:23
# bb1e6feb1193425caa7aa9ea22bd501e
msgid "The :method:`~db.collection.findAndModify()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:38
# 1e48761448d4444298255ce59d8e99bf
msgid "The :method:`db.collection.findAndModify()` method takes a document parameter with the following subdocument fields:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:46
# 865ca50a41c94e5d815d432700a320e7
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:48
# d85ae472f77145a08f3f3e1a58508850
msgid "The :method:`~db.collection.findAndModify()` method returns either: the pre-modification document or, if ``new: true`` is set, the modified document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:54
# 3670425af1aa4aa8961fe696d86af75d
msgid "If the query finds no document for ``update`` or ``remove`` operations, :method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:58
# aac0ee136ef24d41a4e207e6bfca6c86
msgid "If the query finds no document for an ``update`` with an ``upsert`` operation, :method:`~db.collection.findAndModify()` creates a new document. If ``new`` is ``false``, **and** the ``sort`` option is **NOT** specified, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:63
# e75300fb2db548878d9fe73dfdc31271
msgid "If the query finds no document for an ``update`` with an ``upsert`` operation, :method:`~db.collection.findAndModify()` creates a new document. If ``new`` is ``false``, **and** a ``sort`` option, the method returns an empty document ``{}``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:69
# a74834a4f9e5431d9fcdf954b434a2f4
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:74
# 66ba7afeaf864ff694ff43f2733e6b1c
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:76
# d5c0dc5c4da04d468d64af4ad579129b
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances. For instance, if multiple clients each invoke the method with the same ``query`` condition and these methods complete the ``find`` phase before any of methods perform the ``modify`` phase, these methods could result in the insertion of the same document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:84
# c3d7209d5bee40ee9bd7e587380c4325
msgid "In the following example, no document with the name ``Andy`` exists, and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:96
# eb9805c61cb647718a22fb2ada6f9fb8
msgid "Then, if these clients' :method:`~db.collection.findAndModify()` methods finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert. To prevent this condition, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, the multiple methods would observe one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:104
# ba85ec5e2a014cae9359e3b6fff49dac
msgid "Exactly one :method:`~db.collection.findAndModify()` would successfully insert a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:107
# b1b0da5c25e44c0ca4bc84752cad2514
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would update the newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:110
# 1c00ca0e64534a67bf13bd3c235d82f7
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would fail when they attempted to insert a duplicate. If the method fails due to a unique index constraint violation, you can retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:117
# 48539d75699c4970ab896cff2ff02b07
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:119
# 99f0e9ad6dcc40cb99b70ab8db8931ed
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` **must** contain the :term:`shard key` for all operations against the shard cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:123
# 96da5463041748f99442ddd2e3a63e66
msgid ":dbcommand:`findAndModify` operations issued against :program:`mongos` instances for *non-sharded* collections function normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:129
# 304045dc552c4f1aa816552e1b639d33
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
# 05a6240b8acc4f4e95bc570a53d72ba0
msgid "When updating a document, |operation| and the :method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
# 7f72de5d17eb44c9992c82c7f83fdf18
msgid "By default, both operations modify a single document. However, the :method:`~db.collection.update()` method with its ``multi`` option can modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
# 72baea0f18a7433397a645732c85c834
msgid "If multiple documents match the update criteria, for |operation|, you can specify a ``sort`` to provide some measure of control on which document to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
# d5947f94282b487a9457fe047693280e
msgid "With the default behavior of the :method:`~db.collection.update()` method, you cannot specify which single document to update when multiple documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
# dd165424699b4d709742f625efee54ea
msgid "By default, |operation| method returns |return-object|. To obtain the updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
# db5c1f77100741b49d669526eecdd8f0
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. To return the updated document, use the :method:`~db.collection.find()` method. However, other updates may have modified the document between your update and the document retrieval. Also, if the update modified only a single document but multiple documents matched, you will need to use additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
# 3f329aaacb9247379da22c2aaafdc917
msgid "You cannot specify a :doc:`write concern </core/write-concern>` to |operation| to override the default write concern whereas, starting in MongoDB 2.6, you can specify a write concern to the :method:`~db.collection.update()` method."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:32
# ed235b015360487783dab6061266f050
msgid "When modifying a *single* document, both |operation| and the :method:`~db.collection.update()` method *atomically* update the document. See :doc:`/tutorial/isolate-sequence-of-operations` for more details about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:137
# 7a89df4b6a564f4e89cb3ed4e16a4c9f
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:140
# 9e6a3da44e3c46098192a3176e9e3b7d
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:142
# 0e8245f0eaa946159cd572ff7a31d56f
msgid "The following method updates and returns an existing document in the people collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:153
# f97b94d210fc417eb73288210af0fe4a
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:155
# 98fbcf49811047b7b468d4d9371e0e9f
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:160
# c7f6c1153b7545efafb92a6ae4204ac1
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the method will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:165
# 9f44bd3193674b439fa570bb3fd2273a
msgid "The update :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:168
# db34ff23549f41498f85b1e1b7983410
msgid "The method returns the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:181
# ddee5cff27564bb78e2c38f3f6950152
msgid "To return the modified document, add the ``new:true`` option to the method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:184
# 49a1f472916b420f9eb115e95dbaf7f1
msgid "If no document matched the ``query`` condition, the method returns ``null``:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:192
# 6843231292be4f4896abc768dfdabda2
msgid "Upsert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:194
# 088602c7725b467794f5e27cfabb4e04
msgid "The following method includes the ``upsert: true`` option for the ``update`` operation to either update a matching document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:208
# 6456f57c99aa45fc98008759b28c6a6f
msgid "If the method finds a matching document, the method performs an update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:210
# 124060653a8c410fa0a1e65f164bc88d
msgid "If the method does **not** find a matching document, the method creates a new document. Because the method included the ``sort`` option, it returns an empty document ``{ }`` as the original (pre-modification) document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:219
# c91b397c5f6743fa911f84e5636db756
msgid "If the method did **not** include a ``sort`` option, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:227
# 99778062c7f348968847d70de8f56807
msgid "Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:229
# 89207a2f0dfb4754b6b218ffb28cd948
msgid "The following method includes both the ``upsert: true`` option and the ``new:true`` option. The method either updates a matching document and returns the updated document or, if no matching document exists, inserts a document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:235
# 5fdf35c800734b209829f0369ea32058
msgid "In the following example, no document in the ``people`` collection matches the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:248
# 4cf21bf891344ff3a96656a702e3c66a
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:263
# 258fb9e2f6f44b9da916788dec4a5a1f
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:265
# f8750f7d4b9945509c4a88636ba1667d
msgid "By including a ``sort`` specification on the ``rating`` field, the following example removes from the ``people`` collection a single document with the ``state`` value of ``active`` and the lowest ``rating`` among the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:280
# aa63e9da54fd4e55979771847d8c38d7
msgid "The method returns the deleted document:"
msgstr ""

