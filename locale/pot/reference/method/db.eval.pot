# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.eval.txt:3
# 626285137a4d46b78bf43cf285cf7da7
msgid "db.eval()"
msgstr ""

#: ../source/reference/method/db.eval.txt:11
# f6ad2ec3e43f4d5e8c34887d9e23fbe4
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.eval.txt:15
# a2505ea6ee874e9b90d5b104c12ca038
msgid "Provides the ability to run JavaScript code on the MongoDB server."
msgstr ""

#: ../source/includes/fact-eval-helper-method.rst:1
# 438065f5e5ef46049e396e04bebec237
msgid "The helper :method:`db.eval()` in the :program:`mongo` shell wraps the :dbcommand:`eval` command. Therefore, the helper method shares the characteristics and behavior of the underlying command with *one exception*: :method:`db.eval()` method does not support the ``nolock`` option."
msgstr ""

#: ../source/reference/method/db.eval.txt:21
# 65ef1eedf26c474e855bd5d4c47fa4d5
msgid "The method accepts the following parameters:"
msgstr ""

#: ../source/reference/method/db.eval.txt:25
# 67c248de184644f6bfeb6bb11a1c1832
msgid "The JavaScript function need not take any arguments, as in the first example, or may optionally take arguments as in the second:"
msgstr ""

#: ../source/reference/method/db.eval.txt:41
# c8bca5f54a1e4ec08d840d9643769a72
msgid "Behavior"
msgstr ""

#: ../source/includes/admonitions-eval.rst:5
# 564700dc7f1c42c2aefaec1d8b6360a6
msgid "Write Lock"
msgstr ""

#: ../source/includes/fact-eval-lock.rst:1
# c0aff0103e9b42a09de7d45d3d6240a6
msgid "By default, |object| takes a global write lock while evaluating the JavaScript function. As a result, |object| blocks all other read and write operations to the database while the |object| operation runs."
msgstr ""

#: ../source/includes/fact-eval-lock.rst:5
# d0eb95bd636f475f8f4ce58685b6ba04
msgid "To prevent the taking of the global write lock while evaluating the JavaScript code, use the |nolockobject| with ``nolock`` set to ``true``. ``nolock`` does not impact whether the operations within the JavaScript code take write locks."
msgstr ""

#: ../source/includes/admonitions-eval.rst:9
# e9506c03e1ef4c11afa244f32e643430
msgid "For long running |object| operation, consider using either the :command:`eval` command with ``nolock: true`` or using :doc:`other server side code execution options </core/server-side-javascript>`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:14
# e6e10081cd59407c9e617cd2cf0d85fb
msgid "Sharded Data"
msgstr ""

#: ../source/includes/admonitions-eval.rst:16
# c9f0b8b4830040d0a84aa97f052b954d
msgid "You can not use |object| with :term:`sharded <sharding>` collections. In general, you should avoid using |object| in :term:`sharded clusters <sharded cluster>`; nevertheless, it is possible to use |object| with non-sharded collections and databases stored in a :term:`sharded cluster`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:23
# 6b981ddb8a654a539f7e311056f06bd0
msgid "Access Control"
msgstr ""

#: ../source/includes/access-eval.rst:3
# 58b0fe00f88a4ee08c6d0c0e9f5ed8fe
msgid "If authorization is enabled, you must have access to all actions on all resources in order to run |eval-object|. Providing such access is not recommended, but if your organization requires a user to run |eval-object|, create a role that grants :authaction:`anyAction` on :ref:`resource-anyresource`. Do not assign this role to any other user."
msgstr ""

#: ../source/includes/admonitions-eval.rst:30
# 87eec6dd02c34bf0979acc77c332dfd5
msgid "JavaScript Engine"
msgstr ""

#: ../source/includes/admonitions-eval.rst:34
# 30be1a80c153459ca4ad15c37d3af81a
msgid "The V8 JavaScript engine, which became the default in 2.4, allows multiple JavaScript operations to execute at the same time. Prior to 2.4, |object| executed in a single thread."
msgstr ""

#: ../source/reference/method/db.eval.txt:49
# 730eb9a2da2747f09b96b26dfef8a529
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.eval.txt:51
# be18196cd7e44b4b9987734266faf3c0
msgid "The following is an example of the :method:`db.eval()` method:"
msgstr ""

#: ../source/reference/method/db.eval.txt:56
# 33f8fc65769e4662b14a4210a1ab6dc6
msgid "The ``db`` in the function refers to the current database."
msgstr ""

#: ../source/reference/method/db.eval.txt:58
# 05ebb489822744cbb06733c04f0bd457
msgid "``\"eliot\"`` is the argument passed to the function, and corresponds to the ``name`` argument."
msgstr ""

#: ../source/reference/method/db.eval.txt:61
# fae9aaf62a8341ec82d169ea4d66edeb
msgid "``5`` is an argument to the function and corresponds to the ``incAmount`` field."
msgstr ""

#: ../source/reference/method/db.eval.txt:64
# 844bd8d72bbf4f7988ee27ab4842bf8e
msgid "If you want to use the server's interpreter, you must run :method:`db.eval()`. Otherwise, the :program:`mongo` shell's JavaScript interpreter evaluates functions entered directly into the shell."
msgstr ""

#: ../source/reference/method/db.eval.txt:68
# 9695317f9da34d8591526f112bb81a39
msgid "If an error occurs, :method:`db.eval()` throws an exception. The following is an example of an invalid function that uses the variable ``x`` without declaring it as an argument:"
msgstr ""

#: ../source/reference/method/db.eval.txt:76
# 8a05f6e61bdb4e9d95b740f0374ed71b
msgid "The statement results in the following exception:"
msgstr ""

#: ../source/reference/method/db.eval.txt:88
# 0a0ca84b0ae840e08a625c2e8d4f9d42
msgid ":doc:`/core/server-side-javascript`"
msgstr ""

