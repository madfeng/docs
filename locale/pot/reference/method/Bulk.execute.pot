# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/Bulk.execute.txt:3
# 511462eb46a44523b5cc6f2a4e9bff31
msgid "Bulk.execute()"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:8
# 937a00c28eab464686896a90291e0b79
msgid "Description"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:14
# dee5bdf8c018478e89fd378abc932a0a
msgid "Executes the list of operations built by the :method:`Bulk()` operations builder."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:17
# 405cb8e285ec411c9083840fc7691f6d
msgid ":method:`Bulk.execute()` accepts the following parameter:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:21
# 8933356630bf4dcf8b8486dcc4eba3ee
msgid "A :method:`BulkWriteResult` object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:24
# fc0511bac76a4cd7933d7adb2de9d6bb
msgid "After execution, you cannot re-execute the :method:`Bulk()` object without reinitializing. See :method:`db.collection.initializeUnorderedBulkOp()` and :method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:32
# 77de91d179dd4fb1b6d821d068c89694
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:35
# c61131ab09ab4796a82e1d94d46e94cb
msgid "Ordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
# f39f3382164648ceb3d864286f4801b2
msgid "When executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB groups the operations by the :data:`operation type <batchType>` and contiguity; i.e. *contiguous* operations of the same type are grouped together. For example, if an ordered list has two insert operations followed by an update operation followed by another insert operation, MongoDB groups the operations into three separate groups: first group contains the two insert operations, second group contains the update operation, and the third group contains the last insert operation. This behavior is subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
#: ../source/includes/fact-bulk-operation-batches.rst:1
# 158458160ae94fb298b8590d99c2da53
# c926e2328c3d4cb4ac224d924e3f45f5
msgid "Each group of operations can have at most :limit:`1000 operations <Write Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write Command Operation Limit Size>`, MongoDB will divide the group into smaller groups of 1000 or less. For example, if the bulk operations list consists of 2000 insert operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
#: ../source/includes/fact-bulk-operation-batches.rst:7
# baff7e191adc4553b47e3853738f4510
# cc16ecec9a7a466b82b8e4c203d0aad1
msgid "The sizes and grouping mechanics are internal performance details and are subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
#: ../source/includes/fact-bulk-operation-batches.rst:10
# cdc6c522e3aa42d989fa67b79da035c7
# 484d007b634144bf89f4b3b53df78e91
msgid "To see how the operations are grouped for a bulk operation execution, call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
# 58d0ca8af8274948b8029b51fa75c9c0
msgid "Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations on a sharded collection will generally be slower than executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:44
# 8f488ad641844f1da1cc103c250bc7df
msgid "Unordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-unordered-list.rst:1
# 56b5d51db7104162b7f139a84c1e6d7b
msgid "When executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB groups the operations. With an unordered bulk operation, the operations in the list may be reordered to increase performance. As such, applications should not depend on the ordering when performing :method:`unordered <db.collection.initializeUnorderedBulkOp()>` bulk operations."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:51
# 26e12918b687468b8683697b93b061c7
msgid "Example"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:53
# f6268f81523445f5bf5943b4d0ad932f
msgid "The following initializes a :method:`Bulk()` operations builder on the ``items`` collection, adds a series of insert operations, and executes the operations:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:66
# f7b9c911a2c74cc2a004ac082f690833
msgid "The operation returns the following :method:`BulkWriteResult()` object:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:81
# d3db9da6f9fc4e399736945aaf0b53f4
msgid "For details on the return object, see :method:`BulkWriteResult()`. For details on the batches executed, see :method:`Bulk.getOperations()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:0
# 058796a6b0ae4469b410313791e7d849
msgid "See"
msgstr ""

