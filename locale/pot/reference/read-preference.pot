# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/read-preference.txt:3
# 30357592f04748929aa1fb40547dbf50
msgid "Read Preference Reference"
msgstr ""

#: ../source/includes/introduction-read-preference.rst:1
# 2bd2970bc0404ff4bc90ef5d3955bfe2
msgid "Read preference describes how MongoDB clients route read operations to members of a :term:`replica set`."
msgstr ""

#: ../source/includes/introduction-read-preference.rst:4
# e4352193eeaa45cea1da63997c98c066
msgid "By default, an application directs its read operations to the :term:`primary` member in a :term:`replica set`. Reading from the primary guarantees that read operations reflect the latest version of a document. However, by distributing some or all reads to secondary members of the replica set, you can improve read throughput or reduce latency for an application that does not require fully up-to-date data."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:5
# a6240075a96b48a6b0b066aa2d4760cb
msgid "Read Preference Mode"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:6
# b125a347a4d74c58968ea00961b2342b
msgid "Description"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:7
# 53e466f39cc94212aec63e319a38b463
msgid ":readmode:`primary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:8
# e05f3ffa5f104528ac910185d32b8917
msgid "Default mode. All operations read from the current replica set :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:10
# f8f99fd2f15f4379abb9e395a5acade5
msgid ":readmode:`primaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:11
# c1c5c1248e4549ec962c2ce90379511e
msgid "In most situations, operations read from the :term:`primary` but if it is unavailable, operations read from :term:`secondary` members."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:14
# f2e5a6bef37f402dab8de89d8f21ef52
msgid ":readmode:`secondary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:15
# 390aef45959e48acbb7b2a1ec41e217e
msgid "All operations read from the :term:`secondary` members of the replica set."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:17
# a7b0794bfc6c47dfa709f884a677a41a
msgid ":readmode:`secondaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:18
# dce31ae65cb64598939b422dbd388c56
msgid "In most situations, operations read from :term:`secondary` members but if no :term:`secondary` members are available, operations read from the :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:21
# 6db7496fe6724e64bb6de5e477d21d41
msgid ":readmode:`nearest`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:22
# 4fe02d16ef0641218f774fa4bc9dc4df
msgid "Operations read from member of the :term:`replica set` with the least network latency, irrespective of the member's type."
msgstr ""

#: ../source/reference/read-preference.txt:17
# f33d68018fa841b18ce27d77d96d1465
msgid "Read Preference Modes"
msgstr ""

#: ../source/reference/read-preference.txt:21
# 03f413155aef4e12a50cb1bd0600e560
msgid "All read operations use only the current replica set :term:`primary`. This is the default. If the primary is unavailable, read operations produce an error or throw an exception."
msgstr ""

#: ../source/reference/read-preference.txt:25
# 8dba00193c03446b80b14e315f2ef340
msgid "The :readmode:`primary` read preference mode is not compatible with read preference modes that use :ref:`tag sets <replica-set-read-preference-tag-sets>`. If you specify a tag set with :readmode:`primary`, the driver will produce an error."
msgstr ""

#: ../source/reference/read-preference.txt:32
# 29e1cf85a44e47088d84fc04f9ecdf1b
msgid "In most situations, operations read from the :term:`primary` member of the set. However, if the primary is unavailable, as is the case during :term:`failover` situations, operations read from secondary members."
msgstr ""

#: ../source/reference/read-preference.txt:37
# 59ad9f3a2d6244c186ca6635f6ecd386
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client reads first from the primary, if available, and then from :term:`secondaries <secondary>` that match the specified tags. If no secondaries have matching tags, the read operation produces an error."
msgstr ""

#: ../source/reference/read-preference.txt:43
# e6190081c1e94445aea65c1b1e1820bb
msgid "Since the application may receive data from a secondary, read operations using the :readmode:`primaryPreferred` mode may return stale data in some situations."
msgstr ""

#: ../source/reference/read-preference.txt:49
# 40cc81dc3f614fc9b57209610cba18c7
msgid ":program:`mongos` added full support for read preferences."
msgstr ""

#: ../source/reference/read-preference.txt:52
# 3689834f34824863974d8e953e49ac4e
msgid "When connecting to a :program:`mongos` instance older than 2.2, using a client that supports read preference modes, :readmode:`primaryPreferred` will send queries to secondaries."
msgstr ""

#: ../source/reference/read-preference.txt:58
# be23084b4fcb4dd9b38fb1a3d4d92997
msgid "Operations read *only* from the :term:`secondary` members of the set. If no secondaries are available, then this read operation produces an error or exception."
msgstr ""

#: ../source/reference/read-preference.txt:62
# c0a77cdeaaa64b4883793da1a4242b3d
msgid "Most sets have at least one secondary, but there are situations where there may be no available secondary. For example, a set with a primary, a secondary, and an :term:`arbiter` may not have any secondaries if a member is in recovering state or unavailable."
msgstr ""

#: ../source/reference/read-preference.txt:67
# bf929406d0f44da4b0974651ee52cde4
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find secondary members that match the specified tag set and directs reads to a random secondary from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`. If no secondaries have matching tags, the read operation produces an error. [#capacity-planning]_"
msgstr ""

#: ../source/reference/read-preference.txt:75
# 92f3420156ee4c348fbe6c40a3146338
msgid "Read operations using the :readmode:`secondary` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:79
# be6703ada36f446b900b6a79eaa2777d
msgid "In most situations, operations read from :term:`secondary` members, but in situations where the set consists of a single :term:`primary` (and no other members), the read operation will use the set's primary."
msgstr ""

#: ../source/reference/read-preference.txt:84
# 15733e84a5de42d3bd166bde621a1c22
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find a secondary member that matches the specified tag set and directs reads to a random secondary from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`. If no secondaries have matching tags, the client ignores tags and reads from the primary."
msgstr ""

#: ../source/reference/read-preference.txt:91
# f0965651050244208bf5d4cc73a65627
msgid "Read operations using the :readmode:`secondaryPreferred` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:96
# 1e205d55f4d24650a6a7eb8e13a5d03d
msgid "The driver reads from the *nearest* member of the :term:`set <replica set>` according to the :ref:`member selection <replica-set-read-preference-behavior-nearest>` process. Reads in the :readmode:`nearest` mode do not consider the member's *type*. Reads in :readmode:`nearest` mode may read from both primaries and secondaries."
msgstr ""

#: ../source/reference/read-preference.txt:103
# aa2bac2d9a3c472fb3c6925f02063874
msgid "Set this mode to minimize the effect of network latency on read operations without preference for current or stale data."
msgstr ""

#: ../source/reference/read-preference.txt:106
# 3b942ec359a94345bf7cb548fadf1454
msgid "If you specify a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find a replica set member that matches the specified tag set and directs reads to an arbitrary member from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`."
msgstr ""

#: ../source/reference/read-preference.txt:112
# 04feeedd0d2340d1aaff12cd255aef22
msgid "Read operations using the :readmode:`nearest` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:117
# 262ff424de6f4292a9c8f58695feea50
msgid "All operations read from a member of the nearest group of the replica set that matches the specified read preference mode. The :readmode:`nearest` mode prefers low latency reads over a member's :term:`primary` or :term:`secondary` status."
msgstr ""

#: ../source/reference/read-preference.txt:122
# b13f890f9d234c0aad170f43c3a44a27
msgid "For :readmode:`nearest`, the client assembles a list of acceptable hosts based on tag set and then narrows that list to the host with the shortest ping time and all other members of the set that are within the \"local threshold,\" or acceptable latency. See :ref:`replica-set-read-preference-behavior-nearest` for more information."
msgstr ""

#: ../source/reference/read-preference.txt:129
# f30edb49e36f4347aa795e1544629346
msgid "If your set has more than one secondary, and you use the :readmode:`secondary` read preference mode, consider the following effect. If you have a :ref:`three member replica set <replica-set-three-members>` with a primary and two secondaries, and if one secondary becomes unavailable, all :readmode:`secondary` queries must target the remaining secondary. This will double the load on this secondary. Plan and provide capacity to support this as needed."
msgstr ""

#: ../source/reference/read-preference.txt:139
# b8bc76a4db494ea0a44897929f556481
msgid "Use Cases"
msgstr ""

#: ../source/reference/read-preference.txt:141
# fc993739a6fa4457862bdb83535c9c78
msgid "Depending on the requirements of an application, you can configure different applications to use different read preferences, or use different read preferences for different queries in the same application. Consider the following applications for different read preference strategies."
msgstr ""

#: ../source/reference/read-preference.txt:148
# 0db9dcbb00044c3d92ce7ecb7068a175
msgid "Maximize Consistency"
msgstr ""

#: ../source/reference/read-preference.txt:150
# ae3e074aad26495785f6967790d271bb
msgid "To avoid *stale* reads under all circumstances, use :readmode:`primary`. This prevents all queries when the set has no :term:`primary`, which happens during elections, or when a majority of the replica set is not accessible."
msgstr ""

#: ../source/reference/read-preference.txt:156
# 7962e9eedef64c429a38d1f467462925
msgid "Maximize Availability"
msgstr ""

#: ../source/reference/read-preference.txt:158
# 9c56ea0a941840d1ac125c0fe6b8c026
msgid "To permit read operations when possible, Use :readmode:`primaryPreferred`. When there's a primary you will get consistent reads, but if there is no primary you can still query :term:`secondaries <secondary>`."
msgstr ""

#: ../source/reference/read-preference.txt:164
# f94e25865a6c47a8afd54b702d8fc48a
msgid "Minimize Latency"
msgstr ""

#: ../source/reference/read-preference.txt:166
# 0c16a0382a864df19ce83bbb6454bcd0
msgid "To always read from a low-latency node, use :readmode:`nearest`. The driver or :program:`mongos` will read from the nearest member and those no more than 15 milliseconds [#secondary-acceptable-latency]_ further away than the nearest member."
msgstr ""

#: ../source/reference/read-preference.txt:171
# c26e65b2915a407889ecf45f5e194c1b
msgid ":readmode:`nearest` does *not* guarantee consistency. If the nearest member to your application server is a secondary with some replication lag, queries could return stale data. :readmode:`nearest` only reflects network distance and does not reflect I/O or CPU load."
msgstr ""

#: ../source/reference/read-preference.txt:176
# d95cd17e78794806a5dfea9875e41777
msgid "This threshold is configurable. See :setting:`~replication.localPingThresholdMs` for :program:`mongos` or your driver documentation for the appropriate setting."
msgstr ""

#: ../source/reference/read-preference.txt:182
# 1e8b5ecb7d714826bd0d86eac32a4bda
msgid "Query From Geographically Distributed Members"
msgstr ""

#: ../source/reference/read-preference.txt:184
# e3ef39bbcb47410a92c41827f04d2d7c
msgid "If the members of a replica set are geographically distributed, you can create replica tags based that reflect the location of the instance and then configure your application to query the members nearby."
msgstr ""

#: ../source/reference/read-preference.txt:188
# e1b9e2b778f942c999349583f1a3c5c8
msgid "For example, if members in \"east\" and \"west\" data centers are :ref:`tagged <replica-set-configuration-tag-sets>` ``{'dc': 'east'}`` and ``{'dc': 'west'}``, your application servers in the east data center can read from nearby members with the following read preference:"
msgstr ""

#: ../source/reference/read-preference.txt:198
# 228590b556084e4ba9d166eeea1bf606
msgid "Although :readmode:`nearest` already favors members with low network latency, including the tag makes the choice more predictable."
msgstr ""

#: ../source/reference/read-preference.txt:202
# 5354a158f1544f6c8ca2dd1b7bbe58b6
msgid "Reduce load on the primary"
msgstr ""

#: ../source/reference/read-preference.txt:204
# 40818009245b4a1fa8d54222cc25ea98
msgid "To shift read load from the primary, use mode :readmode:`secondary`. Although :readmode:`secondaryPreferred` is tempting for this use case, it carries some risk: if all secondaries are unavailable and your set has enough :term:`arbiters <arbiter>` to prevent the primary from stepping down, then the primary will receive all traffic from clients. If the primary is unable to handle this load, queries will compete with writes. For this reason, use :readmode:`secondary` to distribute read load to replica sets, not :readmode:`secondaryPreferred`."
msgstr ""

#: ../source/reference/read-preference.txt:214
# 1c183c7f83254812bb6d3b98da1bdb90
msgid "Read Preferences for Database Commands"
msgstr ""

#: ../source/reference/read-preference.txt:216
# ef5489348666477188c6f203e88b44bd
msgid "Because some :term:`database commands <database command>` read and return data from the database, all of the official drivers support full :ref:`read preference mode semantics <replica-set-read-preference-modes>` for the following commands:"
msgstr ""

#: ../source/reference/read-preference.txt:221
# 84c6963964414c8ab800a622d41c1930
msgid ":dbcommand:`group`"
msgstr ""

#: ../source/reference/read-preference.txt:222
# d6d70207ed3a4aa29686a870a0288832
msgid ":dbcommand:`mapReduce` [#inline-map-reduce]_"
msgstr ""

#: ../source/reference/read-preference.txt:223
# d5fd3faecc2145ad990413f92bdb91d3
msgid ":dbcommand:`aggregate` [#aggregation-out]_"
msgstr ""

#: ../source/reference/read-preference.txt:224
# d7c0abb8ed374c5ab366bd062ed9205e
msgid ":dbcommand:`collStats`"
msgstr ""

#: ../source/reference/read-preference.txt:225
# 2ed8faf317cd4528b7564cea136b8818
msgid ":dbcommand:`dbStats`"
msgstr ""

#: ../source/reference/read-preference.txt:226
# 3e0492d0cdf94ca7af62a9cf7c387889
msgid ":dbcommand:`count`"
msgstr ""

#: ../source/reference/read-preference.txt:227
# 99f39f04b80a447bb7cbd0460f0be67c
msgid ":dbcommand:`distinct`"
msgstr ""

#: ../source/reference/read-preference.txt:228
# 6451afd5b25e4904bb24172ec25a5f63
msgid ":dbcommand:`geoNear`"
msgstr ""

#: ../source/reference/read-preference.txt:229
# 83d8e642bc864e7481c8a0ad67876bca
msgid ":dbcommand:`geoSearch`"
msgstr ""

#: ../source/reference/read-preference.txt:230
# ecdfc6fdd9cc4d6ea908c220de6bf845
msgid ":dbcommand:`geoWalk`"
msgstr ""

#: ../source/reference/read-preference.txt:231
# 3ccf23d7f665408e9dd1f9924fdb1ce6
msgid ":dbcommand:`parallelCollectionScan`"
msgstr ""

#: ../source/reference/read-preference.txt:233
# 8cd84e855247412792d7d628fe854cff
msgid ":program:`mongos` adds support for routing commands to shards using read preferences. Previously :program:`mongos` sent all commands to shards' primaries."
msgstr ""

#: ../source/reference/read-preference.txt:238
# 70dd107f1fe345fa88bff84890e57189
msgid "Only \"inline\" :dbcommand:`mapReduce` operations that do not write data support read preference, otherwise these operations must run on the :term:`primary` members."
msgstr ""

#: ../source/reference/read-preference.txt:243
# 4d199cf6149f462fa3209e6c2b649b2d
msgid "Using the ``$out`` pipeline operator forces the aggregation pipeline to run on the primary."
msgstr ""

#: ../source/reference/read-preference.txt:11
#: ../source/reference/read-preference.txt:13
# bbb4750b13d445a7a27bdf93396adf0e
# a9b682f0ba554b5f975e7f181194486b
msgid "read preference"
msgstr ""

#: ../source/reference/read-preference.txt:11
# bbb4750b13d445a7a27bdf93396adf0e
msgid "semantics"
msgstr ""

#: ../source/reference/read-preference.txt:13
# a9b682f0ba554b5f975e7f181194486b
msgid "modes"
msgstr ""

