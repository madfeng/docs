# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/setIsSubset.txt:3
# 9add4b3eee674fb4ac98d6be090e816c
msgid "$setIsSubset (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:11
# f58e17667aaa43caa948f2e5f656c609
msgid "Takes two arrays and returns ``true`` when the first array is a subset of the second, including when the first array equals the second array, and ``false`` otherwise."
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:15
# 56cc247740af49ab8dd36bd047959d19
msgid ":expression:`$setIsSubset` has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:21
# bd4ab2786ad3464a9e34e494ddabb261
msgid "The arguments can be any valid :ref:`expression <aggregation-expressions>` as long as they each resolve to an array. For more information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:27
# eb05405253224335b97582339d764164
msgid "Behavior"
msgstr ""

#: ../source/includes/important-set-operator-semantics.rst:3
# 9cb9e8e6cc394b8c93b2bf9286c79501
msgid "|set-operator-name| performs set operation on arrays, treating arrays as sets. If an array contains duplicate entries, |set-operator-name| ignores the duplicate entries. |set-operator-name| ignores the order of the elements."
msgstr ""

#: ../source/includes/fact-agg-top-level-expressions.rst:1
# edf66457675740f4b9ad8e51fb18a3c8
msgid "If a set contains a nested array element, |exp| does *not* descend into the nested array but evaluates the array at top-level."
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:42
#: ../source/reference/operator/aggregation/setIsSubset.txt:61
# d6a883e9d34b46059827771e896e2896
# 9a725347b83e4f1aa45950ce41f82b8a
msgid "Example"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:46
# 136f2e3302844ab390ded75776c4cffd
msgid "Result"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:48
# 7fcbaadee2be44d2ae6260462a8071f2
msgid "``{ $setIsSubset: [ [ \"a\", \"b\", \"a\" ], [ \"b\", \"a\" ] ] }``"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:52
# d1c674f472454664b1a72513396d61a0
msgid "``true``"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:54
# 6af463e5da604c99a4b7899718bfde48
msgid "``{ $setIsSubset: [ [ \"a\", \"b\" ], [ [ \"a\", \"b\" ] ] ] }``"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:58
# 0494199e89604a48a3edd296046f271a
msgid "``false``"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:63
# 97c2b4f6173c4314a99f2d094abcda96
msgid "Consider an ``experiments`` collection with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:77
# f9eb666b6b3f4d55b6d2c1e5108bb778
msgid "The following operation uses the :expression:`$setIsSubset` operator to determine if the ``A`` array is a subset of the ``B`` array:"
msgstr ""

#: ../source/reference/operator/aggregation/setIsSubset.txt:89
# 61ba719305564e2c81a46e4674a3eeb1
msgid "The operation returns the following results:"
msgstr ""

