# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation.txt:8
# a9d9c3b156c74d6788b12a808ae823a0
msgid "Aggregation Pipeline Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:15
# 2c495ac3e45a4a0aa8a3cca8604d4852
msgid "Stage Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:17
# 7ad1c4b44f6648219ec41e911971ac58
msgid "Pipeline stages appear in an array. Documents pass through the stages in sequence."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:2
# fb8794e7358a4ac68d48c69019c01152
msgid "Name"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:2
# f70b79a7ed7941c899871f5ff97c37a1
msgid "Description"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:4
# 3677a15a9d60438abf8531e78e431de5
msgid ":pipeline:`$project`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:4
# 16ab08a3059649b68cb54372fe4552b8
msgid "Reshapes each document in the stream, such as by adding new fields or removing existing fields. For each input document, outputs one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:9
# 5873ef2ee2bb4ae1b78ef0869624afc7
msgid ":pipeline:`$match`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:9
# 01d0f5624509436088378a60b178f16f
msgid "Filters the document stream to allow only matching documents to pass unmodified into the next pipeline stage. :pipeline:`$match` uses standard MongoDB queries. For each input document, outputs either one document (a match) or zero documents (no match)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:15
# 85f69a6d21e64151b454b132d553ea76
msgid ":pipeline:`$redact`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:15
# bf0a11a0a4d44c2c9731cd1a4b225e70
msgid "Reshapes each document in the stream by restricting the content for each document based on information stored in the documents themselves. Incorporates the functionality of :pipeline:`$project` and :pipeline:`$match`. Can be used to implement field level redaction. For each input document, outputs either one or zero document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:23
# c19797c294bd474e864ef23c3c60f7dd
msgid ":pipeline:`$limit`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:23
# a9e42621fac148318e0d98140da3d469
msgid "Passes the first *n* documents unmodified to the pipeline where *n* is the specified limit. For each input document, outputs either one document (for the first *n* documents) or zero documents (after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:29
# 6ff50a30dd0140b3a25472517ca1c1a1
msgid ":pipeline:`$skip`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:29
# 5ce875e79a1a4438a61217f90178c5fd
msgid "Skips the first *n* documents where *n* is the specified skip number and passes the remaining documents unmodified to the pipeline. For each input document, outputs either zero documents (for the first *n* documents) or one document (if after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:35
# 3d7d3ed152154527bc339968cf432f04
msgid ":pipeline:`$unwind`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:35
# c94528cbf9cb430b84b811dbabf3bcb4
msgid "Deconstructs an array field from the input documents to output a document for *each* element. Each output document replaces the array with an element value. For each input document, outputs *n* documents where *n* is the number of array elements and can be zero for an empty array."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:42
# c3568b9be03547d9ae7e2e3bd156ce57
msgid ":pipeline:`$group`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:42
# 6429004f03994985a228b87fd27cd119
msgid "Groups input documents by a specified identifier expression and applies the accumulator expression(s), if specified, to each group. Consumes all input documents and outputs one document per each distinct group. The output documents only contain the identifier field and, if specified, accumulated fields."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:49
# eb345ea29fe5474a90ddb3d7adb892d3
msgid ":pipeline:`$sort`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:49
# 43e9563d6fc84eafbe1d6b6bd4b4872c
msgid "Reorders the document stream by a specified sort key. Only the order changes; the documents remain unmodified. For each input document, outputs one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:54
# 6f21a367e6b5446d97ca35ad3493131f
msgid ":pipeline:`$geoNear`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:54
# 6ca1d2e1b7fc4e1da3dd2ad8c912ed37
msgid "Returns an ordered stream of documents based on the proximity to a geospatial point. Incorporates the functionality of :pipeline:`$match`, :pipeline:`$sort`, and :pipeline:`$limit` for geospatial data. The output documents include an additional distance field and can include a location identifier field."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:61
# 9d71825280954d17a30bf3b1f5bfa354
msgid ":pipeline:`$out`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline.rst:61
# 97ae64019fe54be1bc68b4286f3f263b
msgid "Writes the resulting documents of the aggregation pipeline to a collection. To use the :pipeline:`$out` stage, it must be the last stage in the pipeline."
msgstr ""

#: ../source/reference/operator/aggregation.txt:41
# 7b54570ff1944e10bca3eb9fdf05bceb
msgid "Expression Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:43
# d08ad07d28a745499b139fae85928865
msgid "These expression operators are available to construct :ref:`expressions <aggregation-expressions>` for use in the aggregation pipeline."
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:1
# a8e9a98624d3402ba7fe92bdf90f0089
msgid "Operator expressions are similar to functions that take arguments. In general, these expressions take an array of arguments and have the following form:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:9
# 4c54b572a04f4cbda887112e20a4670a
msgid "If operator accepts a single argument, you can omit the outer array designating the argument list:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:16
# c11caac7c0e040d1b8214c957b932786
msgid "To avoid parsing ambiguity if the argument is a literal array, you must wrap the literal array in a :expression:`$literal` expression or keep the outer array that designates the argument list."
msgstr ""

#: ../source/reference/operator/aggregation.txt:49
# 79a08af205b244428722695c776eee2f
msgid "Boolean Operators"
msgstr ""

#: ../source/includes/intro-aggregation-boolean.rst:1
# aaf4ad54f8db418daeafa0efae248a6a
msgid "Boolean expressions evaluates its argument expressions as booleans and return a boolean as the result."
msgstr ""

#: ../source/includes/fact-agg-boolean.rst:1
# dfa1b066c7704332a20593fd0cc7dbb3
msgid "In addition to the ``false`` boolean value, |boolean-exp| evaluates as ``false`` the following: ``null``, ``0``, and ``undefined`` values. The |boolean-exp| evaluates all other values as ``true``, including non-zero numeric values and arrays."
msgstr ""

#: ../source/reference/operator/aggregation.txt:65
# f652e33f3e904da5a365e77df7484fb6
msgid "Set Operators"
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:1
# ccea80915661497d894d2c89e7247f77
msgid "Set expressions performs set operation on arrays, treating arrays as sets. Set expressions ignores the duplicate entries in each input array and the order of the elements."
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:5
# f3e68ef8164a44d3bf663a0f9e75c932
msgid "If the set operation returns a set, the operation filters out duplicates in the result to output an array that contains only unique entries. The order of the elements in the output array is unspecified."
msgstr ""

#: ../source/includes/fact-agg-top-level-expressions.rst:1
# d5ddf933d9824511a88291e211b72575
msgid "If a set contains a nested array element, |exp| does *not* descend into the nested array but evaluates the array at top-level."
msgstr ""

#: ../source/reference/operator/aggregation.txt:81
# 324e9add054c44f689beb0362b279a61
msgid "Comparison Operators"
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:1
# a7ae61098320480183f1be3145b24b55
msgid "Comparison expressions return a boolean except for :expression:`$cmp` which returns a number."
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:4
# 093a9626adde4c22bb329b0eb9fcbf48
msgid "The comparison expressions take two argument expressions and compare both value and type, using the :ref:`specified BSON comparison order <bson-types-comparison-order>` for values of different types."
msgstr ""

#: ../source/reference/operator/aggregation.txt:97
# ff348d4f8f6e4ee5a07fbf45cbcacda5
msgid "Arithmetic Operators"
msgstr ""

#: ../source/includes/intro-aggregation-arithmetic.rst:1
# b1c58ba403c14eba887f8f564d1edccc
msgid "Arithmetic expressions perform mathematic operations on numbers. Some arithmetic expressions can also support date arithmetic."
msgstr ""

#: ../source/reference/operator/aggregation.txt:113
# 6add5c6f00b647539f95df2232b0ca86
msgid "String Operators"
msgstr ""

#: ../source/includes/intro-aggregation-string.rst:1
# 0aed2b3e3e0a4f129e6500bb23892d53
msgid "|exp-has| a well-defined behavior for strings of ASCII characters."
msgstr ""

#: ../source/reference/operator/aggregation.txt:120
# d79680173fa240e3bb11ecd363b5cd86
msgid ":expression:`$concat` behavior is well-defined regardless of the characters used."
msgstr ""

#: ../source/reference/operator/aggregation.txt:135
# 03cd4cc0e12c4ad7be3c2dd872cb02ae
msgid "Text Search Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:149
# 000222d74bde46cab1375f23f0727d61
msgid "Array Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:163
# 1aa71979a8d444cf8814e53b41438983
msgid "Variable Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:177
# 55f409a1df2844c1aa520ea69d6dd96d
msgid "Literal Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:191
# e403ddb7f8804e908359245ca9a49a8f
msgid "Date Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:205
# 354d402cae714a829b799ac25e715f1c
msgid "Conditional Expressions"
msgstr ""

#: ../source/reference/operator/aggregation.txt:221
# e739a324e1974320a1af41e1efa8f880
msgid "Accumulators"
msgstr ""

#: ../source/includes/intro-aggregation-accumulator.rst:1
# d64b50b0cff54e26ab20d9769ed891da
msgid "Accumulators, available only for the :pipeline:`$group` stage, compute values by combining documents that share the same group key. Accumulators take as input a single expression, evaluating the expression once for each input document, and maintain their state for the group of documents."
msgstr ""

