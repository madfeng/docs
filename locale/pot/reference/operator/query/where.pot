# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/where.txt:3
# 814f1694cdb544ad827e6a55882abf4d
msgid "$where"
msgstr ""

#: ../source/reference/operator/query/where.txt:9
# 222835f72b0d455e902ec4d4c04cf592
msgid "Use the :query:`$where` operator to pass either a string containing a JavaScript expression or a full JavaScript function to the query system. The :query:`$where` provides greater flexibility, but requires that the database processes the JavaScript expression or function for *each* document in the collection. Reference the document in the JavaScript expression or function using either ``this`` or ``obj`` ."
msgstr ""

#: ../source/reference/operator/query/where.txt:18
# 577afd0eadcb4bfbbb4331fe09126636
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/where.txt:21
# 2316594f17a14d6a8b8601ff1e2eef93
msgid "Map Reduce"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
# b86563da3a5241f8a90b11bf92a72831
msgid "In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
# 6aa7a7497aaf4213ab77bd002a53c55f
msgid "When upgrading to MongoDB 2.4, you will need to refactor your code if your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands, or :query:`$where` operator expressions include any global shell functions or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
# 926e398fe358445086610e9134904ea8
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
# 67462671eaa741b4a719c9643ea45526
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
# d47b94fa71494dd9a32ebb858efde569
msgid "Available Functions"
msgstr ""

#: ../source/reference/operator/query/where.txt:28
# e248e033bc71479bb95b0fcf06403bd5
msgid "``elemMatch``"
msgstr ""

#: ../source/reference/operator/query/where.txt:32
# 4a634ce289494bd58bc87ee480c2bb28
msgid "Only apply the :query:`$where` query operator to top-level documents. The :query:`$where` query operator will not work inside a nested document, for instance, in an :query:`$elemMatch` query."
msgstr ""

#: ../source/reference/operator/query/where.txt:37
# 40d46f6963e54c9fb469e7ea9ca128a9
msgid "Considerations"
msgstr ""

#: ../source/reference/operator/query/where.txt:39
# bafe2dd8eb7e44a7a5ded57cfeb8a54c
msgid "Do not write to the database within the :query:`$where` JavaScript function."
msgstr ""

#: ../source/reference/operator/query/where.txt:42
# 0573b06a09cd4c3881dac9c295afc7a9
msgid ":query:`$where` evaluates JavaScript and cannot take advantage of indexes. Therefore, query performance improves when you express your query using the standard MongoDB operators (e.g., :query:`$gt`, :query:`$in`)."
msgstr ""

#: ../source/reference/operator/query/where.txt:47
# cb449959e82b4e9bbdabb7f5dce7936a
msgid "In general, you should use :query:`$where` only when you can't express your query using another operator. If you must use :query:`$where`, try to include at least one other standard query operator to filter the result set. Using :query:`$where` alone requires a table scan."
msgstr ""

#: ../source/reference/operator/query/where.txt:53
# eea2618c96d44ef09759fb415a8b66fa
msgid "Using normal non\\-:query:`$where` query statements provides the following performance advantages:"
msgstr ""

#: ../source/reference/operator/query/where.txt:56
# 6ba711585db74664b210d9a824e5d8a0
msgid "MongoDB will evaluate non\\-:query:`$where` components of query before :query:`$where` statements. If the non\\-:query:`$where` statements match no documents, MongoDB will not perform any query evaluation using :query:`$where`."
msgstr ""

#: ../source/reference/operator/query/where.txt:61
# 6028d80c732f4c0e9168bdc3af57ba8b
msgid "The non\\-:query:`$where` query statements may use an :term:`index`."
msgstr ""

#: ../source/reference/operator/query/where.txt:65
# b012658e6efc4cc59b8d95bc75dda47d
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/where.txt:67
# 50afe1c7dae3408aa66f2b642e265524
msgid "Consider the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:77
# 8b32f25aee00442fbd43a9c4c5025e86
msgid "Additionally, if the query consists only of the :query:`$where` operator, you can pass in just the JavaScript expression or JavaScript functions, as in the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:87
# 72084eb6eb384632bad1ba81e7183c3a
msgid "You can include both the standard MongoDB operators and the :query:`$where` operator in your query, as in the following examples:"
msgstr ""

