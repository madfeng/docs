# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
# 0a2c0347491f4fd7a4a532af2ad47111
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:9
# c7f57fc3f4fd4d1bb4a9b13e2b88c7d5
msgid "The :query:`$or` operator performs a logical ``OR`` operation on an array of *two or more* ``<expressions>`` and selects the documents that satisfy *at least* one of the ``<expressions>``. The :query:`$or` has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/or.txt:18
# ce0d3ccbd7c0497b890b250e0bdc69d2
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
# 7d011221215048e8a598ed77fe204f23
msgid "This query will select all documents in the ``inventory`` collection where either the ``quantity`` field value is less than ``20`` **or** the ``price`` field value equals ``10``."
msgstr ""

#: ../source/reference/operator/query/or.txt:29
# 89b9d52181f344a1a5557c01e2ae9fed
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/query/or.txt:34
# cde0a56d00ad4665bce0c32849185cbb
msgid "``$or`` Clauses and Indexes"
msgstr ""

#: ../source/reference/operator/query/or.txt:36
# 609cb4d022d2412eaca359571aa6ef75
msgid "When evaluating the clauses in the :query:`$or` expression, MongoDB either performs a collection scan or, if all the clauses are supported by indexes, MongoDB performs index scans. That is, for MongoDB to use indexes to evaluate an :query:`$or` expression, all the clauses in the :query:`$or` expression must be supported by indexes. Otherwise, MongoDB will perform a collection scan."
msgstr ""

#: ../source/reference/operator/query/or.txt:43
# 972f03be38414015b1e621d77b986472
msgid "When using indexes with :query:`$or` queries, each clause of an :query:`$or` can use its own index.  Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:50
# 6690b8ba0efb4e39bfcd57b1af571ea2
msgid "To support this query, rather than a compound index, you would create one index on ``quantity`` and another index on ``price``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:58
# ec5f547a3ca2416688a39b001dac287b
msgid "MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index to support :query:`$or` clauses."
msgstr ""

#: ../source/reference/operator/query/or.txt:64
# 11f932c802514c7082f88f7567aef4fc
msgid "``$or`` and ``text`` Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:68
# cad41b78052944559353c92a97a8a8bf
msgid "If :query:`$or` includes a :query:`$text` query, all clauses in the :query:`$or` array must be supported by an index. This is because a :query:`$text` query *must* use an index, and :query:`$or` can only use indexes if all its clauses are supported by indexes. If the :query:`$text` query cannot use an index, the query will return an error."
msgstr ""

#: ../source/reference/operator/query/or.txt:76
# 35fc4235dcbf496f84f1301c5ecada93
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:80
# 1496b24ee8984d36bc2bb97c5db4d11a
msgid ":operator:`$or` supports :doc:`geospatial clauses </reference/operator/query-geospatial>` with the following exception for the near clause (near clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` cannot contain a near clause with any other clause."
msgstr ""

#: ../source/reference/operator/query/or.txt:87
# aee84034f4e94c8589636bbd0606a0d0
msgid "``$or`` and Sort Operations"
msgstr ""

#: ../source/reference/operator/query/or.txt:91
# fb442de18943430faf5fe1bb129cf9f2
msgid "When executing :query:`$or` queries with a :method:`~cursor.sort()`, MongoDB can now use indexes that support the :query:`$or` clauses. Previous versions did not use the indexes."
msgstr ""

#: ../source/reference/operator/query/or.txt:96
# 49cd9f4f67b142ff93129768c37e8eca
msgid "``$or`` versus ``$in``"
msgstr ""

#: ../source/reference/operator/query/or.txt:98
# e9dad96e88674ba7a9d910509219c948
msgid "When using :query:`$or` with ``<expressions>`` that are equality checks for the value of the same field, use the :query:`$in` operator instead of the :query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:102
# 33830cccad4e4ea5a5813557897c970c
msgid "For example, to select all documents in the ``inventory`` collection where the ``quantity`` field value equals either ``20`` *or* ``50``, use the :query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:111
# ecb9e301c6344b4eb274579315e483c3
msgid "Nested ``$or`` Clauses"
msgstr ""

#: ../source/reference/operator/query/or.txt:113
# 8a358b05ab3347c39cd6d13a0b29b320
msgid "You may nest :query:`$or` operations."
msgstr ""

#: ../source/reference/operator/query/or.txt:115
# 6c06397439f44be6a17fd502e66d4030
msgid ":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, :query:`$in`"
msgstr ""

