# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/not.txt:3
# 8a36bd4a00c8471e8d1f19c8ff69bf3e
msgid "$not"
msgstr ""

#: ../source/reference/operator/query/not.txt:9
# fe0fe953a4a3483bacc1cf8a3f6ac684
msgid "*Syntax*: ``{ field: { $not: { <operator-expression> } } }``"
msgstr ""

#: ../source/reference/operator/query/not.txt:11
# aaab10cef3e64c9296d1c77c1aeed236
msgid ":query:`$not` performs a logical ``NOT`` operation on the specified ``<operator-expression>`` and selects the documents that do *not* match the ``<operator-expression>``. This includes documents that do not contain the ``field``."
msgstr ""

#: ../source/reference/operator/query/not.txt:16
# a0774bcfabc44f5ab675273304680e0c
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/not.txt:22
# 45ca48b487b64e1ca6586438790ecdab
msgid "This query will select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/not.txt:24
# a1996bed37cb479f980057e84f7db19e
msgid "the ``price`` field value is less than or equal to ``1.99`` **or**"
msgstr ""

#: ../source/reference/operator/query/not.txt:25
# 59c0638db86e4ee3b8f22d29d07bc1d7
msgid "the ``price`` field does not exist"
msgstr ""

#: ../source/reference/operator/query/not.txt:27
# 895e29517e5742829a0fbef7c4b8e20b
msgid "``{ $not: { $gt: 1.99 } }`` is different from the :query:`$lte` operator. ``{ $lte: 1.99 }`` returns *only* the documents where ``price`` field exists and its value is less than or equal to ``1.99``."
msgstr ""

#: ../source/reference/operator/query/not.txt:32
# 66192d7b95594cdfa4ee33324984ed64
msgid "Remember that the :query:`$not` operator only affects *other operators* and cannot check fields and documents independently. So, use the :query:`$not` operator for logical disjunctions and the :query:`$ne` operator to test the contents of fields directly."
msgstr ""

#: ../source/reference/operator/query/not.txt:37
# d744653610434acab8eb578da620bd68
msgid "Consider the following behaviors when using the :query:`$not` operator:"
msgstr ""

#: ../source/reference/operator/query/not.txt:40
# d3a0ce9584d54acc8974dd36a193ca3f
msgid "The operation of the :query:`$not` operator is consistent with the behavior of other operators but may yield unexpected results with some data types like arrays."
msgstr ""

#: ../source/reference/operator/query/not.txt:44
# 4f7ca8f31fec45919f42f3ad8a9ae926
msgid "The :query:`$not` operator does **not** support operations with the :query:`$regex` operator. Instead use ``//`` or in your driver interfaces, use your language's regular expression capability to create regular expression objects."
msgstr ""

#: ../source/reference/operator/query/not.txt:49
# 500a587fa56240e4b4a8bee40917b63d
msgid "Consider the following example which uses the pattern match expression ``//``:"
msgstr ""

#: ../source/reference/operator/query/not.txt:55
# 7178ab0edd0447799838b5a67ebf78de
msgid "The query will select all documents in the ``inventory`` collection where the ``item`` field value does *not* start with the letter ``p``."
msgstr ""

#: ../source/reference/operator/query/not.txt:59
# f72f02310cad43188539da788a84cacd
msgid "If you are using Python, you can write the above query with the PyMongo driver and Python's :py:meth:`python:re.compile()` method to compile a regular expression, as follows:"
msgstr ""

#: ../source/reference/operator/query/not.txt:71
# 7dde7472b1fe4bb2b914ed337137c7da
msgid ":method:`~db.collection.find()`, :method:`~db.collection.update()`, :update:`$set`, :query:`$gt`, :query:`$regex`, :api:`PyMongo <python\\current>`, :term:`driver`."
msgstr ""

