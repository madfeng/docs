# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/bson-types.txt:3
# f698bde42720490fb8ba3313dd719a56
msgid "BSON Types"
msgstr ""

#: ../source/reference/bson-types.txt:7
# 7b9bc9ef91f74324bc3f8e871707e62c
msgid ":term:`BSON` is a binary serialization format used to store documents and make remote procedure calls in MongoDB. The BSON specification is located at `bsonspec.org <http://bsonspec.org/>`_."
msgstr ""

#: ../source/reference/bson-types.txt:11
# 37347d26b7674388bc45029c422b94e7
msgid "BSON supports the following data types as values in documents. Each data type has a corresponding number that can be used with the :query:`$type` operator to query documents by BSON type."
msgstr ""

#: ../source/reference/bson-types.txt:16
# 17a8553dc655413f9713cfa0bf6a4b32
msgid "**Type**"
msgstr ""

#: ../source/reference/bson-types.txt:16
# 0d042f0c5d224701a8a7e5b22e075c28
msgid "**Number**"
msgstr ""

#: ../source/reference/bson-types.txt:18
# 03f830b4f02c437eb616a5b9413ac76f
msgid "Double"
msgstr ""

#: ../source/reference/bson-types.txt:18
# 507f0df965c042e29cf657b03b538b04
msgid "1"
msgstr ""

#: ../source/reference/bson-types.txt:19
#: ../source/reference/bson-types.txt:68
# 757cdceb20234a29a6610e519b8e62f6
# a5e4f196d8444540a08fe7e686607827
msgid "String"
msgstr ""

#: ../source/reference/bson-types.txt:19
# 17ed957bc7b04e368786ca62ea226759
msgid "2"
msgstr ""

#: ../source/reference/bson-types.txt:20
#: ../source/includes/fact-sort-order.rst:8
# eb9fc9fb091a42369c55b0d42af1f4fc
# 1dbbc5bff92941f7bd4b06825b9c2df9
msgid "Object"
msgstr ""

#: ../source/reference/bson-types.txt:20
# 22c1bf2f45854d5fac782d630da38584
msgid "3"
msgstr ""

#: ../source/reference/bson-types.txt:21
#: ../source/includes/fact-sort-order.rst:9
# 646c354fbc1b401f9388a4048e0d40d4
# 0c94f0b4400e489db267466110cf9212
msgid "Array"
msgstr ""

#: ../source/reference/bson-types.txt:21
# 38b81d9cb2fe4fa089261e49ad963ae3
msgid "4"
msgstr ""

#: ../source/reference/bson-types.txt:22
# e01868df4ef648948ce6e0cec73fe738
msgid "Binary data"
msgstr ""

#: ../source/reference/bson-types.txt:22
# 4971140a529f4dce96655863e095a539
msgid "5"
msgstr ""

#: ../source/reference/bson-types.txt:23
# 70dab95e20d240bb87960975c9935037
msgid "Undefined"
msgstr ""

#: ../source/reference/bson-types.txt:23
# 10e0f6f39f78496996e3bd052fb26e4c
msgid "6"
msgstr ""

#: ../source/reference/bson-types.txt:24
# 31c25be61fba44a0a136a79b10519555
msgid "Object id"
msgstr ""

#: ../source/reference/bson-types.txt:24
# 985f5f806d2c44b3860c38551e7a15ea
msgid "7"
msgstr ""

#: ../source/reference/bson-types.txt:25
#: ../source/includes/fact-sort-order.rst:12
# ea3a7f271f264c4790c5685834194ea3
# 6db352e6c286412286e6f17e3869b0e4
msgid "Boolean"
msgstr ""

#: ../source/reference/bson-types.txt:25
# 48f9dca002d84586aee4d30a37b35cb6
msgid "8"
msgstr ""

#: ../source/reference/bson-types.txt:26
#: ../source/reference/bson-types.txt:148
# 55c79b8ff9d845e69f4a3b5a919d9248
# 8310c814865a439d977528168810414c
msgid "Date"
msgstr ""

#: ../source/reference/bson-types.txt:26
# 83fd5d6f782946ae89f93877bd93af0d
msgid "9"
msgstr ""

#: ../source/reference/bson-types.txt:27
#: ../source/includes/fact-sort-order.rst:5
# 93bfaa0373f747adafb338e291e6c03a
# 2c368f9c9f70478285880a1c0d5e4581
msgid "Null"
msgstr ""

#: ../source/reference/bson-types.txt:27
# 6ff388216b9e400792dc72e061536e00
msgid "10"
msgstr ""

#: ../source/reference/bson-types.txt:28
#: ../source/includes/fact-sort-order.rst:14
# 54f64e3bd70d4afbb29e9a4e53c23cff
# ac8942d410b840129cd923c98e0a6959
msgid "Regular Expression"
msgstr ""

#: ../source/reference/bson-types.txt:28
# d0f3cb3d3c3c475d9613753fa11254ee
msgid "11"
msgstr ""

#: ../source/reference/bson-types.txt:29
# af7607f819e04afbad5cfeb5c6967c4c
msgid "JavaScript"
msgstr ""

#: ../source/reference/bson-types.txt:29
# deb187706bb74d9294f3694bf5d5463e
msgid "13"
msgstr ""

#: ../source/reference/bson-types.txt:30
# b525e10c2d3949259539e9e50bd34efa
msgid "Symbol"
msgstr ""

#: ../source/reference/bson-types.txt:30
# df7604380f3245d682a0cb0ed6201542
msgid "14"
msgstr ""

#: ../source/reference/bson-types.txt:31
# 26c519d9b3e5443791ef19e61501da55
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/reference/bson-types.txt:31
# 4f1b34b718814e0d9fb8c02b64c47f97
msgid "15"
msgstr ""

#: ../source/reference/bson-types.txt:32
# d4131f996d584331b4099580ed88c7aa
msgid "32-bit integer"
msgstr ""

#: ../source/reference/bson-types.txt:32
# 09e529ecab4b4fc8bf7f05f6b6a76917
msgid "16"
msgstr ""

#: ../source/reference/bson-types.txt:33
# b9fc6f0512714ddd808bb74bc7c08b4c
msgid "Timestamp"
msgstr ""

#: ../source/reference/bson-types.txt:33
# 594136f62aab4164b875edcbc648c78f
msgid "17"
msgstr ""

#: ../source/reference/bson-types.txt:34
# 06b4e2babb54481db903430bd3cd3871
msgid "64-bit integer"
msgstr ""

#: ../source/reference/bson-types.txt:34
# cef086a3260d482496bc9cf4712b2457
msgid "18"
msgstr ""

#: ../source/reference/bson-types.txt:35
# 2c8a386cb6f44729b61e6c79dffc74c7
msgid "Min key"
msgstr ""

#: ../source/reference/bson-types.txt:35
# ce067e20b19f4e50aac2992c5e094c10
msgid "255"
msgstr ""

#: ../source/reference/bson-types.txt:36
# 8ef63f288feb48e0a75ab058348a1ddf
msgid "Max key"
msgstr ""

#: ../source/reference/bson-types.txt:36
# 12d0d3c7da504a3e95efe4fad239a78f
msgid "127"
msgstr ""

#: ../source/reference/bson-types.txt:39
# 32b9f64166a648b6ab442d8f82359fb3
msgid "To determine a field's type, see :ref:`check-types-in-shell`."
msgstr ""

#: ../source/reference/bson-types.txt:41
# 40345e27893146beb315350f0d3d9ead
msgid "If you convert BSON to JSON, see :doc:`/reference/mongodb-extended-json`."
msgstr ""

#: ../source/reference/bson-types.txt:47
# 63a960363d2747aaa396be453e3e30c9
msgid "Comparison/Sort Order"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# b6d71fa0b9294ee2ae14d2b0be92ba9e
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# fe66cfee7de74f5c939b605b0ea942e9
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# 4cbfacba2d004938ae2ab0f2aa6393b8
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# c17c9c9ab52a4877963f3dbe7f073460
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# d789c971b0a149d3b692d306a87c1c12
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
#: ../source/reference/bson-types.txt:57
# 0c6dcd1b9d264b828731acd1838b5f58
# b366af62a6274bb083de17e302d2b26e
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
# acf2d77b74614a6db823fcc793377d77
msgid "Date, Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
# 228e48e8bf9d4a7bb25812db1292487b
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:17
# e0d373be0a4542aca0c8d2942dfe80c8
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:20
# 925533a479494e09b9296a4f30708ecc
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:24
# a59392a799c54474b1ca887ecc8fd036
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:32
# 3dfa59741b6644fa86fbe650e5404b14
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:34
# 4f3f37a5670443d9b73f080b872d3d60
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:36
# 7c50ceac986c4127be7bc54f22fe37a2
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:38
# a53b577ae436446e8be01f60d7aeec45
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/bson-types.txt:51
# 7dba69954bd3416ea3051a6798487577
msgid "The following sections describe special considerations for particular BSON types."
msgstr ""

#: ../source/reference/bson-types.txt:59
# f28c030d1cbe46f4b07e04a10bf204a0
msgid "ObjectIds are: small, likely unique, fast to generate, and ordered. These values consists of 12-bytes, where the first four bytes are a timestamp that reflect the ObjectId's creation. Refer to the :doc:`ObjectId </reference/object-id>` documentation for more information."
msgstr ""

#: ../source/reference/bson-types.txt:70
# 0127fd03e9c44fdc9e1f65d526a782b0
msgid "BSON strings are UTF-8. In general, drivers for each programming language convert from the language's string format to UTF-8 when serializing and deserializing BSON. This makes it possible to store most international characters in BSON strings with ease. [#sort-string-internationalization]_ In addition, MongoDB :query:`$regex` queries support UTF-8 in the regex string."
msgstr ""

#: ../source/reference/bson-types.txt:77
# f67bbb70fd474352839a95c27a4425ae
msgid "Given strings using UTF-8 character sets, using :method:`sort() <cursor.sort()>` on strings will be reasonably correct. However, because internally :method:`sort() <cursor.sort()>` uses the C++ ``strcmp`` api, the sort order may handle some characters incorrectly."
msgstr ""

#: ../source/reference/bson-types.txt:86
# 99501f9fe62a48cd81982e526e6350d0
msgid "Timestamps"
msgstr ""

#: ../source/reference/bson-types.txt:88
# 4ced5ef60ba441829446fc98a1ff4309
msgid "BSON has a special timestamp type for *internal* MongoDB use and is **not** associated with the regular :ref:`document-bson-type-date` type. Timestamp values are a 64 bit value where:"
msgstr ""

#: ../source/reference/bson-types.txt:92
# 85d3c722919c4b2ba2f5e605a5435b86
msgid "the first 32 bits are a ``time_t`` value (seconds since the Unix epoch)"
msgstr ""

#: ../source/reference/bson-types.txt:94
# 85450b957647422abbad8445d2533aa2
msgid "the second 32 bits are an incrementing ``ordinal`` for operations within a given second."
msgstr ""

#: ../source/reference/bson-types.txt:97
# cdd7cfa45f144ffa8567bb2e7a003d70
msgid "Within a single :program:`mongod` instance, timestamp values are always unique."
msgstr ""

#: ../source/reference/bson-types.txt:100
# c07d8604f72c4babbb77f7bf1b164c69
msgid "In replication, the :term:`oplog` has a ``ts`` field. The values in this field reflect the operation time, which uses a BSON timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:106
# 79f81c16ccfa49829ee2f9dad8848356
msgid "The BSON Timestamp type is for *internal* MongoDB use. For most cases, in application development, you will want to use the BSON date type. See :ref:`document-bson-type-date` for more information."
msgstr ""

#: ../source/reference/bson-types.txt:111
# fb6f81c2aade4a889c7cff62b510d5f8
msgid "If you create a BSON Timestamp using the empty constructor (e.g. ``new Timestamp()``), MongoDB will only generate a timestamp *if* you use the constructor in the first field of the document. [#id_exception]_ Otherwise, MongoDB will generate an empty timestamp value (i.e. ``Timestamp(0, 0)``.)"
msgstr ""

#: ../source/reference/bson-types.txt:117
# 7253a283977c4fe5a19f0acbec811fa9
msgid ":program:`mongo` shell displays the Timestamp value with the wrapper:"
msgstr ""

#: ../source/reference/bson-types.txt:124
# 1dd1f34bb6fd4917808287744e4dff63
msgid "Prior to version 2.1, the :program:`mongo` shell display the Timestamp value as a document:"
msgstr ""

#: ../source/reference/bson-types.txt:131
# d8de32341cd94fcd8777237f3a2e52d5
msgid "If the first field in the document is ``_id``, then you can generate a timestamp in the *second* field of a document."
msgstr ""

#: ../source/reference/bson-types.txt:137
# 30cff2a93c9949bbbb64c4d0c449455e
msgid "In the following example, MongoDB will generate a Timestamp value, even though the ``Timestamp()`` constructor is *not* in the first field in the document:"
msgstr ""

#: ../source/reference/bson-types.txt:150
# ff317d635b8e4df382906b119cc3f399
msgid "BSON Date is a 64-bit integer that represents the number of milliseconds since the Unix epoch (Jan 1, 1970). This results in a representable date range of about 290 million years into the past and future."
msgstr ""

#: ../source/reference/bson-types.txt:155
# 9155198342a14db7bd87c5a8952e1b88
msgid "The `official BSON specification <http://bsonspec.org/#/specification>`_ refers to the BSON Date type as the *UTC datetime*."
msgstr ""

#: ../source/reference/bson-types.txt:158
# 3becb3a34aec4e679e2d297b2c142e80
msgid "BSON Date type is signed. [#unsigned-date]_ Negative values represent dates before 1970."
msgstr ""

#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
# 7ba301537b194a4783dc5749d02a8db5
# 751d67dbecbb4bcbaec060206ca1d63e
# 8c4e722a3912492589acd0b4ee293ffe
# 422dbcaafe0546e0ade7f1c2cc372ac2
msgid "Example"
msgstr ""

#: ../source/reference/bson-types.txt:189
# e7ace11b818a475092429684783d19c6
msgid "Prior to version 2.0, ``Date`` values were incorrectly interpreted as *unsigned* integers, which affected sorts, range queries, and indexes on ``Date`` fields. Because indexes are not recreated when upgrading, please re-index if you created an index on ``Date`` values with an earlier version, and dates before 1970 are relevant to your application."
msgstr ""

