# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/meta/build.txt:3
# b8455ac73f4c4b1cad94f1a4b752c415
msgid "MongoDB Documentation Build System"
msgstr ""

#: ../source/meta/build.txt:5
# 19263395a6074615b1cfd72005b9c513
msgid "This document contains more direct instructions for building the MongoDB documentation."
msgstr ""

#: ../source/meta/build.txt:9
# d48c5b797a4e44d79ba9cccb8cba58fc
msgid "Getting Started"
msgstr ""

#: ../source/meta/build.txt:12
# 8bc6d58415be43ed9771e5d6f27e5581
msgid "Install Dependencies"
msgstr ""

#: ../source/meta/build.txt:14
# a00ade89048b496a9e5878343d7624a7
msgid "The MongoDB Documentation project depends on the following tools:"
msgstr ""

#: ../source/meta/build.txt:16
# f36021bb64c542bc9d440d31fd2a4bcf
msgid "GNU Make"
msgstr ""

#: ../source/meta/build.txt:17
# 35b444feb2e649f0827fdf50e46c3fcf
msgid "GNU Tar"
msgstr ""

#: ../source/meta/build.txt:18
# a087111350d64187a7fbfda96410cf5f
msgid "Python"
msgstr ""

#: ../source/meta/build.txt:19
# ddcce73ee75a421cba23970342029c85
msgid "Git"
msgstr ""

#: ../source/meta/build.txt:20
# 7eb10c0199634e64bc04acaf30b19b53
msgid "Sphinx (documentation management toolchain)"
msgstr ""

#: ../source/meta/build.txt:21
# 1b5ef057983c4da7a0bb24665d1c35b1
msgid "Pygments (syntax highlighting)"
msgstr ""

#: ../source/meta/build.txt:22
# 96e67878deea4fffa45e6a65d629065a
msgid "PyYAML (for the generated tables)"
msgstr ""

#: ../source/meta/build.txt:23
# 6f7839f9b92848a7a0d65538a037e4d7
msgid "Droopy (Python package for static text analysis)"
msgstr ""

#: ../source/meta/build.txt:24
# a40b1dc91f224637aaa874aeab6eadf1
msgid "Fabric (Python package for scripting and orchestration)"
msgstr ""

#: ../source/meta/build.txt:25
# bd8634ef46454646897f5cd6588667e1
msgid "Inkscape (Image generation.)"
msgstr ""

#: ../source/meta/build.txt:26
# 7f3a2851d6be4c6184a19a9ffc087774
msgid "python-argparse (For Python 2.6.)"
msgstr ""

#: ../source/meta/build.txt:27
# 12e0a2ef0cd64537a1d6dbc43302b066
msgid "LaTeX/PDF LaTeX (typically texlive; for building PDFs)"
msgstr ""

#: ../source/meta/build.txt:28
# d1205c98d6af46559468166d00b7b4a9
msgid "Common Utilities (rsync, tar, gzip, sed)"
msgstr ""

#: ../source/meta/build.txt:31
# 8b1d7a5afaad44dbb55b4bb0a60aef9c
msgid "OS X"
msgstr ""

#: ../source/meta/build.txt:33
# 514532a85678410ea5228016958bd5c3
msgid "Install Sphinx, Docutils, and their dependencies with ``easy_install`` the following command:"
msgstr ""

#: ../source/meta/build.txt:40
# 056a6aefe4fb4ce09b772725aa2c1d55
msgid "Feel free to use ``pip`` rather than ``easy_install`` to install python packages."
msgstr ""

#: ../source/meta/build.txt:43
# e4f480e9efa046cc95cf1f925a954199
msgid "To generate the images used in the documentation, `download and install Inkscape <http://inkscape.org/download/>`_."
msgstr ""

#: ../source/meta/build.txt:0
#: ../source/meta/build.txt:0
#: ../source/meta/build.txt:0
# 7033079670e44ad2b1d67bcba94cfd0e
# acea835ebbac485ba70217be870bb515
# 946c01c7b197441aa4144f9542064b6d
msgid "Optional"
msgstr ""

#: ../source/meta/build.txt:48
# f015c66f34aa4b919653640fdb916ce5
msgid "To generate PDFs for the full production build, install a TeX distribution (for building the PDF.) If you do not have a LaTeX installation, use `MacTeX <http://www.tug.org/mactex/2011/>`_. This is **only** required to build PDFs."
msgstr ""

#: ../source/meta/build.txt:54
# e604bead3506414da5e03088c1d5b348
msgid "Arch Linux"
msgstr ""

#: ../source/meta/build.txt:56
# 010da859ab894d9c99d9668912bf2b10
msgid "Install packages from the system repositories with the following command:"
msgstr ""

#: ../source/meta/build.txt:62
#: ../source/meta/build.txt:86
# 35468fe8198546d5bd29e4cc0f595480
# f64ade1fbf804945a9728e973c7f014f
msgid "Then install the following Python packages:"
msgstr ""

#: ../source/meta/build.txt:70
#: ../source/meta/build.txt:94
# 3522c9db25e7486491e7f75d71ac2421
# f04c16d338e54910a30e5aa110d22fbd
msgid "To generate PDFs for the full production build, install the following packages from the system repository:"
msgstr ""

#: ../source/meta/build.txt:78
# fcf1c9329df844d699d3d0de8d8f7205
msgid "Debian/Ubuntu"
msgstr ""

#: ../source/meta/build.txt:80
# cd55e85b5ca74d49b894abba30b46410
msgid "Install the required system packages with the following command:"
msgstr ""

#: ../source/meta/build.txt:102
# 8c0a560ea6ba4cf0bc9318899516d646
msgid "Setup and Configuration"
msgstr ""

#: ../source/meta/build.txt:104
# a657e06d6f454fba96ee7dece4eb3c4f
msgid "Clone the repository:"
msgstr ""

#: ../source/meta/build.txt:110
# ae5e4d8f464f41678fca9b1f2f3a1d39
msgid "Then run the ``bootstrap.py`` script in the ``docs/`` repository, to configure the build dependencies:"
msgstr ""

#: ../source/meta/build.txt:117
# d9e041c5245c415392f91e23d8747048
msgid "This downloads and configures the `mongodb/docs-tools <http://github.com/mongodb/docs-tools/>`_ repository, which contains the authoritative build system shared between branches of the MongoDB Manual and other MongoDB documentation projects."
msgstr ""

#: ../source/meta/build.txt:122
# 3bcc2af33c94464bb7eb39f3ba3dabb1
msgid "You can run ``bootstrap.py`` regularly to update build system."
msgstr ""

#: ../source/meta/build.txt:125
# 5436068c14a7436d8bd5f66f51a22432
msgid "Building the Documentation"
msgstr ""

#: ../source/meta/build.txt:127
# f7bc06266e0d4fbc96c29c96e2e47b66
msgid "The MongoDB documentation build system is entirely accessible via ``make`` targets. For example, to build an HTML version of the documentation issue the following command:"
msgstr ""

#: ../source/meta/build.txt:135
# e290b0adce4d44c48a3d309427cbd274
msgid "You can find the build output in ``build/<branch>/html``, where ``<branch>`` is the name of the current branch."
msgstr ""

#: ../source/meta/build.txt:138
# 008e4c9a7a6142f290f212e6e4dfd3d6
msgid "In addition to the ``html`` target, the build system provides the following targets:"
msgstr ""

#: ../source/meta/build.txt:145
# 480c084cef5b4ba598bc5833c9bc2751
msgid "``publish``"
msgstr ""

#: ../source/meta/build.txt:142
# 9cd2186d8cee4f728b3ab961b5f1b979
msgid "Builds and integrates all output for the production build. Build output is in ``build/public/<branch>/``. When you run ``publish`` in the ``master``, the build will generate some output in ``build/public/``."
msgstr ""

#: ../source/meta/build.txt:150
# ef5de61213c14d1cae780dd43e720ddd
msgid "``push``; ``stage``"
msgstr ""

#: ../source/meta/build.txt:148
# e618e0aae30a4a1abc0095fcad2581e2
msgid "Uploads the production build to the production or staging web servers. Depends on ``publish``. Requires access production or staging environment."
msgstr ""

#: ../source/meta/build.txt:154
# d64f8f753a304544923e73c1f452202f
msgid "``push-all``; ``stage-all``"
msgstr ""

#: ../source/meta/build.txt:153
# c4e9b8207bad4b729d2430f1e104477f
msgid "Uploads the entire content of ``build/public/`` to the web servers. Depends on ``publish``. Not used in common practice."
msgstr ""

#: ../source/meta/build.txt:158
# 66470366a6854cf28771eb7fec3ad582
msgid "``push-with-delete``; ``stage-with-delete``"
msgstr ""

#: ../source/meta/build.txt:157
# 2b13ac52795b4e7da7acb3377533c34e
msgid "Modifies the action of ``push`` and ``stage`` to remove remote file that don't exist in the local build. Use with caution."
msgstr ""

#: ../source/meta/build.txt:171
# 4751976851d74895a7d452b6334f5e52
msgid "``html``; ``latex``; ``dirhtml``; ``epub``; ``texinfo``; ``man``; ``json``"
msgstr ""

#: ../source/meta/build.txt:161
# 7517f4d90696477493c5530a3262f24a
msgid "These are standard targets derived from the default Sphinx Makefile, with adjusted dependencies. Additionally, for all of these targets you can append ``-nitpick`` to increase Sphinx's verbosity, or ``-clean`` to remove all Sphinx build artifacts."
msgstr ""

#: ../source/meta/build.txt:166
# d95c3f88c1cb496ab055b815df5b0aef
msgid "``latex`` performs several additional post-processing steps on ``.tex`` output generated by Sphinx. This target will also compile PDFs using ``pdflatex``."
msgstr ""

#: ../source/meta/build.txt:170
# b68cdbcb8bbf41b6bf4099725edf62e0
msgid "``html`` and ``man`` also generates a ``.tar.gz`` file of the build outputs for inclusion in the final releases."
msgstr ""

#: ../source/meta/build.txt:174
# 7c016860ca074e69837413a7debc6193
msgid "Build Mechanics and Tools"
msgstr ""

#: ../source/meta/build.txt:176
# 5543676e78904b90982ec34701dc7615
msgid "Internally the build system has a number of components and processes. See the `docs-tools README <https://github.com/mongodb/docs-tools/blob/master/README.rst>`_ for more information on the internals. This section documents a few of these components from a very high level and lists useful operations for contributors to the documentation."
msgstr ""

#: ../source/meta/build.txt:186
# 21828eb1bb8d4521a9484b25e73a78f3
msgid "Fabric"
msgstr ""

#: ../source/meta/build.txt:188
# e9223efb27b14a1eac55abcbad2f3008
msgid "Fabric is an orchestration and scripting package for Python. The documentation uses Fabric to handle the deployment of the build products to the web servers and also unifies a number of independent build operations. Fabric commands have the following form:"
msgstr ""

#: ../source/meta/build.txt:197
# 63a25eb92a624d72bdf99fc1bd6724a3
msgid "The ``<argument>`` is optional in most cases. Additionally some tasks are available at the root level, without a module. To see a full list of fabric tasks, use the following command:"
msgstr ""

#: ../source/meta/build.txt:205
# 56305daffb704ec2b99f23738b541c02
msgid "You can chain fabric tasks on a single command line, although this doesn't always make sense."
msgstr ""

#: ../source/meta/build.txt:208
# 3b7970f07a894c7bb49d75c71c93d42c
msgid "Important fabric tasks include:"
msgstr ""

#: ../source/meta/build.txt:212
# b99a65648c294a29b0b53e58e11c5f64
msgid "``tools.bootstrap``"
msgstr ""

#: ../source/meta/build.txt:211
# f1c0f7ddb3684947be4a92084818e3f1
msgid "Runs the ``bootstrap.py`` script. Useful for re-initializing the repository without needing to be in root of the repository."
msgstr ""

#: ../source/meta/build.txt:218
# 23c8bc30ef6e4b82bbb6b324a243e2f4
msgid "``tools.dev``; ``tools.reset``"
msgstr ""

#: ../source/meta/build.txt:215
# f8673944c45048bd93a70c7cfa0d43e5
msgid "``tools.dev`` switches the ``origin`` remote of the ``docs-tools`` checkout in ``build`` directory, to ``../docs-tools`` to facilitate build system testing and development. ``tools.reset`` resets the ``origin`` remote for normal operation."
msgstr ""

#: ../source/meta/build.txt:222
# 9e16255b7eb84f18abef1b2a39c3853f
msgid "``tools.conf``"
msgstr ""

#: ../source/meta/build.txt:221
# aadc943cdd5649af80b0e98823d969f1
msgid "``tools.conf`` returns the content of the configuration object for the current project. These data are useful during development."
msgstr ""

#: ../source/meta/build.txt:226
# 9dbf352ccee34072a3d395260d581754
msgid "``stats.report:<filename>``"
msgstr ""

#: ../source/meta/build.txt:225
# d1e03f8d2ed4456e858c8109111e6457
msgid "Returns, a collection of readability statistics. Specify file names relative to ``source/`` tree."
msgstr ""

#: ../source/meta/build.txt:230
# 144ad8e062354445ad0787b733fb7af6
msgid "``make``"
msgstr ""

#: ../source/meta/build.txt:229
# c1840f78331b4f03b7cb97c3b4e20c81
msgid "Provides a thin wrapper around Make calls. Allows you to start make builds from different locations in the project repository."
msgstr ""

#: ../source/meta/build.txt:235
# 0abf72bb752a4545a536927fc037cc70
msgid "``process.refresh_dependencies``"
msgstr ""

#: ../source/meta/build.txt:233
# b60264a11aca4a169d46df855d5c7ae2
msgid "Updates the time stamp of ``.txt`` source files with changed include files, to facilitate Sphinx's incremental rebuild process. This task runs internally as part of the build process."
msgstr ""

#: ../source/meta/build.txt:238
# 1aba509d4b09439483e4408e0e5318ff
msgid "Buildcloth"
msgstr ""

#: ../source/meta/build.txt:240
# 7edb6cd552684271afd8cfeede2f5202
msgid "`Buildcloth <https://pypi.python.org/pypi/buildcloth/>`_ is a meta-build tool, used to generate Makefiles programmatically. This makes the build system easier to maintain, and makes it easier to use the same fundamental code to generate various branches of the Manual as well as related documentation projects. See `makecloth/ in the docs-tools repository <https://github.com/mongodb/docs-tools/tree/master/makecloth>`_ for the relevant code."
msgstr ""

#: ../source/meta/build.txt:249
# 4bc5ba3e00a546feab3766057cdaa52f
msgid "Running ``make`` with no arguments will regenerate these parts of the build system automatically."
msgstr ""

#: ../source/meta/build.txt:253
# 9345b9e60b2d4c45873e1a9a9d26fdce
msgid "Rstcloth"
msgstr ""

#: ../source/meta/build.txt:255
# 68312e21086f42f9bbaddae5a226ff49
msgid "`Rstcloth <https://pypi.python.org/pypi/rstcloth>`_ is a library for generating reStructuredText programmatically. This makes it possible to generate content for the documentation, such as tables, tables of contents, and API reference material programmatically and transparently. See `rstcloth/ in the docs-tools repository <https://github.com/mongodb/docs-tools/tree/master/rstcloth>`_ for the relevant code."
msgstr ""

