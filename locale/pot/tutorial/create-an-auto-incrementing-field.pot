# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/create-an-auto-incrementing-field.txt:3
# 91acba10bbfa4136b746b5a957975cf4
msgid "Create an Auto-Incrementing Sequence Field"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:8
# 6b8b5f5357184b38bfbea99137ae5a45
msgid "Synopsis"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:10
# 9fef58cd19a547b484eb6c29b7906d64
msgid "MongoDB reserves the ``_id`` field in the top level of all documents as a primary key. ``_id`` must be unique, and always has an index with a :ref:`unique constraint <index-type-unique>`. However, except for the unique constraint you can use any value for the ``_id`` field in your collections. This tutorial describes two methods for creating an incrementing sequence number for the ``_id`` field using the following:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:18
# a0db6d21caa24b4ca305b8f6a58696a8
msgid ":ref:`auto-increment-counters-collection`"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:20
# f3516c41143b4066a9a43bd2430ffd8a
msgid ":ref:`auto-increment-optimistic-loop`"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:23
# 1585f36c3fbf42dcabdd4beda61ef0bd
msgid "Considerations"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:25
# dc3e279c976742cfba8005a6eae73e49
msgid "Generally in MongoDB, you would not use an auto-increment pattern for the ``_id`` field, or any field, because it does not scale for databases with large numbers of documents. Typically the default value :term:`ObjectId <objectid>` is more ideal for the ``_id``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:31
# 470bee0fd6934ab8bb4bad3e285078ae
msgid "Procedures"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:36
# 7f24547ffc68432fb824dc2d0555f4b0
msgid "Use Counters Collection"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:39
# f2f42cc852174f96a71c0a9e5a530ccd
msgid "Counter Collection Implementation"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:40
# 35e672f29de240538fc69979281e9df1
msgid "Use a separate ``counters`` collection to track the *last* number sequence used. The ``_id`` field contains the sequence name and the ``seq`` field contains the last value of the sequence."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:44
# a4af74fcfdd24712841d3f88c2affe9a
msgid "Insert into the ``counters`` collection, the initial value for the ``userid``:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:55
# 2ac9088e70f94c91a700402a66cbd6bb
msgid "Create a ``getNextSequence`` function that accepts a ``name`` of the sequence. The function uses the :method:`~db.collection.findAndModify()` method to atomically increment the ``seq`` value and return this new value:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:74
# b1e5f4be932c4acaa5019b3e9fea80bd
msgid "Use this ``getNextSequence()`` function during :method:`~db.collection.insert()`."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:93
#: ../source/tutorial/create-an-auto-incrementing-field.txt:250
# 0253111710b64be8b1b95d1247c7a842
# 55a9be3959ca45b2afd5516e15e78f06
msgid "You can verify the results with :method:`~db.collection.find()`:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:99
#: ../source/tutorial/create-an-auto-incrementing-field.txt:256
# c50934be71c5479cbdb1f75d647eb558
# bb8b2c9520784d2d904d47e56aa246c3
msgid "The ``_id`` fields contain incrementing sequence values:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:113
# 637367b14beb4be4a521f6f915e33ebb
msgid "``findAndModify`` Behavior"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:115
# 6312ae325e8444f295281ddf94e3dca3
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances. For instance, if multiple clients each invoke the method with the same query condition and these methods complete the find phase before any of methods perform the modify phase, these methods could insert the same document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:123
# 2aa1109eb6d9425a8e7e6a5fea47f991
msgid "In the ``counters`` collection example, the query field is the ``_id`` field, which always has a unique index. Consider that the :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option, as in the following modified example:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:144
# bf87fc6f8d6b4b619d9327fcd955ea83
msgid "If multiple clients were to invoke the ``getNextSequence()`` method with the same ``name`` parameter, then the methods would observe one of the following behaviors:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:148
# 262cb172f27140fd81ad2733e55bac31
msgid "Exactly one :method:`~db.collection.findAndModify()` would successfully insert a new document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:151
# 5bab77dd69e547b79a2f49a729521bab
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would update the newly inserted document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:154
# ac51b6d6e7464cd4bcdb7bac087119a6
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would fail when they attempted to insert a duplicate."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:157
# 3f9a8f46d5964e4b830b627bcd3cfdf3
msgid "If the method fails due to a unique index constraint violation, retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:164
# 67e6d647784243fba27ada7afe555535
msgid "Optimistic Loop"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:166
# e3a0827d4b894368bf02eb09273813c5
msgid "In this pattern, an *Optimistic Loop* calculates the incremented ``_id`` value and attempts to insert a document with the calculated ``_id`` value. If the insert is successful, the loop ends. Otherwise, the loop will iterate through possible ``_id`` values until the insert is successful."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:172
# 10bf51b7c5684a01bb6f1214223dccce
msgid "Create a function named ``insertDocument`` that performs the \"insert if not present\" loop. The function wraps the :method:`~db.collection.insert()` method and takes a ``doc`` and a ``targetCollection`` arguments."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:177
# d307f1c5f8ab47228cf0373c27ff10e9
msgid "The :method:`db.collection.insert()` method now returns a :ref:`writeresults-insert` object that contains the status of the operation. Previous versions required an extra :method:`db.getLastErrorObj()` method call."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:208
# 693d6caf745544f389a270af44a14128
msgid "The ``while (1)`` loop performs the following actions:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:210
# 2cb679935d3f45bd9ea1caf23eab15f9
msgid "Queries the ``targetCollection`` for the document with the maximum ``_id`` value."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:213
# 8aa2fd4d476e4318847cf8e5e4f1d69b
msgid "Determines the next sequence value for ``_id`` by:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:215
# 007f187835e0463b8e4f3966096020e4
msgid "adding ``1`` to the returned ``_id`` value if the returned cursor points to a document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:218
# abece4078c2a4f99bc5d5adbea8b4ba5
msgid "otherwise: it sets the next sequence value to ``1`` if the returned cursor points to no document."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:221
# 52e2e0729d3942e3b301861be9dcc1f0
msgid "For the ``doc`` to insert, set its ``_id`` field to the calculated sequence value ``seq``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:224
# fb8c0df66dde44d88263d107777e3b42
msgid "Insert the ``doc`` into the ``targetCollection``."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:226
# 054e32d004164600bcccc185db86597c
msgid "If the insert operation errors with duplicate key, repeat the loop.  Otherwise, if the insert operation encounters some other error or if the operation succeeds, break out of the loop."
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:230
# a5beb770bb374bfcbecab5a05307b00f
msgid "Use the ``insertDocument()`` function to perform an insert:"
msgstr ""

#: ../source/tutorial/create-an-auto-incrementing-field.txt:269
# 1b8fc016c90443ad887917c0ec0830c3
msgid "The ``while`` loop may iterate many times in collections with larger insert volumes."
msgstr ""

