# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/resync-replica-set-member.txt:3
# ad999ee6a09c4c01b642c5d233daf242
msgid "Resync a Member of a Replica Set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:7
# d20b47e5af3444858bff80367b3f2d73
msgid "A :term:`replica set` member becomes \"stale\" when its replication process falls so far behind that the :term:`primary` overwrites oplog entries the member has not yet replicated. The member cannot catch up and becomes \"stale.\" When this occurs, you must completely resynchronize the member by removing its data and performing an :ref:`initial sync <replica-set-initial-sync>`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:14
# d1268c53c1fe41b08d415486d1415baf
msgid "This tutorial addressed both resyncing a stale member and to creating a new member using seed data from another member. When syncing a member, choose a time when the system has the bandwidth to move a large amount of data. Schedule the synchronization during a time of low usage or during a maintenance window."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:20
# 7e26e3eb5d644ee9ae753d24deefe31f
msgid "MongoDB provides two options for performing an initial sync:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:22
# bd2b017daddc4c71b33f7cc86ac96ba6
msgid "Restart the :program:`mongod` with an empty data directory and let MongoDB's normal initial syncing feature restore the data. This is the more simple option but may take longer to replace the data."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:26
# 02ecfa7747d74d2ab05b82a23b05c399
msgid "See :ref:`replica-set-auto-resync-stale-member`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:28
# 97c83983a4744661aae3928748482855
msgid "Restart the machine with a copy of a recent data directory from another member in the replica set. This procedure can replace the data more quickly but requires more manual steps."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:32
# 876d5952435542328ff5512ab3b1f12b
msgid "See :ref:`replica-set-resync-by-copying`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:39
# 8f7381890c1a473e87820d0559cbd40c
msgid "Procedures"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:42
# b71c83cd75cb484e80761b248e4fc751
msgid "Automatically Sync a Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:44
# d26ba869d5b646aabc3588dfa316a46f
msgid "During initial sync, :program:`mongod` will remove the content of the :setting:`~storage.dbPath`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:47
# c332196199694d22b95d370dcaff87d7
msgid "This procedure relies on MongoDB's regular process for :ref:`initial sync <replica-set-initial-sync>`. This will store the current data on the member. For an overview of MongoDB initial sync process, see the :ref:`replica-set-syncing` section."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:52
# c3f1d25edfe64a3898646e86b8c89bac
msgid "If the instance has no data, you can simply follow the :doc:`/tutorial/expand-replica-set` or :doc:`/tutorial/replace-replica-set-member` procedure to add a new member to a replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:57
# f9eeb244530646829a23d75cd49062b0
msgid "You can also force a :program:`mongod` that is already a member of the set to to perform an initial sync by restarting the instance without the content of the :setting:`~storage.dbPath` as follows:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:61
# 61854af878064ca086db3a869318d671
msgid "Stop the member's :program:`mongod` instance. To ensure a clean shutdown, use the :method:`db.shutdownServer()` method from the :program:`mongo` shell or on Linux systems, the :option:`mongod --shutdown` option."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:66
# 6d97ddd3ea4f49488dc45f3bb2469823
msgid "Delete all data and sub-directories from the member's data directory. By removing the data :setting:`~storage.dbPath`, MongoDB will perform a complete resync. Consider making a backup first."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:70
# 236f593f44fd4286b062a19f2df1d585
msgid "At this point, the :program:`mongod` will perform an initial sync. The length of the initial sync process depends on the size of the database and network connection between members of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:75
# 039a03bbbbb648ab89efd72d0c404f19
msgid "Initial sync operations can impact the other members of the set and create additional traffic to the primary and can only occur if another member of the set is accessible and up to date."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:83
# d6e4bd55a69d4c53a48d9bdbb30361d6
msgid "Sync by Copying Data Files from Another Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:85
# c5eb26e652c0417fb88280b5f940f083
msgid "This approach \"seeds\" a new or stale member using the data files from an existing member of the replica set. The data files **must** be sufficiently recent to allow the new member to catch up with the :term:`oplog`. Otherwise the member would need to perform an initial sync."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:92
# af5d0c67424440f2b4ab4f5a4c7c1a87
msgid "Copy the Data Files"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:94
# afbe6f5c3a7d426ba41574839e5077e7
msgid "You can capture the data files as either a snapshot or a direct copy. However, in most cases you cannot copy data files from a running :program:`mongod` instance to another because the data files will change during the file copy operation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:99
# e8d8687bbc694519b47c76162c7c7555
msgid "If copying data files, you must copy the content of the ``local`` database."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:102
# 84a94c6fa56647ea89d40c298a99734c
msgid "You *cannot* use a :program:`mongodump` backup to for the data files, **only a snapshot backup**. For approaches to capture a consistent snapshot of a running :program:`mongod` instance, see the :doc:`/core/backups` documentation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:108
# f4e2527dd34144c8a8e6af23c1e3cf87
msgid "Sync the Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:110
# 7ae7ffca85a9405bb44a0a57d6c726b9
msgid "After you have copied the data files from the \"seed\" source, start the :program:`mongod` instance and allow it to apply all operations from the oplog until it reflects the current state of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# b25b714352964e3894d4dbdc37d4ba7e
# 65868e75d2c54d278cb4381807ed8999
# 6e4e15a04f4041ecbe55572c6cb4ac8c
msgid "replica set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
# b25b714352964e3894d4dbdc37d4ba7e
msgid "sync"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# 65868e75d2c54d278cb4381807ed8999
# 6e4e15a04f4041ecbe55572c6cb4ac8c
msgid "resync"
msgstr ""

