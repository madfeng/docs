# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:3
# fdf0b3075a4449cc80d839cd99f96730
msgid "Reconfigure a Replica Set with Unavailable Members"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:7
# effefeed0d5f43d487cc54661d2702e1
msgid "To reconfigure a :term:`replica set` when a **minority** of members are unavailable, use the :method:`rs.reconfig()` operation on the current :term:`primary`, following the example in the :ref:`Replica Set Reconfiguration Procedure <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:14
# 9990954523524b0db6f14e313dc0dc58
msgid "This document provides the following options for re-configuring a replica set when a **majority** of members are *not* accessible:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:17
# d43f6de3cb854160b5b158e7ba137d56
msgid ":ref:`replica-set-force-reconfiguration`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:18
# 6238a9e91d1944d3897721f9201b845f
msgid ":ref:`replica-set-reconfigure-by-replacing`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:20
# fe5c6f5a97894be9aa40b6ed6b5e6178
msgid "You may need to use one of these procedures, for example, in a geographically distributed replica set, where *no* local group of members can reach a majority. See :ref:`replica-set-elections` for more information on this situation."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:29
# 82295bb16bc04b3a944de73cca676199
msgid "Reconfigure by Forcing the Reconfiguration"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:33
# e36bdc9219b44e2b916292cf10136656
msgid "This procedure lets you recover while a majority of :term:`replica set` members are down or unreachable. You connect to any surviving member and use the ``force`` option to the :method:`rs.reconfig()`  method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:37
# f3ca729356494f7f925487929a40ff35
msgid "The ``force`` option forces a new configuration onto the member. Use this procedure only to recover from catastrophic interruptions. Do not use ``force`` every time you reconfigure. Also, do not use the ``force`` option in any automatic scripts and do not use ``force`` when there is still a :term:`primary`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:42
# d9e4823f2ecc46c9bab78074dbec3655
msgid "To force reconfiguration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:44
# bf1287ad79544b9da4e608dfefd37345
msgid "Back up a surviving member."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:46
# edb2da05bf664fcabc8af6dd94a6d2c2
msgid "Connect to a surviving member and save the current configuration. Consider the following example commands for saving the configuration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:55
# b7338fbd362745f59b62ab972ffb7007
msgid "On the same member, remove the down and unreachable members of the replica set from the :data:`~local.system.replset.members` array by setting the array equal to the surviving members alone. Consider the following example, which uses the ``cfg`` variable created in the previous step:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:65
# 4b196fae493848bfa5f6b416bdee0d39
msgid "On the same member, reconfigure the set by using the :method:`rs.reconfig()` command with the ``force`` option set to ``true``:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:73
# 2f7fd22abc364de69143ddef24d8625e
msgid "This operation forces the secondary to use the new configuration. The configuration is then propagated to all the surviving members listed in the ``members`` array. The replica set then elects a new primary."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:79
# b109a97010a8432e962ea1e40604fc7d
msgid "When you use ``force : true``, the version number in the replica set configuration increases significantly, by tens or hundreds of thousands. This is normal and designed to prevent set version collisions if you accidentally force re-configurations on both sides of a network partition and then the network partitioning ends."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:86
# 8b9a194c9fd345bb97020d7628283508
msgid "If the failure or partition was only temporary, shut down or decommission the removed members as soon as possible."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:92
# 1ad4997b29884c988290371bb592908d
msgid "Reconfigure by Replacing the Replica Set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:94
# 81f51f0e0d7c4c2e8fb7d8296c2ddec5
msgid "Use the following procedure **only** for versions of MongoDB prior to version 2.0. If you're running MongoDB 2.0 or later, use the above procedure, :ref:`replica-set-force-reconfiguration`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:98
# 9de3b1b69ed141acb73f43f1e2bb83d2
msgid "These procedures are for situations where a *majority* of the :term:`replica set` members are down or unreachable. If a majority is *running*, then skip these procedures and instead use the :method:`rs.reconfig()` command according to the examples in :ref:`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:104
# c3c24aeb79794493adde89258898de18
msgid "If you run a pre-2.0 version and a majority of your replica set is down, you have the two options described here. Both involve replacing the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:109
# 62ccd91738564dbdadd17248e62faeb5
msgid "Reconfigure by Turning Off Replication"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:111
# e1fc0e30691f444bb91d81e72cd3630b
msgid "This option replaces the :term:`replica set` with a :term:`standalone` server."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:113
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:151
# 67f426bbfdd74034913dc346aaa7804a
# f052d0a492ff48a09d6ad4aef990a4d1
msgid "Stop the surviving :program:`mongod` instances. To ensure a clean shutdown, use an existing :term:`control script` or use the :method:`db.shutdownServer()` method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:116
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:155
# 266409b007344003873ada076e111faa
# 38ea2e186c2b4c2da7f87795856baf48
msgid "For example, to use the :method:`db.shutdownServer()` method, connect to the server using the :program:`mongo` shell and issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:125
# fa45e4758eb848d5abb2f7044d8a8f57
msgid "Create a backup of the data directory (i.e. :setting:`~storage.dbPath`) of the surviving members of the set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:0
# 798efdc6c21040bfbdff5bb2b498e2d5
msgid "Optional"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:131
# 4987358d36254215aa4a2704aa8a6c03
msgid "Restart one of the :program:`mongod` instances *without* the :option:`--replSet <mongod --replSet>` parameter."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:134
# 9746f003c6cc48b19dfff6f33e890666
msgid "The data is now accessible and provided by a single server that is not a replica set member. Clients can use this server for both reads and writes."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:138
# f406e5e3401140cbb369af709097a4c7
msgid "When possible, re-deploy a replica set to provide redundancy and to protect your deployment from operational interruption."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:144
# 6a982acd3c3b4b6a9bbd4f5023a32b61
msgid "Reconfigure by \"Breaking the Mirror\""
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:146
# 67271c30b6714632aecf82abc93da78b
msgid "This option selects a surviving :term:`replica set` member to be the new :term:`primary` and to \"seed\" a new replica set. In the following procedure, the new primary is ``db0.example.net``. MongoDB copies the data from ``db0.example.net`` to all the other members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:164
# 3a54507142ec4251aa9368f17a96a13e
msgid "Move the data directories (i.e. :setting:`~storage.dbPath`) for all the members except ``db0.example.net``, so that all the members except ``db0.example.net`` have empty data directories. For example:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:173
# 19e8e942a1d74203829623701ae10729
msgid "Move the data files for ``local`` database (i.e. ``local.*``) so that ``db0.example.net`` has no local database. For example"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:181
# b7ed8bc8e03943389c10b9210370c35a
msgid "Start each member of the replica set normally."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:183
# 553d464514ab427cb3356949aa3461ce
msgid "Connect to ``db0.example.net`` in a :program:`mongo` shell and run :method:`rs.initiate()` to initiate the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:186
# 724be9df08684accb92a870856f36fbc
msgid "Add the other set members using :method:`rs.add()`. For example, to add a member running on ``db1.example.net`` at port ``27017``, issue the following command:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:194
# 11120042464344718406e6a1ae524fe8
msgid "MongoDB performs an initial sync on the added members by copying all data from ``db0.example.net`` to the added members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:197
# cb21ad2c3c0749068799fb99ec6ebbb7
msgid ":doc:`/tutorial/resync-replica-set-member`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 6cfec298eb3f4323a618c0b51ba2f0f4
msgid "replica set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 6cfec298eb3f4323a618c0b51ba2f0f4
msgid "reconfiguration"
msgstr ""

