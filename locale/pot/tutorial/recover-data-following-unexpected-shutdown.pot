# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:3
# d888bdb4e47444278f3fc9f9afe3def5
msgid "Recover Data after an Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:7
# 1b9d13cf2650452abac250785efee65e
msgid "If MongoDB does not shutdown cleanly [#clean-shutdown]_ the on-disk representation of the data files will likely reflect an inconsistent state which could lead to data corruption. [#validation]_"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:11
# 06b402666b964864845804960b9167e1
msgid "To prevent data inconsistency and corruption, always shut down the database cleanly and use the :ref:`durability journaling <setting-journal>`. MongoDB writes data to the journal, by default, every 100 milliseconds, such that MongoDB can always recover to a consistent state even in the case of an unclean shutdown due to power loss or other system failure."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:18
# a862310bc4bc4e7b9796964a5a74f09d
msgid "If you are *not* running as part of a :term:`replica set` **and** do *not* have journaling enabled, use the following procedure to recover data that may be in an inconsistent state. If you are running as part of a replica set, you should *always* restore from a backup or restart the :program:`mongod` instance with an empty :setting:`~storage.dbPath` and allow MongoDB to perform an initial sync to restore the data."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:25
# b7a5d2e77df945f6b9bbd439ea3987ac
msgid "The :doc:`/administration` documents, including :ref:`Replica Set Syncing <replica-set-syncing>`, and the documentation on the :option:`--repair <mongod --repair>` :setting:`~storage.repairPath` and :setting:`storage.journal.enabled` settings."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:31
# a5cd54bc63dc450aa1b9ae98b429bb8d
msgid "To ensure a clean shut down, use the :method:`db.shutdownServer()` from the :program:`mongo` shell, your control script, the :option:`mongod --shutdown` option on Linux systems, \"Control-C\" when running :program:`mongod` in interactive mode, or ``kill $(pidof mongod)`` or ``kill -2 $(pidof mongod)``."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:37
# 469456ccbe9247e486177f78f925c6b7
msgid "You can also use the :method:`db.collection.validate()` method to test the integrity of a single collection. However, this process is time consuming, and without journaling you can safely assume that the data is in an invalid state and you should either run the repair operation or resync from an intact member of the replica set."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:45
# e89eb30ee29f46238d94d0e1ee0e82e5
msgid "Process"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:48
# 69afb999cc634916a95d593db5afe6d3
msgid "Indications"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:50
# 95d30618afb942d2be764991d8dfbcfb
msgid "When you are aware of a :program:`mongod` instance running without journaling that stops unexpectedly **and** you're not running with replication, you should always run the repair operation before starting MongoDB again. If you're using replication, then restore from a backup and allow replication to perform an initial :ref:`sync <replica-set-syncing>` to restore data."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:56
# 69601b3bc72844428d6c12fcad0f9145
msgid "If the ``mongod.lock`` file in the data directory specified by :setting:`~storage.dbPath`, ``/data/db`` by default, is *not* a zero-byte file, then :program:`mongod` will refuse to start, and you will find a message that contains the following line in your MongoDB log our output:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:66
# 4ff8b927a55f44cab1dde50f5d957dc3
msgid "This indicates that you need to run :program:`mongod` with the :option:`--repair <mongod --repair>` option. If you run repair when the ``mongodb.lock`` file exists in your :setting:`~storage.dbPath`, or the optional :option:`--repairpath <mongod --repairpath>`, you will see a message that contains the following line:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:76
# a1aeabefaf5d4a89a285326e737fcad5
msgid "If you see this message, as a last resort you may remove the lockfile **and** run the repair operation before starting the database normally, as in the following procedure:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:81
# 31d742a917704389ba803725f73df1de
msgid "Overview"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:83
# 3e1f62b2bf6f41bb95d3c332cfc456d1
msgid "Recovering a member of a replica set."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:85
# 6d50cb74b62548bcb272cde4f804dfce
msgid "Do not use this procedure to recover a member of a :term:`replica set`. Instead you should either restore from a :doc:`backup </core/backups>` or perform an initial sync using data from an intact member of the set, as described in :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:91
# 9dd9aa052eda4a37a37e2256c3dfc262
msgid "There are two processes to repair data files that result from an unexpected shutdown:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:94
# b99905577ac44e569fb6b47d96697abd
msgid "Use the :option:`--repair <mongod --repair>` option in conjunction with the :option:`--repairpath <mongod --repairpath>` option. :program:`mongod` will read the existing data files, and write the existing data to new data files. This does not modify or alter the existing data files."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:100
# eb5c78cf1fd14c46be3857e8c3bc5bd7
msgid "You do not need to remove the ``mongod.lock`` file before using this procedure."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:103
# f2c2e90de8934d85b154553c9b0ef9f5
msgid "Use the :option:`--repair <mongod --repair>` option. :program:`mongod` will read the existing data files, write the existing data to new files and replace the existing, possibly corrupt, files with new files."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:108
# f9da004676084c3189f596b5abbff5d5
msgid "You must remove the ``mongod.lock`` file before using this procedure."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:113
# d74f72e7fbd744d98c7518f3bf284202
msgid ":option:`--repair <mongod --repair>` functionality is also available in the shell with the :method:`db.repairDatabase()` helper for the :dbcommand:`repairDatabase` command."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:120
# 6bcab717a800469bbd87ca235fcda32b
msgid "Procedures"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:122
# bcd08430a7df4ea3ab8ffb7dba386103
msgid "Always Run :program:`mongod` as the same user to avoid changing the permissions of the MongoDB data files."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:125
# f1a0cf86ac784bd6873094598d452047
msgid "To repair your data files using the :option:`--repairpath <mongod --repairpath>` option to preserve the original data files unmodified."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:128
#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:169
# 45af40aa5e574689b9fdb8372a1f2e7f
# 35042bc03e2948bb9ef0f63f92d19f87
msgid "Start :program:`mongod` using :option:`--repair <mongod --repair>` to read the existing data files."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:135
# 1d8a42d19dda44a5b66199278da8798a
msgid "When this completes, the new repaired data files will be in the ``/data/db0`` directory."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:138
# e12900b4b2724de6b6a76bdd9499c88e
msgid "Start :program:`mongod` using the following invocation to point the :setting:`~storage.dbPath` at ``/data/db0``:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:145
# 03fd2aa86c604b66a2a4bb27e1e4fff0
msgid "Once you confirm that the data files are operational you may delete or archive the old data files in the ``/data/db`` directory. You may also wish to move the repaired files to the old database location or update the :setting:`~storage.dbPath` to indicate the new location."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:150
# cca976a4743d4ac68da6540cf497e84e
msgid "To repair your data files without preserving the original files, do not use the :option:`--repairpath <mongod --repairpath>` option, as in the following procedure:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:154
# 55469194c6ad4b0586167e0a3ffbd45d
msgid "Remove the stale lock file:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:160
# 9b75493b594440e0b1bcf7c99037d845
msgid "Replace ``/data/db`` with your :setting:`~storage.dbPath` where your MongoDB instance's data files reside."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:165
# b334456874ce4c6998a7e3e9b1c622d6
msgid "After you remove the ``mongod.lock`` file you *must* run the :option:`--repair <mongod --repair>` process before using your database."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:176
# 74b24b3968314dde990bcc56d9add7a0
msgid "When this completes, the repaired data files will replace the original data files in the ``/data/db`` directory."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:179
# 09000ac34d1b44aebeb21d92443e097f
msgid "Start :program:`mongod` using the following invocation to point the :setting:`~storage.dbPath` at ``/data/db``:"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:187
# 5a1b1a9898a14dc59b1a4f033089a22c
msgid "``mongod.lock``"
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:189
# e4fa413746b24dc6b2d82b0b3042ed12
msgid "In normal operation, you should **never** remove the ``mongod.lock`` file and start :program:`mongod`. Instead consider the one of the above methods to recover the database and remove the lock files. In dire situations you can remove the lockfile, and start the database using the possibly corrupt files, and attempt to recover data from the database; however, it's impossible to predict the state of the database in these situations."
msgstr ""

#: ../source/tutorial/recover-data-following-unexpected-shutdown.txt:197
# 9f209afe54e24af58201efd1a7be6f10
msgid "If you are not running with journaling, and your database shuts down unexpectedly for *any* reason, you should always proceed *as if* your database is in an inconsistent and likely corrupt state. If at all possible restore from :doc:`backup </core/backups>` or, if running as a :term:`replica set`, restore by performing an initial sync using data from an intact member of the set, as described in :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

