# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/restore-replica-set-from-backup.txt:3
# 95545c4c55b249d7b6e5add24ef7413d
msgid "Restore a Replica Set from MongoDB Backups"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:7
# 5f05d1654219467db5a8c0f826c61a3c
msgid "This procedure outlines the process for taking MongoDB data and restoring that data into a new :term:`replica set`. Use this approach for seeding test deployments from production backups as well as part of disaster recovery."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:12
# a075021e977e421d8bbc8e0e11b6045c
msgid "You *cannot* restore a single data set to three new :program:`mongod` instances and *then* create a replica set. In this situation MongoDB will force the secondaries to perform an initial sync. The procedures in this document describe the correct and efficient ways to deploy a replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:19
# 0d536c0d2ddf467588b8d0445b32db76
msgid "Restore Database into a Single Node Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:21
# 70b2f3cfbd8c4ec68d3c34112f7f2d22
msgid "Obtain backup MongoDB Database files. These files may come from a :doc:`file system snapshot </tutorial/backup-with-filesystem-snapshots>`.  The `MongoDB Management Service (MMS) <https://mms.mongodb.com/?pk_campaign=mongodb-docs-restore-rs-tutorial>`_ produces MongoDB database files for :mms:`stored snapshots </backup/tutorial/restore-from-snapshot/>` and :mms:`point and time snapshots </backup/tutorial/restore-from-point-in-time-snapshot/>`. You can also use :program:`mongorestore` to restore database files using data created with :program:`mongodump`. See :doc:`/tutorial/backup-with-mongodump` for more information."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:35
# 8910b7b563964dc99a6b15caea655259
msgid "Start a :program:`mongod` using data files from the backup as the ``dbpath``. In the following example, ``/data/db`` is the ``dbpath`` to the data files:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:43
# 86f6aa7b55a54f64ae6746de9e5b8060
msgid "Convert your standalone :program:`mongod` process to a single node replica set by shutting down the :program:`mongod` instance, and restarting it with the :option:`--replSet <mongod --replSet>` option, as in the following example:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:0
# 1a0a291f90a84fa6b6457d7f504839f2
msgid "Optional"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:54
# c38abc340799404d82df08e81eaed62d
msgid "Consider explicitly setting a :setting:`~replication.oplogSizeMB` to control the size of the :term:`oplog` created for this replica set member."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:58
# 284840aa5b514edca9e92c4b7379fcae
msgid "Connect to the :program:`mongod` instance."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:60
# 870f4c543d944467aba9fb3302606465
msgid "Use :method:`rs.initiate()` to initiate the new replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:63
# 6ce71fc91644421198fd996ea01feb09
msgid "Add Members to the Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:65
# 955aa024897d43a08e99d7c30999d35f
msgid "MongoDB provides two options for restoring secondary members of a replica set:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:68
# f2e973d593684a6987591c54b2c21db5
msgid "Manually copy the database files to each data directory."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:70
# 3119317a06034596ad39f45e7d12f8dc
msgid "Allow :ref:`initial sync <replica-set-initial-sync>` to distribute data automatically."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:73
# 6632582c7c9e497f9a9755f50e5f1083
msgid "The following sections outlines both approaches."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:77
# 47071108ccd04dc18b0df7748dcca3fe
msgid "If your database is large, initial sync can take a long time to complete. For large databases, it might be preferable to copy the database files onto each host."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:82
# 234a9b9456d14105bca3278e84381782
msgid "Copy Database Files and Restart :program:`mongod` Instance"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:84
# 6ecc3d819c104ecaaaea18d02edfed8d
msgid "Use the following sequence of operations to \"seed\" additional members of the replica set with the restored data by copying MongoDB data files directly."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:88
# a1a2fff414e348a7826d026ba2a919ff
msgid "Shut down the :program:`mongod` instance that you restored. Using :option:`--shutdown <mongod --shutdown>` or :method:`db.shutdownServer()` to ensure a clean shut down."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:92
# 371808e9a5984aa48f586cf838f09e18
msgid "Copy the :term:`primary's <primary>` data directory into the :setting:`~storage.dbPath` of the other members of the replica set. The :setting:`~storage.dbPath` is ``/data/db`` by default."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:96
# 0c150896082d4ae7a19cb13a4faeb684
msgid "Start the :program:`mongod` instance that you restored."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:98
# b2fecadcd8bc420694acc53e3f2dd16d
msgid "In a :program:`mongo` shell connected to the :term:`primary`, add the :term:`secondaries <secondary>` to the replica set using :method:`rs.add()`. See :doc:`/tutorial/deploy-replica-set` for more information about deploying a replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:104
# 3fcd41b076674291b70d30d36ce07375
msgid "Update Secondaries using Initial Sync"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:106
# 87ee683e37c34634903654e2aba399ca
msgid "Use the following sequence of operations to \"seed\" additional members of the replica set with the restored data using the default *initial sync* operation."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:110
# 544a8fb8b5f54b93ab8126b64d16ae48
msgid "Ensure that the data directories on the prospective replica set members are empty."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:113
# 28e295c6a1b14d739872b02acb677fae
msgid "Add each prospective member to the replica set. :ref:`Initial Sync <replica-set-initial-sync>` will copy the data from the :term:`primary` to the other members of the replica set."
msgstr ""

