# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:3
# e000732ebee848ecbf6e5cccfd83ebc8
msgid "Getting Started with the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:7
# 39766931101f4fe78def3f768812e3fb
msgid "This document provides a basic introduction to using the :program:`mongo` shell. See :doc:`/installation` for instructions on installing MongoDB for your system."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:12
# f04b00baaa2240ba8cb5ed26f94d45a1
msgid "Start the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:14
# ec4033078b2e42cdabd00441e8c81cef
msgid "To start the :program:`mongo` shell and connect to your :doc:`MongoDB </reference/program/mongod>` instance running on **localhost** with **default port**:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:17
# 2c93b3e400c94000bf9a0237167cfd25
msgid "Go to your ``<mongodb installation dir>``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:23
# e3c42d0868fd45d886c627db5f145f28
msgid "Type ``./bin/mongo`` to start :program:`mongo`:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:29
# 6398713c15354895867cbfc19306789a
msgid "If you have added the ``<mongodb installation dir>/bin`` to the ``PATH`` environment variable, you can just type ``mongo`` instead of ``./bin/mongo``."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:33
# 26888f764b12476ab19ff629cedae2a5
msgid "To display the database you are using, type ``db``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:39
# e8e255374a1a4022bc2cc22d5b9321a2
msgid "The operation should return ``test``, which is the default database. To switch databases, issue the ``use <db>`` helper, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:47
# fda40b6178894f26b20b983a7d500c24
msgid "To list the available databases, use the helper ``show dbs``. See also :ref:`mongo-shell-getSiblingDB` to access a different database from the current database without switching your current database context (i.e. ``db.``.)"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:52
# 077003bec01d42efb90c77bea936ecf7
msgid "To start the :program:`mongo` shell with other options, see :ref:`examples of starting up mongo <mongo-usage-examples>` and :doc:`mongo reference </reference/program/mongo>` which provides details on the available options."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:59
# 244a78d4b6154a418cad36aaa91abe57
msgid "When starting, :program:`mongo` checks the user's :envvar:`HOME` directory for a JavaScript file named :ref:`.mongorc.js <mongo-mongorc-file>`. If found, :program:`mongo` interprets the content of :file:`.mongorc.js` before displaying the prompt for the first time. If you use the shell to evaluate a JavaScript file or expression, either by using the :option:`--eval <mongo --eval>` option on the command line or by specifying :ref:`a .js file to mongo <mongo-shell-file>`, :program:`mongo` will read the ``.mongorc.js`` file *after* the JavaScript has finished processing. You can prevent ``.mongorc.js`` from being loaded by using the :option:`--norc` option."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:73
# 7dc30ab23ef649ab8abf977060b35c35
msgid "Executing Queries"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:75
# ab8db824439a4aaca2d0dd5033b50d40
msgid "From the :program:`mongo` shell, you can use the :doc:`shell methods </reference/method>` to run queries, as in the following example:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:82
# 67bc08b3dd42470a9063bd9e9096123b
msgid "The ``db`` refers to the current database."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:84
# 5f26a072382b412792f1b4b96c6874f3
msgid "The ``<collection>`` is the name of the collection to query. See :ref:`mongo-shell-help-collection` to list the available collections."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:87
# 792ce31b4fdb45eb8ec957a2e4b0bed1
msgid "If the :program:`mongo` shell does not accept the name of the collection, for instance if the name contains a space, hyphen, or starts with a number, you can use an alternate syntax to refer to the collection, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:98
# 35f571b106944049b9c0a29307c0c334
msgid "The :method:`~db.collection.find()` method is the JavaScript method to retrieve documents from ``<collection>``. The :method:`~db.collection.find()` method returns a :term:`cursor` to the results; however, in the :program:`mongo` shell, if the returned cursor is not assigned to a variable using the ``var`` keyword, then the cursor is automatically iterated up to 20 times to print up to the first 20 documents that match the query. The :program:`mongo` shell will prompt ``Type it`` to iterate another 20 times."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:108
# 796734d3f87d46618bc82c95bd14ef5f
msgid "You can set the ``DBQuery.shellBatchSize`` attribute to change the number of iteration from the default value ``20``, as in the following example which sets it to ``10``:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:116
# 700d6ea089ef4dc5bcb7ea968f4cfa8e
msgid "For more information and examples on cursor handling in the :program:`mongo` shell, see :doc:`/core/cursors`."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:119
# 736c2ab684514a75a62e2953ffa6ea96
msgid "See also :ref:`mongo-shell-help-cursor` for list of cursor help in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:122
# 696da003258e4fc1a1b9cd18a2938d77
msgid "For more documentation of basic MongoDB operations in the :program:`mongo` shell, see:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:125
# 80b64c7673134e9a9ca3d464a4b83695
msgid ":doc:`/tutorial/getting-started`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:126
# aba76f8e333d46e78627b16ed5dc3465
msgid ":doc:`/reference/mongo-shell`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:127
# 9fe47152922a4a77b8e2da8525efb5e2
msgid ":doc:`/core/read-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:128
# 9562eaa5eb42441d96850b9a2b20e945
msgid ":doc:`/core/write-operations`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:129
# 05ae15693e564fe3966b7575da6edb91
msgid ":doc:`/administration/indexes`"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:134
# 3e30bc64ec894c2bbdeb79ea71424aa5
msgid "Print"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:136
# 1c71bb5d914b4675aa73f0c4b631b795
msgid "The :program:`mongo` shell automatically prints the results of the :method:`~db.collection.find()` method if the returned cursor is not assigned to a variable using the ``var`` keyword. To format the result, you can add the ``.pretty()`` to the operation, as in the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:146
# b01ac726229a4b5eae15831dcef8bf8c
msgid "In addition, you can use the following explicit print methods in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:149
# 760e4aa3e87f4ae0bb0c5ed7b8a9b41b
msgid "``print()`` to print without formatting"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:151
# e5cee7d33af04a67b20ca9a5202700a3
msgid "``print(tojson(<obj>))`` to print with :term:`JSON` formatting and equivalent to ``printjson()``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:154
# 11cbc2a374a4444ab9fc887a3db6b868
msgid "``printjson()`` to print with :term:`JSON` formatting and equivalent to ``print(tojson(<obj>))``"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:158
# 827bd897241b4025b96ebca1e68c3dca
msgid "Evaluate a JavaScript File"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:1
# a9d1fb973df74313b708f757cd2b7402
msgid "You can execute a ``.js`` file from within the :program:`mongo` shell, using the :method:`load()` function, as in the following:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:8
# dce5c49203d6424e9585f515adb8a02e
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:10
# f391f180e1df4421ac5b2953aa588b8f
msgid "The :method:`load()` method accepts relative and absolute paths. If the current working directory of the :program:`mongo` shell is :file:`/data/db`, and the :file:`myjstest.js` resides in the :file:`/data/db/scripts` directory, then the following calls within the :program:`mongo` shell would be equivalent:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:21
# e68c075e48874bdd8afa22efec0fc8d9
msgid "There is no search path for the :method:`load()` function. If the desired script is not in the current working directory or the full specified path, :program:`mongo` will not be able to access the file."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:163
# 704d31cb87f4463da13b5a8b2f9cd60b
msgid "Use a Custom Prompt"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:165
# d989c36e813a46f2b6053dea6fefb323
msgid "You may modify the content of the prompt by creating the variable ``prompt`` in the shell. The prompt variable can hold strings as well as any arbitrary JavaScript. If ``prompt`` holds a function that returns a string, :program:`mongo` can display dynamic information in each prompt. Consider the following examples:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:0
# ad805f02af9c45d5a10ca9926132db23
# b1bf2dba68834b23802b01ae83db5c47
# f0254134b4ba48138ffee5e682231e97
msgid "Example"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:173
# bdae5baea3ba49f0af64c953460c459f
msgid "Create a prompt with the number of operations issued in the current session, define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:183
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:204
#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:224
# f892693254c24acc8f23041e62f3bc99
# 23445a6d64ba411d93bbd5671ec84383
# 0a62e0edfab7425ba6787ddd795ceab9
msgid "The prompt would then resemble the following:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:193
# daf1afd22a8948c2aedf0bcb81bf188e
msgid "To create a :program:`mongo` shell prompt in the form of ``<database>@<hostname>$`` define the following variables:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:214
# 955a12b3bfef4c7581ba55914c09dc34
msgid "To create a :program:`mongo` shell prompt that contains the system up time *and* the number of documents in the current database, define the following prompt variable:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:232
# 375b4c9db49d452ca1e51070b0728d63
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:236
# dee549c60b624951bc23fe3c807041e0
msgid "In the :program:`mongo` shell you can use the ``edit`` operation to edit a function or variable in an external editor. The ``edit`` operation uses the value of your environments ``EDITOR`` variable."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:240
# c4f3bc1951094ac28b07eb5449137f80
msgid "At your system prompt you can define the ``EDITOR`` variable and start :program:`mongo` with the following two operations:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:248
# 2169135041904cc3895f124af9893d23
msgid "Then, consider the following example shell session:"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:270
# 98bc580bc0d945a5b77d3e6ad979e32f
msgid "As :program:`mongo` shell interprets code edited in an external editor, it may modify code in functions, depending on the JavaScript compiler. For :program:`mongo` may convert ``1+1`` to ``2`` or remove comments. The actual changes affect only the appearance of the code and will vary based on the version of JavaScript used but will not affect the semantics of the code."
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:280
# 0d4ac434086f4696b9fde250bb9d0f8d
msgid "Exit the Shell"
msgstr ""

#: ../source/tutorial/getting-started-with-the-mongo-shell.txt:282
# 1b1e49a79f564f0e97d9d0f462740dd0
msgid "To exit the shell, type ``quit()`` or use the ``<Ctrl-c>`` shortcut."
msgstr ""

