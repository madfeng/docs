# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/build-indexes-on-replica-sets.txt:8
# 07915f17636f482ea95b4dfd8cbbc219
msgid "Build Indexes on Replica Sets"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:12
# b6749667aa9647d3867073893eeefbb1
msgid "For replica sets, secondaries will begin building indexes *after* the :term:`primary` finishes building the index. In :term:`sharded clusters <sharded cluster>`, the :program:`mongos` will send :method:`ensureIndex() <db.collection.ensureIndex()>` to the primary members of the replica set for each shard, which then replicate to the secondaries after the primary finishes building the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:19
# 7dcb62895fb146d48cbc548a1cf3b368
msgid "To minimize the impact of building an index on your replica set, use the following procedure to build indexes:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:0
# b4c6a9551f74480bbc93b17397a0435a
msgid "See"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:26
# d605824897bb4f9f8d37286a6ebb4bbb
msgid "Considerations"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:28
# 093e669093214979b7d1933ffa26dc2b
msgid "Ensure that your :term:`oplog` is large enough to permit the indexing or re-indexing operation to complete without falling too far behind to catch up. See the :ref:`oplog sizing <replica-set-oplog-sizing>` documentation for additional information."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:34
# 6ffe2cdb84d344e69c8e46d887345b7c
msgid "This procedure *does* take one member out of the replica set at a time. However, this procedure will only affect one member of the set at a time rather than *all* secondaries at the same time."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:38
# 4c6737943fd14c9db47e06832810f3f0
msgid "Do **not** use this procedure when building a :ref:`unique index <index-type-unique>` with the ``dropDups`` option."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:41
# a0cf9aa5714341e8b49ace1c313b9162
msgid "Before version 2.6 :ref:`Background index creation operations <index-creation-background>` become *foreground* indexing operations on :term:`secondary` members of replica sets. After 2.6, background index builds replicate as background index builds on the secondaries."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:49
# 219a6c8e6f604da59d728f55ee37ee91
msgid "Procedure"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:53
# 33ffdd39e4bb488eb7973f9c47a39736
msgid "If you need to build an index in a :term:`sharded cluster`, repeat the following procedure for each replica set that provides each :term:`shard`."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:60
# 0f8e90825f3b470eb84c295784bf67f1
msgid "Stop One Secondary"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:62
# 2c01b422bfcf484191811341ee1ae92c
msgid "Stop the :program:`mongod` process on one secondary. Restart the :program:`mongod` process *without* the :option:`--replSet <mongod --replSet>` option and running on a different port. [#different-port]_ This instance is now in \"standalone\" mode."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:67
# b5a5bc34461d4c82a585d5e5b4e70a5b
msgid "For example, if your :program:`mongod` *normally* runs with on the default port of ``27017`` with the :option:`--replSet <mongod --replSet>` option you would use the following invocation:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:75
# 39b5d84efdeb482da3be57d00d3918b7
msgid "By running the :program:`mongod` on a different port, you ensure that the other members of the replica set and all clients will not contact the member while you are building the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:83
# 91bd8a030ecb4eb59ef3ef7b6eadc888
msgid "Build the Index"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:85
# 2d537104fbf846b9bd5b9b954a7c559f
msgid "Create the new index using the :method:`~db.collection.ensureIndex()` in the :program:`mongo` shell, or comparable method in your driver. This operation will create or rebuild the index on this :program:`mongod` instance"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:90
# 30020347a7ed43c5af200b0f394bb7e2
msgid "For example, to create an ascending index on the ``username`` field of the ``records`` collection, use the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:98
# a601431fd2794f149f757c8664fb93a5
msgid ":doc:`/tutorial/create-an-index` and :doc:`/tutorial/create-a-compound-index` for more information."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:104
# e300f80a48254a3caa702a412793fe73
msgid "Restart the Program ``mongod``"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:106
# 2a03f414dcf942959f90c6a619698559
msgid "When the index build completes, start the :program:`mongod` instance with the :option:`--replSet <mongod --replSet>` option on its usual port:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:113
# 0e8b18bc9c6043af9337cc243f987f32
msgid "Modify the port number (e.g. ``27017``) or the replica set name (e.g. ``rs0``) as needed."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:116
# ff2dfe23505e46de867fa59aa1bb0552
msgid "Allow replication to catch up on this member."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:119
# 3a1efe0850c14efe9ed270a0f2ed54c6
msgid "Build Indexes on all Secondaries"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:121
# 4db6946eb4fc45b9add5441068242722
msgid "Secondary members can now :doc:`build indexes in the background </tutorial/build-indexes-in-the-background>`. Previously all index builds on secondaries were in the foreground."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:126
# c1b370b2a83e404f845604761f1374ab
msgid "For each secondary in the set, build an index according to the following steps:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:129
#: ../source/tutorial/build-indexes-on-replica-sets.txt:149
# 6c73e4d9e9dd452b825fb4d2da822359
# b8faf0994d104df097eb6cc53755c597
msgid ":ref:`tutorial-index-on-replica-sets-stop-one-member`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:130
#: ../source/tutorial/build-indexes-on-replica-sets.txt:151
# 914f99e0a83b4b3d81f8bafa0fb55c1c
# eb4d5822d1f044938b39a08a708c48c7
msgid ":ref:`tutorial-index-on-replica-sets-build-index`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:131
#: ../source/tutorial/build-indexes-on-replica-sets.txt:153
# fbc9b6bdbbaa47e0976c960f7fc7cdf5
# 8fab374e4d2f47e0966543161aa4287e
msgid ":ref:`tutorial-index-on-replica-sets-restart-mongod`"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:134
# d55dcd8dc0f44f218d655462c2cb90c6
msgid "Build the Index on the Primary"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:136
# 8154cd94df7944aeaf621b2ce54ba112
msgid "To build an index on the primary you can either:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:138
# 32519e7f0e3e4891b9bc45112f55fc6e
msgid ":doc:`Build the index in the background </tutorial/build-indexes-in-the-background>` on the primary."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:141
# 851ba808f6cc49ccb3d4553a1fb773fa
msgid "Step down the primary using the :method:`rs.stepDown()` method in the :program:`mongo` shell to cause the current primary to become a secondary graceful and allow the set to elect another member as primary."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:146
# 99371913c4bb421aaa6adbb8540c11f3
msgid "Then repeat the index building procedure, listed below, to build the index on the primary:"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:155
# b801524695d84fac90ecbb194329235d
msgid "Building the index on the background, takes longer than the foreground index build and results in a less compact index structure. Additionally, the background index build may impact write performance on the primary. However, building the index in the background allows the set to be continuously up for write operations during while MongoDB builds the index."
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
# acb0c5d87015425a816660d71b4a5a80
# 3aaef981182045a888c9efa44c841876
msgid "index"
msgstr ""

#: ../source/tutorial/build-indexes-on-replica-sets.txt:1
#: ../source/tutorial/build-indexes-on-replica-sets.txt:2
# acb0c5d87015425a816660d71b4a5a80
# 3aaef981182045a888c9efa44c841876
msgid "replica set"
msgstr ""

