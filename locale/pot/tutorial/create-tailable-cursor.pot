# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/create-tailable-cursor.txt:3
# 4107f0ab8d7a483c9a0e3091b75f76aa
msgid "Create Tailable Cursor"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:8
# 6ea532498d6d455eacfe3c5dfbba0c44
msgid "Overview"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:10
# 07069bc8086645c79751807d2aeb9fd7
msgid "By default, MongoDB will automatically close a cursor when the client has exhausted all results in the cursor. However, for :doc:`capped collections </core/capped-collections>` you may use a *Tailable Cursor* that remains open after the client exhausts the results in the initial cursor. Tailable cursors are conceptually equivalent to the ``tail`` Unix command with the ``-f`` option (i.e. with \"follow\" mode). After clients insert new additional documents into a capped collection, the tailable cursor will continue to retrieve documents."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:20
# 3b16d9b290e84c3dab56e655c9026d08
msgid "Use tailable cursors on capped collections that have high write volumes where indexes aren't practical. For instance, MongoDB :doc:`replication </replication>` uses tailable cursors to tail the primary's :term:`oplog`."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:27
# 7fc4c3a53d2e47118d201a8a337f3ff2
msgid "If your query is on an indexed field, do not use tailable cursors, but instead, use a regular cursor. Keep track of the last value of the indexed field returned by the query. To retrieve the newly added documents, query the collection again using the last value of the indexed field in the query criteria, as in the following example:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:38
# 9bb7eeda323c41e482854b4c26c2e1fa
msgid "Consider the following behaviors related to tailable cursors:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:40
# a289a7e9bad54cdeaa94c002991b5609
msgid "Tailable cursors do not use indexes and return documents in :term:`natural order`."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:43
# 8518a284e75c4e0aa7e18d1208162fef
msgid "Because tailable cursors do not use indexes, the initial scan for the query may be expensive; but, after initially exhausting the cursor, subsequent retrievals of the newly added documents are inexpensive."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:47
# da5e7a150d5e47eb8c6a46bf4d986a0b
msgid "Tailable cursors may become *dead*, or invalid, if either:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:49
# 936725e74fe6404da8a2fe2d0839ade8
msgid "the query returns no match."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:51
# 1a15513943384abeb87e0dcb1132c2fb
msgid "the cursor returns the document at the \"end\" of the collection and then the application deletes those document."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:54
# 84df2f4bd3ef491499b969904d060157
msgid "A *dead* cursor has an id of ``0``."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:56
# eff3031d9a2747dc8ca7022dd9aad71b
msgid "See your :doc:`driver documentation </applications/drivers>` for the driver-specific method to specify the tailable cursor. For more information on the details of specifying a tailable cursor, see :meta-driver:`MongoDB wire protocol </legacy/mongodb-wire-protocol>` documentation."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:63
# 49b4515f82884925ae1de8d47bb13d07
msgid "C++ Example"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:65
# d6c13875035a4ccd9face996472f3ea4
msgid "The ``tail`` function uses a tailable cursor to output the results from a query to a capped collection:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:68
# de9a6639d06e451288bd23628f475cb2
msgid "The function handles the case of the dead cursor by having the query be inside a loop."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:71
# 62df3907cdf34f24a18fadfa5487ec28
msgid "To periodically check for new data, the ``cursor->more()`` statement is also inside a loop."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:117
# 5ab99a8b81cc43ed845c62ee71ee368e
msgid "The ``tail`` function performs the following actions:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:119
# d4d6e64006174310bd8f6742cde947e0
msgid "Initialize the ``lastValue`` variable, which tracks the last accessed value. The function will use the ``lastValue`` if the cursor becomes *invalid* and ``tail`` needs to restart the query. Use :method:`~cursor.hint()` to ensure that the query uses the :operator:`$natural` order."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:125
# e880fe51fcfa415f9675a0bbd2a2bb0d
msgid "In an outer ``while(1)`` loop,"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:127
# 96cee40cf5ce4ec08181f173fff0309d
msgid "Query the capped collection and return a tailable cursor that blocks for several seconds waiting for new documents"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:136
# 465a95545fd34940bf841204e84c96ee
msgid "Specify the capped collection using ``ns`` as an argument to the function."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:139
# fdc6910bc32f401abb86198ca1cb28ab
msgid "Set the ``QueryOption_CursorTailable`` option to create a tailable cursor."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:142
# 89984094fb374e20b21ab21a74aaeb9f
msgid "Set the ``QueryOption_AwaitData`` option so that the returned cursor blocks for a few seconds to wait for data."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:145
# 9b36c71b0bec4a7aa26e29e1f975b6c4
msgid "In an inner ``while (1)`` loop, read the documents from the cursor:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:147
# 41aea9cb37e440cc8d9dab5c4252a510
msgid "If the cursor has no more documents and is not invalid, loop the inner ``while`` loop to recheck for more documents."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:150
# 9979f935d864436d844e5e026545965e
msgid "If the cursor has no more documents and is dead, break the inner ``while`` loop."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:153
# 24164f823f9e40dd80e06d2c42052a14
msgid "If the cursor has documents:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:155
# c66be8ed97904795845eb337bc4e7d14
msgid "output the document,"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:157
# 976ae92a66884270b2498e6ca0a7b9d6
msgid "update the ``lastValue`` value,"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:159
# e200269c0e4a4f3bbcfe57f147ab726c
msgid "and loop the inner ``while (1)`` loop to recheck for more documents."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:162
# db01677a6ede415495370de35aa58d43
msgid "If the logic breaks out of the inner ``while (1)`` loop and the cursor is invalid:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:165
# dc236d48c2354f788d2bc68642f64481
msgid "Use the ``lastValue`` value to create a new query condition that matches documents added after the ``lastValue``. Explicitly ensure ``$natural`` order with the ``hint()`` method:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:173
# 888965769a5449579c3cf5b519e5c666
msgid "Loop through the outer ``while (1)`` loop to re-query with the new query condition and repeat."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:176
# 373b3c5333f4486ca705d02a488c834b
msgid "`Detailed blog post on tailable cursor <http://shtylman.com/post/the-tail-of-mongodb>`_"
msgstr ""

