# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-journaling.txt:3
# 545259286f3d49c1be9671c9f2056115
msgid "Manage Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:7
# b642b4f23800484988614d15ea320285
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal. If MongoDB should terminate or encounter an error before it can write the changes from the journal to the data files, MongoDB can re-apply the write operation and maintain a consistent state."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:15
# 8ba657be3b4c494c80cd4f5d6dc59eac
msgid "*Without* a journal, if :program:`mongod` exits unexpectedly, you must assume your data is in an inconsistent state, and you must run either :doc:`repair </tutorial/recover-data-following-unexpected-shutdown>` or, preferably, :doc:`resync </tutorial/resync-replica-set-member>` from a clean member of the replica set."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:21
# 4b7732b370ec40e09107a4509bcc0041
msgid "With journaling enabled, if :program:`mongod` stops unexpectedly, the program can recover everything written to the journal, and the data remains in a consistent state. By default, the greatest extent of lost writes, i.e., those not made to the journal, are those made in the last 100 milliseconds. See :setting:`~storage.journal.commitIntervalMs` for more information on the default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:28
# 80d11967cdee410787d69ceca8a373fd
msgid "With journaling, if you want a data set to reside entirely in RAM, you need enough RAM to hold the data set plus the \"write working set.\" The \"write working set\" is the amount of unique data you expect to see written between re-mappings of the private view. For information on views, see :ref:`journaling-storage-views`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:36
# 73449b84ebce42999dc4da64cbf864a5
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default.  For other platforms, see :setting:`storage.journal.enabled`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:41
# 6e6f9927c1504c7ab932352a1537b8d5
msgid "Procedures"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:44
# 52a0da93b988431ea57e8651ee3fbb12
msgid "Enable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:46
# e0f8840b2e4f4cd2aae57e5cd57d4d57
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:49
# 75df3a63d8174e0299ce5e73e01b5de1
msgid "To enable journaling, start :program:`mongod` with the :option:`--journal <mongod --journal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:52
# 95ef294e8b0746c7a6220a59589890c6
msgid "If no journal files exist, when :program:`mongod` starts, it must preallocate new journal files. During this operation, the :program:`mongod` is not listening for connections until preallocation completes: for some systems this may take a several minutes. During this period your applications and the :program:`mongo` shell are not available."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:60
# 763f9f4cfc984f318577afce3566d838
msgid "Disable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:64
# 07f563bdfad44330a69ebdcefecc7773
msgid "Do not disable journaling on production systems. If your :program:`mongod` instance stops without shutting down cleanly unexpectedly for any reason, (e.g. power failure) and you are not running with journaling, then you must recover from an unaffected :term:`replica set` member or backup, as described in :doc:`repair  </tutorial/recover-data-following-unexpected-shutdown>`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:71
# 056a78bcb93e41c18298b32e2735818b
msgid "To disable journaling, start :program:`mongod` with the :option:`--nojournal <mongod --nojournal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:75
# 96dad1d0750b4e91b866c8a9954c4cb9
msgid "Get Commit Acknowledgment"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:77
# 0699b6a3a62c4eb0a01ac6128a620581
msgid "You can get commit acknowledgment with the :ref:`write-concern` and the ``j`` option. For details, see :ref:`write-concern-operation`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:84
# 757ef12b7b7940c98f7af2a35dfba641
msgid "Avoid Preallocation Lag"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:86
# e6cbc6f7727742f78821017cec1ddd81
msgid "To avoid :ref:`preallocation lag <journaling-journal-files>`, you can preallocate files in the journal directory by copying them from another instance of :program:`mongod`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:90
# 6248427ccb6e40ee8ec731d28aa7b324
msgid "Preallocated files do not contain data. It is safe to later remove them. But if you restart :program:`mongod` with journaling, :program:`mongod` will create them again."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:0
# 47a9b83e50574a94b5b9a6b2e656ddb1
msgid "Example"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:98
# 040b14ad3a2c43ea9ddfcf08862352a6
msgid "For demonstration purposes, the sequence starts by creating a set of journal files in the usual way."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:101
# 0074baec8bf64f2298d33c9350a76e21
msgid "Create a temporary directory into which to create a set of journal files:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:108
# 41eaae531a054f50a3dd3f12fee08197
msgid "Create a set of journal files by staring a :program:`mongod` instance that uses the temporary directory:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:115
# 571c70e685e9478d92d9222971b81b23
msgid "When you see the following log output, indicating :program:`mongod` has the files, press CONTROL+C to stop the :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:123
# 0a553d99ef4d441b95dbc4df285da000
msgid "Preallocate journal files for the new instance of :program:`mongod` by moving the journal files from the data directory of the existing instance to the data directory of the new instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:131
# 88353fb39e2b4be4a16f6de3665923e9
msgid "Start the new :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:138
# 4874579ba647493da574eb391c0b1056
msgid "Monitor Journal Status"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:140
# 3f741874bda140cfaf427ee89fb04b64
msgid "Use the following commands and methods to monitor journal status:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:142
# 2c147300d8754473b3e078e4d6210a53
msgid ":dbcommand:`serverStatus`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:144
# d8d4849569104b67ad75ebe868c66553
msgid "The :dbcommand:`serverStatus` command returns database status information that is useful for assessing performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:147
# 746d667ea5e9460c9dd97294904a1b91
msgid ":dbcommand:`journalLatencyTest`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:149
# 53dade7751084ad4b61ee23264d6633e
msgid "Use :dbcommand:`journalLatencyTest` to measure how long it takes on your volume to write to the disk in an append-only fashion. You can run this command on an idle system to get a baseline sync time for journaling. You can also run this command on a busy system to see the sync time on a busy system, which may be higher if the journal directory is on the same volume as the data files."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:156
# 356e28b4a48b476ba398dd0e7fbdd3f8
msgid "The :dbcommand:`journalLatencyTest` command also provides a way to check if your disk drive is buffering writes in its local cache. If the number is very low (i.e., less than 2 milliseconds) and the drive is non-SSD, the drive is probably buffering writes. In that case, enable cache write-through for the device in your operating system, unless you have a disk controller card with battery backed RAM."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:166
# 90bc1a5e1eb64152a064bd616079ab99
msgid "Change the Group Commit Interval"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:170
# a317101c2b0747ee99d73f7c4d8c4d91
msgid "You can set the group commit interval using the :option:`--journalCommitInterval <mongod --journalCommitInterval>` command line option. The allowed range is ``2`` to ``300`` milliseconds."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:174
# 8873ea28200d4b46aa85ad73fea8d0e2
msgid "Lower values increase the durability of the journal at the expense of disk performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:178
# c580cadfea7e412fbc1256b66445d5b1
msgid "Recover Data After Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:180
# 8895dc61f77244dba7eba9a715ffcb3e
msgid "On a restart after a crash, MongoDB replays all journal files in the journal directory before the server becomes available. If MongoDB must replay journal files, :program:`mongod` notes these events in the log output."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:185
# 26cd7e689a114274b0b98488550cfb1c
msgid "There is no reason to run :dbcommand:`repairDatabase` in these situations."
msgstr ""

