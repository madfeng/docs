# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-child-references.txt:3
# 9429361ffefe48f3b5cc24bd49a1b848
msgid "Model Tree Structures with Child References"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:8
# fb14731720c24fe1bb4536b9a0c065fa
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:10
# 98efcd339e9d43459183d8aea1798800
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:16
# f2f3a6e9e306459e97b025e5c6b35d7d
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing :ref:`references <data-modeling-referencing>` in the parent-nodes to children nodes."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:21
# 299c926b96a545da8e8b6e30ca818823
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:25
# fc085d1ebd2b478ca1ffdf1391ad17ca
msgid "The *Child References* pattern stores each tree node in a document; in addition to the tree node, document stores in an array the id(s) of the node's children."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:29
# 81ad300f35b84bf2b07bd9953fed14d0
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:33
# c6cc03801ef0417582867cf8e33562f6
msgid "The following example models the tree using *Child References*, storing the reference to the node's children in the field ``children``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:45
# acad44bf9c48400baa994b71a4eb3dde
msgid "The query to retrieve the immediate children of a node is fast and straightforward:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:52
# 45778851f45143eab7d3d7b3a13e7222
msgid "You can create an index on the field ``children`` to enable fast search by the child nodes:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:59
# 121423510fd14669bdca1bcbcbe4183e
msgid "You can query for a node in the ``children`` field to find its parent node as well as its siblings:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:66
# efd2e8b8928d4860aa34f4e30cad75ba
msgid "The *Child References* pattern provides a suitable solution to tree storage as long as no operations on subtrees are necessary. This pattern may also provide a suitable solution for storing graphs where a node may have multiple parents."
msgstr ""

