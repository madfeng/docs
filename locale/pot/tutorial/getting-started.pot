# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started.txt:3
# 4ce1b120c36d4a0ab0a718dbf402003a
msgid "Getting Started with MongoDB"
msgstr ""

#: ../source/tutorial/getting-started.txt:7
# b9f28e7e6e4d4a8fa7de75d0fec53786
msgid "This tutorial provides an introduction to basic database operations using the :program:`mongo` shell. :program:`mongo` is a part of the standard MongoDB distribution and provides a full JavaScript environment with complete access to the JavaScript language and all standard functions as well as a full database interface for MongoDB. See the :api:`mongo JavaScript API <js>` documentation and the :program:`mongo` shell :doc:`JavaScript Method Reference </reference/method>`."
msgstr ""

#: ../source/tutorial/getting-started.txt:15
# 4befc465333d48ff9583d6582b5a5e01
msgid "The tutorial assumes that you're running MongoDB on a Linux or OS X operating system and that you have a running database server; MongoDB does support Windows and provides a Windows distribution with identical operation. For instructions on installing MongoDB and starting the database server, see the appropriate :doc:`installation </installation>` document."
msgstr ""

#: ../source/tutorial/getting-started.txt:23
# 332c574dbc824d7e80b3799357c03e94
msgid "Connect to a Database"
msgstr ""

#: ../source/tutorial/getting-started.txt:25
# 07fb85bb9e4d4080ad432ca3e79d8d95
msgid "In this section, you connect to the database server, which runs as :program:`mongod`, and begin using the :program:`mongo` shell to select a logical database within the database instance and access the help text in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started.txt:31
# fe09fbac5e1d4096a2e74bae8ec047dd
msgid "Connect to a :program:`mongod`"
msgstr ""

#: ../source/tutorial/getting-started.txt:33
# 46e6186cc8ce48849661637bfb194c09
msgid "From a system prompt, start :program:`mongo` by issuing the :program:`mongo` command, as follows:"
msgstr ""

#: ../source/tutorial/getting-started.txt:40
# 534e1c46487d498390ddb254eba7d289
msgid "By default, :program:`mongo` looks for a database server listening on port ``27017`` on the ``localhost`` interface. To connect to a server on a different port or interface, use the :option:`--port <mongo --port>` and :option:`--host <mongo --host>` options."
msgstr ""

#: ../source/tutorial/getting-started.txt:47
# 8f0238a59eab44caa793081e96e24ba6
msgid "Select a Database"
msgstr ""

#: ../source/tutorial/getting-started.txt:49
# dc47c2fad4ab4114aaca6b1c743380c2
msgid "After starting the :program:`mongo` shell your session will use the ``test`` database by default. At any time, issue the following operation at the :program:`mongo` to report the name of the current database:"
msgstr ""

#: ../source/tutorial/getting-started.txt:57
# 350b33d3b341467ea3d868cc84ee2c97
msgid "From the :program:`mongo` shell, display the list of databases, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:64
# f668f42f800444bda8985f813695a1cb
msgid "Switch to a new database named ``mydb``, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:71
# 6862e64c0dba40ad8fed500458aff715
msgid "Confirm that your session has the ``mydb`` database as context, by checking the value of the ``db`` object, which returns the name of the current database, as follows:"
msgstr ""

#: ../source/tutorial/getting-started.txt:79
# 9ae3d0af7b6f43e786266cd84261c87f
msgid "At this point, if you issue the ``show dbs`` operation again, it will not include the ``mydb`` database. MongoDB will not permanently create a database until you insert data into that database. The :ref:`getting-started-create-documents` section describes the process for inserting data."
msgstr ""

#: ../source/tutorial/getting-started.txt:85
# 286b37e829cc48b9bd273a122822fa2c
msgid "``show databases`` also returns a list of databases."
msgstr ""

#: ../source/tutorial/getting-started.txt:89
# d0b71f1044ce4c0f8b091811a9014025
msgid "Display ``mongo`` Help"
msgstr ""

#: ../source/tutorial/getting-started.txt:91
# 9d2e406b1c4946c1840b21a872823928
msgid "At any point, you can access help for the :program:`mongo` shell using the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:98
# 4bd812c1d5254fdea95d5d4e578d47ca
msgid "Furthermore, you can append the ``.help()`` method to some JavaScript methods, any cursor object, as well as the ``db`` and ``db.collection`` objects to return additional help information."
msgstr ""

#: ../source/tutorial/getting-started.txt:105
# 40908034b0234d4d90820c880779e04f
msgid "Create a Collection and Insert Documents"
msgstr ""

#: ../source/tutorial/getting-started.txt:107
# b6c125b5b2d3425fb37de804017925a9
msgid "In this section, you insert documents into a new :term:`collection` named ``testData`` within the new :term:`database` named ``mydb``."
msgstr ""

#: ../source/tutorial/getting-started.txt:111
# d9ae42a151db4673ac44b49a6d324df2
msgid "MongoDB will create a collection implicitly upon its first use. You do not need to create a collection before inserting data. Furthermore, because MongoDB uses :ref:`dynamic schemas <faq-schema-free>`, you also need not specify the structure of your documents before inserting them into the collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:117
# f73c781244af4cc8b21e585fc366f03c
msgid "From the :program:`mongo` shell, confirm you are in the ``mydb`` database by issuing the following:"
msgstr ""

#: ../source/tutorial/getting-started.txt:124
# 1ddc3ea7db2e411a8f02680c1f26c8ab
msgid "If :program:`mongo` does not return ``mydb`` for the previous operation, set the context to the ``mydb`` database, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:132
# 879665f3c5d646b6b253ef2e3d3aa4ee
msgid "Create two documents named ``j`` and ``k`` by using the following sequence of JavaScript operations:"
msgstr ""

#: ../source/tutorial/getting-started.txt:140
# b3b7aefd045c4e65af961d8df2566708
msgid "Insert the ``j`` and ``k`` documents into the ``testData`` collection with the following sequence of operations:"
msgstr ""

#: ../source/tutorial/getting-started.txt:148
# 32e372f3acb0424ea4ad4160f369b320
msgid "When you insert the first document, the :program:`mongod` will create both the ``mydb`` database and the ``testData`` collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:151
# 816761ccc3084fadb9907323396fab57
msgid "Confirm that the ``testData`` collection exists. Issue the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:158
# 71e6443da5a644f58161cbe9c74a6300
msgid "The :program:`mongo` shell will return the list of the collections in the current (i.e. ``mydb``) database. At this point, the only collection is ``testData``. All :program:`mongod` databases also have a :data:`system.indexes <<database>.system.indexes>` collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:163
# 3712fc856e5f4bc5a1fc47ca26e7c32a
msgid "Confirm that the documents exist in the ``testData`` collection by issuing a query on the collection using the :method:`~db.collection.find()` method:"
msgstr ""

#: ../source/tutorial/getting-started.txt:171
# 0e0ffe1bcdab488c8a904eba7b4efa92
msgid "This operation returns the following results. The :doc:`ObjectId </reference/object-id>` values will be unique:"
msgstr ""

#: ../source/tutorial/getting-started.txt:179
# d2573ac8b75349198b07bc01ea17e4ec
msgid "All MongoDB documents must have an ``_id`` field with a unique value.  These operations do not explicitly specify a value for the ``_id`` field, so :program:`mongo` creates a unique :doc:`ObjectId </reference/object-id>` value for the field before inserting it into the collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:186
# 3b8abee210174d9ea7a46f3b2a4a36db
msgid "Insert Documents using a For Loop or a JavaScript Function"
msgstr ""

#: ../source/tutorial/getting-started.txt:188
# e5d45ad990b14a8dbcda47932d02c5a5
msgid "To perform the remaining procedures in this tutorial, first add more documents to your database using one or both of the procedures described in :doc:`/tutorial/generate-test-data`."
msgstr ""

#: ../source/tutorial/getting-started.txt:193
# fe43bb08663048328768f1cf71521e62
msgid "Working with the Cursor"
msgstr ""

#: ../source/tutorial/getting-started.txt:195
# deacb7aa6af0403db02d947ac7f8a8b5
msgid "When you query a :term:`collection`, MongoDB returns a \"cursor\" object that contains the results of the query. The :program:`mongo` shell then iterates over the cursor to display the results. Rather than returning all results at once, the shell iterates over the cursor 20 times to display the first 20 results and then waits for a request to iterate over the remaining results. In the shell, use enter ``it`` to iterate over the next set of results."
msgstr ""

#: ../source/tutorial/getting-started.txt:203
# aee6a63fcad54e279a76d9aac188f9f3
msgid "The procedures in this section show other ways to work with a cursor. For comprehensive documentation on cursors, see :ref:`crud-read-cursor`."
msgstr ""

#: ../source/tutorial/getting-started.txt:208
# 904b98fbe39d427d8c6bb0a687f7e4ea
msgid "Iterate over the Cursor with a Loop"
msgstr ""

#: ../source/tutorial/getting-started.txt:210
# 5954186dd40d42bd95569516a9b50699
msgid "Before using this procedure, add documents to a collection using one of the procedures in :doc:`/tutorial/generate-test-data`. You can name your database and collections anything you choose, but this procedure will assume the database named ``test`` and a collection named ``testData``."
msgstr ""

#: ../source/tutorial/getting-started.txt:216
# fc1d50e0e8cd4e348efa4850395a97ab
msgid "In the MongoDB JavaScript shell, query the ``testData`` collection and assign the resulting cursor object to the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:223
# dcdbea5e76d646cf8c2bdcd60c92457d
msgid "Print the full result set by using a ``while`` loop to iterate over the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:230
# 854d798031214701984dd8d3059c5b8f
msgid "The ``hasNext()`` function returns true if the cursor has documents. The ``next()`` method returns the next document. The ``printjson()`` method renders the document in a JSON-like format."
msgstr ""

#: ../source/tutorial/getting-started.txt:234
# 80b550ff28ea4976a4c1c8592ec8c80a
msgid "The operation displays all documents:"
msgstr ""

#: ../source/tutorial/getting-started.txt:244
# 8f0ba7556dd04f77af733cf12342b0aa
msgid "Use Array Operations with the Cursor"
msgstr ""

#: ../source/tutorial/getting-started.txt:246
# 4902d6c2cbd849559bc798945538be89
msgid "The following procedure lets you manipulate a cursor object as if it were an array:"
msgstr ""

#: ../source/tutorial/getting-started.txt:249
# 09cbe59a76794a6ba96daa60c002e9df
msgid "In the :program:`mongo` shell, query the ``testData`` collection and assign the resulting cursor object to the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:256
# e062ff39dfa64034b46c13208e362405
msgid "To find the document at the array index ``4``, use the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:263
# 01a5db7a9c8d4c8ab4947b22cd353647
msgid "MongoDB returns the following:"
msgstr ""

#: ../source/tutorial/getting-started.txt:269
# 2c16e8884c034f9b88709acecaa81f58
msgid "When you access documents in a cursor using the array index notation, :program:`mongo` first calls the ``cursor.toArray()`` method and loads into RAM all documents returned by the cursor. The index is then applied to the resulting array. This operation iterates the cursor completely and exhausts the cursor."
msgstr ""

#: ../source/tutorial/getting-started.txt:275
# 4d84040f61774d3ead699382510c1175
msgid "For very large result sets, :program:`mongo` may run out of available memory."
msgstr ""

#: ../source/tutorial/getting-started.txt:278
# 50488c10157f4281b93cbff95c1216b3
msgid "For more information on the cursor, see :ref:`crud-read-cursor`."
msgstr ""

#: ../source/tutorial/getting-started.txt:281
# 57fd27591cce4118a758c16818370e83
msgid "Query for Specific Documents"
msgstr ""

#: ../source/tutorial/getting-started.txt:283
# 637e322b8b5241a1a39b9bc943d66db2
msgid "MongoDB has a rich query system that allows you to select and filter the documents in a collection along specific fields and values. See :ref:`read-operations-query-document` and :doc:`/core/read-operations` for a full account of queries in MongoDB."
msgstr ""

#: ../source/tutorial/getting-started.txt:288
# 08651558d5234dea8eeeabddfd5544bd
msgid "In this procedure, you query for specific documents in the ``testData`` :term:`collection` by passing a \"query document\" as a parameter to the :method:`~db.collection.find()` method. A query document specifies the criteria the query must match to return a document."
msgstr ""

#: ../source/tutorial/getting-started.txt:293
# 1e560b5690514601b07c8ab5765592e9
msgid "In the :program:`mongo` shell, query for all documents where the ``x`` field has a value of ``18`` by passing the ``{ x : 18 }`` query document as a parameter to the :method:`~db.collection.find()` method:"
msgstr ""

#: ../source/tutorial/getting-started.txt:301
# 693364e0d7ce495da36a788f1cce63fd
msgid "MongoDB returns one document that fits this criteria:"
msgstr ""

#: ../source/tutorial/getting-started.txt:308
# 00863ed34e6c456e8cdb1c7fe243b848
msgid "Return a Single Document from a Collection"
msgstr ""

#: ../source/tutorial/getting-started.txt:310
# 1ed6a564c8364d1bb02060971c99edb2
msgid "With the :method:`~db.collection.findOne()` method you can return a single *document* from a MongoDB collection. The :method:`~db.collection.findOne()` method takes the same parameters as :method:`~db.collection.find()`, but returns a document rather than a cursor."
msgstr ""

#: ../source/tutorial/getting-started.txt:315
# 2237b140caa94549934fbac17c1df99d
msgid "To retrieve one document from the ``testData`` collection, issue the following command:"
msgstr ""

#: ../source/tutorial/getting-started.txt:322
# efe28ed2543f4b6e8a294d50e7ff1b1e
msgid "For more information on querying for documents, see the :ref:`read-operations-query-document` and :doc:`/core/read-operations` documentation."
msgstr ""

#: ../source/tutorial/getting-started.txt:326
# 862a335792624ef4a9099d223afda2f2
msgid "Limit the Number of Documents in the Result Set"
msgstr ""

#: ../source/tutorial/getting-started.txt:328
# 0cfdcb3957bb4adfbf385d3aa8022377
msgid "To increase performance, you can constrain the size of the result by limiting the amount of data your application must receive over the network."
msgstr ""

#: ../source/tutorial/getting-started.txt:332
# 6c94c3441c2442869a03ad6f77c46bfa
msgid "To specify the maximum number of documents in the result set, call the :method:`~cursor.limit()` method on a cursor, as in the following command:"
msgstr ""

#: ../source/tutorial/getting-started.txt:340
# 76a0671d497a4863ad02e4bc698381ba
msgid "MongoDB will return the following result, with different :doc:`ObjectId </reference/object-id>` values:"
msgstr ""

#: ../source/tutorial/getting-started.txt:352
# 69c8270dd11d47c2a63c817ee02ab2e6
msgid "Next Steps with MongoDB"
msgstr ""

#: ../source/tutorial/getting-started.txt:354
# b938879ced0f4315bf2d7b0ec862fd16
msgid "For more information on manipulating the documents in a database as you continue to learn MongoDB, consider the following resources:"
msgstr ""

#: ../source/tutorial/getting-started.txt:357
# 92a597179d3e4c1ea8032a8a2657307f
msgid ":doc:`/crud`"
msgstr ""

#: ../source/tutorial/getting-started.txt:358
# bcb7ec7698ea4176bf658bf0b0029a91
msgid ":doc:`/reference/sql-comparison`"
msgstr ""

#: ../source/tutorial/getting-started.txt:359
# cd09f9d5400a42c3a6cefd53d01aab88
msgid ":doc:`/applications/drivers`"
msgstr ""

