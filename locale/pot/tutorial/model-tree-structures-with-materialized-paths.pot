# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:3
# 9a2b2fd7a5334d1fb8a2642d4aec8f95
msgid "Model Tree Structures with Materialized Paths"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:8
# c1e3e8c43a4049dfbd724b9eeab6acc1
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:10
# 78618e0e3fa74b47bdaabe5bbba21885
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:16
# 967d4a9ef5b244f0bbbb2ded191720ca
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing full relationship paths between documents."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:21
# 2240647aefdd4984b50493194269a9c5
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:25
# d1bceac22ace48c6a024e944efa9fb21
msgid "The *Materialized Paths* pattern stores each tree node in a document; in addition to the tree node, document stores as a string the id(s) of the node's ancestors or path. Although the *Materialized Paths* pattern requires additional steps of working with strings and regular expressions, the pattern also provides more flexibility in working with the path, such as finding nodes by partial paths."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:33
# 81e30d472b434826822089dbc1645446
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:37
# 343a02cc3e6a4c889286d7bb0dec1403
msgid "The following example models the tree using *Materialized Paths*, storing the path in the field ``path``; the path string uses the comma ``,`` as a delimiter:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:50
# aff1c24f5a0945778594d6b5ca8d87e5
msgid "You can query to retrieve the whole tree, sorting by the field ``path``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:57
# f5554fe1bc794e16b94fae953bd7ab85
msgid "You can use regular expressions on the ``path`` field to find the descendants of ``Programming``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:64
# 45ad2c6416804f94950fd99a1838ab91
msgid "You can also retrieve the descendants of ``Books`` where the ``Books`` is also at the topmost level of the hierarchy:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:71
# af4fad3812884855bf59d2894d6d54be
msgid "To create an index on the field ``path`` use the following invocation:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:78
# 8baf5b52a6b34226934ee132762b5911
msgid "This index may improve performance depending on the query:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:80
# 5152d3d5fa5a47d38db42d7e5f52d445
msgid "For queries of the ``Books`` sub-tree (e.g. ``/^,Books,/``) an index on the ``path`` field improves the query performance significantly."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:84
# d1fc7869aee84fa3b6d3fcfcc2818f6a
msgid "For queries of the ``Programming`` sub-tree (e.g. ``/,Programming,/``), or similar queries of sub-tress, where the node might be in the middle of the indexed string, the query must inspect the entire index."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-materialized-paths.txt:89
# abe05593f2504a8a8b4a8a40532a63d8
msgid "For these queries an index *may* provide some performance improvement *if* the index is significantly smaller than the entire collection."
msgstr ""

