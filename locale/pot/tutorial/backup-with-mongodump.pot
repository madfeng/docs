# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-with-mongodump.txt:3
# bac12bb000f34635a74c079013da367a
msgid "Back Up and Restore with MongoDB Tools"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:7
# be79a640b5074430a39487e579f7ef64
msgid "This document describes the process for writing and restoring backups to files in binary format  with the :program:`mongodump`  and :program:`mongorestore` tools."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:11
# 8bcfbb4d7d0b49fc830b735bca14d2ad
msgid "Use these tools for backups if other backup methods, such as the `MMS Backup Service <https://mms.mongodb.com/?pk_campaign=mongodb-docs-tools>`_ or :doc:`file system snapshots </tutorial/backup-with-filesystem-snapshots>` are unavailable."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:16
# f7ba0e4a74054285babf695c19b578e2
msgid ":doc:`/core/backups`, :doc:`/reference/program/mongodump`, and :doc:`/reference/program/mongorestore`."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:23
# d7f54343d005442e981a7f402833ee8b
msgid "Backup a Database with ``mongodump``"
msgstr ""

#: ../source/includes/fact-mongodump-local-database.rst:1
# 9712c5dc1b434552b612b51e3c5bd64c
msgid ":program:`mongodump` does *not* dump the content of the ``local`` database."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:1
# fe8b1d0f70154965976ac2ccd8501f0c
msgid "To backup all the databases in a cluster via :program:`mongodump`, you should have the :authrole:`backup` role. The :authrole:`backup` role provides all the needed privileges for backing up all database. The role confers no additional access, in keeping with the policy of :term:`least privilege`."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:6
# 6d1c131a146347b8b800b54485bd0aa8
msgid "To backup a given database, you must have ``read`` access on the database. Several roles provide this access, including the :authrole:`backup` role."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:9
# 806e374ddf044772b6644f04856e5f1f
msgid "To backup the ``system.profile`` collection in a database, you must have ``read`` access on certain system collections in the database. Several roles provide this access, including the :authrole:`clusterAdmin` and :authrole:`dbAdmin` roles."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:3
# 63e501c21d934343985ba8282eeb33fd
msgid "To backup users and :ref:`user-defined roles <user-defined-roles>` for a given database, you must have access to the ``admin`` database. MongoDB stores the user data and role definitions for all databases in the ``admin`` database."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:8
# 3aae2bb6749c48ea836491d68769eeac
msgid "Specifically, to backup a given database's users, you must have the :authaction:`find` :ref:`action <security-user-actions>` on the ``admin`` database's :data:`admin.system.users` collection. The :authrole:`backup` and :authrole:`userAdminAnyDatabase` roles both provide this privilege."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:13
# bd8d3b84336945168abc20d5c5b70cb1
msgid "To backup the user-defined roles on a database, you must have the :authaction:`find` action on the ``admin`` database's :data:`admin.system.roles` collection. Both the :authrole:`backup` and :authrole:`userAdminAnyDatabase` roles provide this privilege."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:32
# b1075cfa845d4e288468964217cab74b
msgid "Basic ``mongodump`` Operations"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:34
# 1def9101fcfc489abe74c7dc20d218db
msgid "The :program:`mongodump` utility can back up data by either:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:36
# 37f74b8efbf7435aa41c700372ebd37c
msgid "connecting to a running :program:`mongod` or :program:`mongos` instance, or"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:39
# fad7f441e12f49158cf16ba10714cfed
msgid "accessing data files without an active instance."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:41
# 31defcd10ff54805b155b975d154858f
msgid "The utility can create a backup for an entire server, database or collection, or can use a query to backup just part of a collection."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:44
# 2952c2ceed2848d0af811d33abce9dc2
msgid "When you run :program:`mongodump` without any arguments, the command connects to the MongoDB instance on the local system (e.g. ``127.0.0.1`` or ``localhost``) on port ``27017`` and creates a database backup named ``dump/`` in the current directory."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:49
# 62c6a291799f46ca9bb568adbdff58c6
msgid "To backup data from a :program:`mongod` or :program:`mongos` instance running on the same machine and on the default port of ``27017``, use the following command:"
msgstr ""

#: ../source/includes/warning-mongodump-compatibility-2.2.rst:1
# f935bd7a266943a488e392a37424fe4f
msgid "The data format used by :program:`mongodump` from version 2.2 or later is *incompatible* with earlier versions of :program:`mongod`. Do not use recent versions of :program:`mongodump` to back up older data stores."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:59
# 683b3e26b7354068985e001431eeb115
msgid "You can also specify the :option:`--host <mongodump --host>` and :option:`--port <mongodump --port>` of the MongoDB instance that the :program:`mongodump` should connect to. For example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:67
# c12939655e154a25b3dcdce680176a72
msgid ":program:`mongodump` will write :term:`BSON` files that hold a copy of data accessible via the :program:`mongod` listening on port ``27017`` of the ``mongodb.example.net`` host. See :ref:`backup-from-non-local` for more information."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:72
# a09362eff3ef445c8bdd5072a4b3ec9c
msgid "To use :program:`mongodump` without a running MongoDB instance, specify the :option:`--dbpath <mongodump --dbpath>` option to read directly from MongoDB data files. See :ref:`backup-from-data-files` for details."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:76
# 6112b2dfc21b4f0f84ead79d9eddc5c6
msgid "To specify a different output directory, you can use the :option:`--out or -o <mongodump --out>` option:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:83
# 1cd1c9c14f774ad98a1184909025d0b1
msgid "To limit the amount of data included in the database dump, you can specify :option:`--db <mongodump --db>` and :option:`--collection <mongodump --collection>` as options to :program:`mongodump`. For example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:92
# a168291f3a2342bba9acd9d01ba28c88
msgid "This operation creates a dump of the collection named ``myCollection`` from the database ``test`` in a :file:`dump/` subdirectory of the current working directory."
msgstr ""

#: ../source/includes/fact-mongodump-overwrite-files.rst:1
# 0d33a5a5da304c61849eb5ae1f10c39e
msgid ":program:`mongodump` overwrites output files if they exist in the backup data folder. Before running the :program:`mongodump` command multiple times, either ensure that you no longer need the files in the output folder (the default is the ``dump/`` folder) or rename the folders or files."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:99
# c2a373857cfc41208f8e92ccc3da4cdc
msgid "Point in Time Operation Using Oplogs"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:101
# 34e7dfa8a0104d37a8e8293954b9ad50
msgid "Use the :option:`--oplog <mongodump --oplog>` option with :program:`mongodump` to collect the :term:`oplog` entries to build a point-in-time snapshot of a database within a replica set. With :option:`--oplog <mongodump --oplog>`, :program:`mongodump` copies all the data from the source database as well as all of the :term:`oplog` entries from the beginning of the backup procedure to until the backup procedure completes. This backup procedure, in conjunction with :option:`mongorestore --oplogReplay <mongorestore --oplogReplay>`, allows you to restore a backup that reflects the specific moment in time that corresponds to when :program:`mongodump` completed creating the dump file."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:116
# 47d739eecc1f47329db1b8014fa1e481
msgid "Create Backups Without a Running ``mongod`` Instance"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:118
# b3eff29645d3459d89d79200985f912e
msgid "If your MongoDB instance is not running, you can use the :option:`--dbpath <mongodump --dbpath>` option to specify the location to your MongoDB instance's database files. :program:`mongodump` reads from the data files directly with this operation. This locks the data directory to prevent conflicting writes. The :program:`mongod` process must *not* be running or attached to these data files when you run :program:`mongodump` in this configuration. Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:127
# 5d10253a37ed4d6aae98ffcc4848ad51
msgid "Given a MongoDB instance that contains the ``customers``, ``products``, and ``suppliers`` databases, the following :program:`mongodump` operation backs up the databases using the :option:`--dbpath <mongodump --dbpath>` option, which specifies the location of the database files on the host:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:137
# a382979d50b7414c8a7d6f18d0d53e7b
msgid "The :option:`--out or -o <mongodump --out>` option allows you to specify the directory where :program:`mongodump` will save the backup. :program:`mongodump` creates a separate backup directory for each of the backed up databases: :file:`dataout/customers`, :file:`dataout/products`, and :file:`dataout/suppliers`."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:146
# 104e9a0a83ae4e0e88647861e87da968
msgid "Create Backups from Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:148
# 39725500d7d14875b71c47f0ac3d3d82
msgid "The :option:`--host <mongodump --host>` and :option:`--port <mongodump --port>` options for :program:`mongodump` allow you to connect to and backup from a remote host. Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:157
# 3728ad9e56c24594aff8551c00eb4ee3
msgid "On any :program:`mongodump` command you may, as above, specify username and password credentials to specify database authentication."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:163
# 2b7cc0c9427748aab809361ed7c2760e
msgid "Restore a Database with ``mongorestore``"
msgstr ""

#: ../source/includes/access-mongorestore.rst:3
# 7fbe24df7bf548599a9c0c36b2c20193
msgid "To restore users and :ref:`user-defined roles <user-defined-roles>` on a given database, you must have access to the ``admin`` database. MongoDB stores the user data and role definitions for all databases in the ``admin`` database."
msgstr ""

#: ../source/includes/access-mongorestore.rst:8
# 2c1bf20f088a49c4991970d7d07cabcb
msgid "Specifically, to restore users to a given database, you must have the :authaction:`insert` :ref:`action <security-user-actions>` on the ``admin`` database's :data:`admin.system.users` collection. The :authrole:`restore` role provides this privilege."
msgstr ""

#: ../source/includes/access-mongorestore.rst:13
# d389fa60bed547e5bb02b83ec4f65a5f
msgid "To restore user-defined roles to a database, you must have the :authaction:`insert` action on the ``admin`` database's :data:`admin.system.roles` collection. The :authrole:`restore` role provides this privilege."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:168
# 0fba14afd0ce4fa392fc90f8642717d8
msgid "Basic ``mongorestore`` Operations"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:170
# c6d5430c437b43b18a137f1949252291
msgid "The :program:`mongorestore` utility restores a binary backup created by :program:`mongodump`. By default, :program:`mongorestore` looks for a database backup in the :file:`dump/` directory."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:174
# 615aa1fc18d2490ab9e26403ae0b6cac
msgid "The :program:`mongorestore` utility can restore data either by:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:176
# fcdf13050e8e4e1ba688ffd34c719861
msgid "connecting to a running :program:`mongod` or :program:`mongos` directly, or"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:179
# b34ce31aa9e04b94887b2b399ebc039c
msgid "writing to a set of MongoDB data files without use of a running :program:`mongod`."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:182
# 0c5191a031c24a6f86b7b8cd65218dfc
msgid ":program:`mongorestore` can restore either an entire database backup or a subset of the backup."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:185
# 7cff913e19c6478894abb15c170a2c58
msgid "To use :program:`mongorestore` to connect to an active :program:`mongod` or :program:`mongos`, use a command with the following prototype form:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:192
# 5779c93ae2f448229303bbac9e8d052e
msgid "To use :program:`mongorestore` to write to data files without using a running :program:`mongod`, use a command with the following prototype form:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:200
#: ../source/tutorial/backup-with-mongodump.txt:299
# 648baf755fec430f90e45014bcff9f67
# 99d17c0f16184237bb1164611c632b96
msgid "Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:206
# 04fe0e2483c24568a8a5507f051ed25e
msgid "Here, :program:`mongorestore` imports the database backup in the :file:`dump-2013-10-25` directory to the :program:`mongod` instance running on the localhost interface."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:213
# df4b1d65bfbe4584803562ace3183adb
msgid "Restore Point in Time Oplog Backup"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:215
# 7f9e854d97884de19889536ab19b8980
msgid "If you created your database dump using the :option:`--oplog <mongodump --oplog>` option to ensure a point-in-time snapshot, call :program:`mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option, as in the following example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:225
# c0b437e2c85641a9a3138b667de54f8f
msgid "You may also consider using the :option:`mongorestore --objcheck` option to check the integrity of objects while inserting them into the database, or you may consider the :option:`mongorestore --drop` option to drop each collection from the database before restoring from backups."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:234
# 6dd2f18fe9774badb37f92eb7eead7d6
msgid "Restore a Subset of data from a Binary Database Dump"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:236
# 435259cff4f54c8480bf954342c000ef
msgid ":program:`mongorestore` also includes the ability to a filter to all input before inserting it into the new database. Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:244
# 19fc9718be0d4b9b9ebf9cf8d01b7ddc
msgid "Here, :program:`mongorestore` only adds documents to the database from the dump located in the :file:`dump/` folder *if* the documents have a field name ``field`` that holds a value of ``1``. Enclose the filter in single quotes (e.g. ``'``) to prevent the filter from interacting with your shell environment."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:253
# fa9a09200a76466a8ba7b9e4a434c4cb
msgid "Restore Without a Running ``mongod``"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:255
# fd31dd24994a4a0e88448569d9e80162
msgid ":program:`mongorestore` can write data to MongoDB data files without needing to connect to a :program:`mongod` directly."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:0
# 361199aef9204000b20c1e8b326f425c
msgid "Example"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:260
# fc8bf99933e24305963d1e99a8cb6f6b
msgid "Given a set of backed up databases in the ``/data/backup/`` directory:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:262
# de4438cec80b42d4a93e72459c1ed688
msgid ":file:`/data/backup/customers`,"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:263
# a5ae97ac836b4389b51a001107399b7e
msgid ":file:`/data/backup/products`, and"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:264
# 7bb23259fd3d41d0b49c856347a953d1
msgid ":file:`/data/backup/suppliers`"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:266
# b416ae5911e54dbcac5cbf5eb4350604
msgid "The following :program:`mongorestore` command restores the ``products`` database. The command uses the :option:`--dbpath <mongorestore --dbpath>` option to specify the path to the MongoDB data files:"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:275
# 55cf025ee69544819eefce93c2280249
msgid "The :program:`mongorestore` imports the database backup in the :file:`/data/backup/products` directory to the :program:`mongod` instance that runs on the localhost interface. The :program:`mongorestore` operation imports the backup even if the :program:`mongod` is not running."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:281
# 9b2d58b0036a446f97b71fd268231fdd
msgid "The :option:`--journal <mongorestore --journal>` option ensures that :program:`mongorestore` records all operation in the durability :term:`journal`. The journal prevents data file corruption if anything (e.g. power failure, disk failure, etc.) interrupts the restore operation."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:287
# f1afad9745ce479eb316ab8fbd3b1fbf
msgid ":doc:`/reference/program/mongodump` and :doc:`/reference/program/mongorestore`."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:291
# 7ecaf0489a1d4c18b300351d2709c1f7
msgid "Restore Backups to Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:293
# 2f66bc512fa045e7afe64cf2d81aed94
msgid "By default, :program:`mongorestore` connects to a MongoDB instance running on the localhost interface (e.g. ``127.0.0.1``) and on the default port (``27017``). If you want to restore to a different host or port, use the :option:`--host <mongorestore --host>` and :option:`--port <mongorestore --port>` options."
msgstr ""

#: ../source/tutorial/backup-with-mongodump.txt:305
# 6b0662477c274477857da31c9a1208b6
msgid "As above, you may specify username and password connections if your :program:`mongod` requires authentication."
msgstr ""

