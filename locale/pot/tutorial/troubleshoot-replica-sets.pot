# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/troubleshoot-replica-sets.txt:3
# 44b81f2279a2444e9e646b33b4279c06
msgid "Troubleshoot Replica Sets"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:7
# 75c6da1f996d47ef8dd5901da1880d7e
msgid "This section describes common strategies for troubleshooting :term:`replica set` deployments."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:13
# 5eb9c9f55e864d26b01ba1465402b59c
msgid "Check Replica Set Status"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:15
# bcaa09449ffd4e6cb66db0e097412117
msgid "To display the current state of the replica set and current state of each member, run the :method:`rs.status()` method in a :program:`mongo` shell connected to the replica set's :term:`primary`. For descriptions of the information displayed by :method:`rs.status()`, see :doc:`/reference/command/replSetGetStatus`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:23
# f36c5c86208d4ee7ae52b24e2a5da64e
msgid "The :method:`rs.status()` method is a wrapper that runs the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:29
# 98d49e54a4f04b55889c29baa2568abf
msgid "Check the Replication Lag"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:31
# 2087a0c011f3467a8acffc5ec1337fe1
msgid "Replication lag is a delay between an operation on the :term:`primary` and the application of that operation from the :term:`oplog` to the :term:`secondary`. Replication lag can be a significant issue and can seriously affect MongoDB :term:`replica set` deployments. Excessive replication lag makes \"lagged\" members ineligible to quickly become primary and increases the possibility that distributed read operations will be inconsistent."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:39
# c709a29c0c1e45f6824b909bb0dda5ac
msgid "To check the current length of replication lag:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:41
# 64429baaccf34b9c922efe74749270e7
msgid "In a :program:`mongo` shell connected to the primary, call the :method:`rs.printSlaveReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:44
# 841fbaac29c54ab68433fe4da4c0fc8b
msgid "Returns the ``syncedTo`` value for each member, which shows the time when the last oplog entry was written to the secondary, as shown in the following example:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:57
# 71fc50eec87940fd88942bf541456593
msgid "A :ref:`delayed member <replica-set-delayed-members>` may show as ``0`` seconds behind the primary when the inactivity period on the primary is greater than the :data:`~local.system.replset.members[n].slaveDelay` value."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:64
# 02b4375c227f49d2a59bfadf598ea1ff
msgid "The :method:`rs.status()` method is a wrapper around the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:67
# dfe0fa5157d04f639e4c6086426d467d
msgid "Monitor the rate of replication by watching the oplog time in the \"replica\" graph in the `MongoDB Management Service`_. For more information see the `documentation for MMS`_."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:74
# 0d84228e1c574806b59adde3426c57b8
msgid "Possible causes of replication lag include:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:76
# 6c47151231f34f95a8ecb0d6081ae649
msgid "**Network Latency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:78
# b0e2147a6b87467e99f9968ae00152a0
msgid "Check the network routes between the members of your set to ensure that there is no packet loss or network routing issue."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:81
# 6a2acf6495404d308e0e3a22af3e3be9
msgid "Use tools including ``ping`` to test latency between set members and ``traceroute`` to expose the routing of packets network endpoints."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:85
# ddf97d6f41a9432b8c898a351a66b02a
msgid "**Disk Throughput**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:87
# 88378d69ed624a679d0fbe4ca47d1fa0
msgid "If the file system and disk device on the secondary is unable to flush data to disk as quickly as the primary, then the secondary will have difficulty keeping state. Disk-related issues are incredibly prevalent on multi-tenant systems, including virtualized instances, and can be transient if the system accesses disk devices over an IP network (as is the case with Amazon's EBS system.)"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:95
# 10050500cf6a40738c683d54303e140b
msgid "Use system-level tools to assess disk status, including ``iostat`` or ``vmstat``."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:98
# a533d17345da4fd389a7f79fc1716beb
msgid "**Concurrency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:100
# 42593490e6a0490b99d8764133f4b8d7
msgid "In some cases, long-running operations on the primary can block replication on secondaries. For best results, configure :ref:`write concern <write-concern>` to require confirmation of replication to secondaries, as described in :ref:`replica set write concern <replica-set-write-concern>`. This prevents write operations from returning if replication cannot keep up with the write load."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:107
# 85310ec25c884ffaa3d7d7b8726e8633
msgid "Use the :term:`database profiler` to see if there are slow queries or long-running operations that correspond to the incidences of lag."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:110
# 132a1de103994b299b8bac7d48411413
msgid "**Appropriate Write Concern**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:112
# 01741ffe7a4849a2a16b758495edfe89
msgid "If you are performing a large data ingestion or bulk load operation that requires a large number of writes to the primary, particularly with :ref:`unacknowledged write concern <write-concern-unacknowledged>`, the secondaries will not be able to read the oplog fast enough to keep up with changes."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:118
# ed74506392454c9fb5c22fab9788652a
msgid "To prevent this, require :ref:`write acknowledgment or journaled write concern <write-operations-write-concern>` after every 100, 1,000, or an another interval to provide an opportunity for secondaries to catch up with the primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:123
# 302a3b8df0db47d485ccb7a00bd5bf40
msgid "For more information see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:125
# 57c5cc670f054c988f64901812a99bab
msgid ":ref:`Replica Acknowledge Write Concern <replica-set-write-concern>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:126
# a13477e38df04cfbb30aad55db4b1793
msgid ":ref:`Replica Set Write Concern <write-operations-replica-sets>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:127
# c97f5b760f7c44f480e6dcd971d20f59
msgid ":ref:`replica-set-oplog-sizing`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:132
# 3803ff8305fe4f0aa8ce8dfb3d1e6257
msgid "Test Connections Between all Members"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:134
# 10f1d6c1299f485b9eab25d2493818d9
msgid "All members of a :term:`replica set` must be able to connect to every other member of the set to support replication. Always verify connections in both \"directions.\"  Networking topologies and firewall configurations prevent normal and required connectivity, which can block replication."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:140
# 96c4481c0de0448bb760681088c9ab38
msgid "Consider the following example of a bidirectional test of networking:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:0
#: ../source/tutorial/troubleshoot-replica-sets.txt:0
#: ../source/tutorial/troubleshoot-replica-sets.txt:0
# 55d734a167b34e928e6bcaaf5967b990
# 99cd67ad669547088c2bfd290227bf89
# 2c367915904f4a98ace99a53ad4163b9
msgid "Example"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:145
# eb88682b8141459f9594d50184956393
msgid "``m1.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:146
# 2f96e4909f79430ca0cfe98cdf8faef4
msgid "``m2.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:147
# 45f5c4a5609e40edaa270702fffa3bde
msgid "``m3.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:149
# add17816a6344b8fa9ecaf40e57aedcd
msgid "Test the connection from ``m1.example.net`` to the other hosts with the following operation set ``m1.example.net``:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:158
# e9dc935e224b460eae745d35fb8b81bf
msgid "Test the connection from ``m2.example.net`` to the other two hosts with the following operation set from ``m2.example.net``, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:168
# 7950006d03414e30b8bc38f7c82d95bb
msgid "You have now tested the connection between ``m2.example.net`` and ``m1.example.net`` in both directions."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:171
# d9131ffc94ed4cbb8b2364309399c481
msgid "Test the connection from ``m3.example.net`` to the other two hosts with the following operation set from the ``m3.example.net`` host, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:181
# 41eaa5cc9f3c401f8683e1327f18893b
msgid "If any connection, in any direction fails, check your networking and firewall configuration and reconfigure your environment to allow these connections."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:186
# c74afaa8e5a7443c9e1cd806ec91b10c
msgid "Socket Exceptions when Rebooting More than One Secondary"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:188
# 6fc738e8e41f4271aa2972e5feb698fa
msgid "When you reboot members of a replica set, ensure that the set is able to elect a primary during the maintenance. This means ensuring that a majority of the set's ':data:`~local.system.replset.members[n].votes` are available."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:193
# 274bbf8b4cf545c597e0c8a2e4a75a57
msgid "When a set's active members can no longer form a majority, the set's :term:`primary` steps down and becomes a :term:`secondary`. The former primary closes all open connections to client applications. Clients attempting to write to the former primary receive socket exceptions and *Connection reset* errors until the set can elect a primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:206
# 8fabbd54717f4f08b020d2e5ff4eb663
msgid "For more information on votes, see :doc:`/core/replica-set-elections`. For related information on connection errors, see :ref:`faq-keepalive`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:212
# 5cfd79bec1814e6aa61749bfe0ae4ffc
msgid "Check the Size of the Oplog"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:214
# 6a8a8fd400214edb9c7715c1860a355c
msgid "A larger :term:`oplog` can give a replica set a greater tolerance for lag, and make the set more resilient."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:217
# 6f16405696a54cc69206d1881a8ce98f
msgid "To check the size of the oplog for a given :term:`replica set` member, connect to the member in a :program:`mongo` shell and run the :method:`rs.printReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:221
# 3e90849b08944f57aee7d87a2fbfd5e0
msgid "The output displays the size of the oplog and the date ranges of the operations contained in the oplog. In the following example, the oplog is about 10MB and is able to fit about 26 hours (94400 seconds) of operations:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:234
# 5b913edfd4594bca8d55d3b34c7dd4b3
msgid "The oplog should be long enough to hold all transactions for the longest downtime you expect on a secondary. At a minimum, an oplog should be able to hold minimum 24 hours of operations; however, many users prefer to have 72 hours or even a week's work of operations."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:239
# 15147dad1d5f4a29b500a55b71a33cb1
msgid "For more information on how oplog size affects operations, see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:241
# 1d0bfd59d34246b2acd7cad2668355c9
msgid ":ref:`replica-set-oplog-sizing`,"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:242
# 9f2977d5a74f49dfa13688fe9801981e
msgid ":ref:`replica-set-delayed-members`, and"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:243
# 9dd04a270d7b461592f094a6372324d1
msgid ":ref:`replica-set-replication-lag`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:245
# c0c26a64c3a24e40ba49978b28418d25
msgid "You normally want the oplog to be the same size on all members. If you resize the oplog, resize it on all members."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:248
# 63f04f6f464b40d4ac10409619fc5448
msgid "To change oplog size, see the :doc:`/tutorial/change-oplog-size` tutorial."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:253
# cacb4e50969745e8a562c1d43cf380fb
msgid "Oplog Entry Timestamp Error"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:257
# 04dec5a930b3475d963b7b80bf194e69
msgid "Consider the following error in :program:`mongod` output and logs:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:264
# 9ebdaeada1404059a86db62fe1df7959
msgid "Often, an incorrectly typed value in the ``ts`` field in the last :term:`oplog` entry causes this error. The correct data type is Timestamp."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:268
# 956b0141e2ae44978d34264d4386f55b
msgid "Check the type of the ``ts`` value using the following two queries against the oplog collection:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:277
# 03e163b48dc94fae8fd667cf339f0435
msgid "The first query returns the last document in the oplog, while the second returns the last document in the oplog where the ``ts`` value is a Timestamp. The :query:`$type` operator allows you to select :term:`BSON type <BSON types>` 17, is the Timestamp data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:282
# 4ae03ddf212e4ce9bea61963d7c91d58
msgid "If the queries don't return the same document, then the last document in the oplog has the wrong data type in the ``ts`` field."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:287
# b375786b9a8940a49c5f0637acc47104
msgid "If the first query returns this as the last oplog entry:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:297
# dc1c8bb97bf44c49832ee3f50f17d3ca
msgid "And the second query returns this as the last entry where ``ts`` has the ``Timestamp`` type:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:308
# 4d944d82e41b4d9f8e8921f9248574ed
msgid "Then the value for the ``ts`` field in the last oplog entry is of the wrong data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:311
# 695516533734434cb69aba54937576c2
msgid "To set the proper type for this value and resolve this issue, use an update operation that resembles the following:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:319
# 4fb64a2dc7174756a568be889ced13eb
msgid "Modify the timestamp values as needed based on your oplog entry. This operation may take some period to complete because the update must scan and pull the entire oplog into memory."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:324
# 1c61756f1f5246d1908620d42eae472e
msgid "Duplicate Key Error on ``local.slaves``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:326
# 73986b7e9b624476a27bc01b36ec84c0
msgid "The *duplicate key on local.slaves* error, occurs when a :term:`secondary` or :term:`slave` changes its hostname and the :term:`primary` or :term:`master` tries to update its ``local.slaves`` collection with the new name. The update fails because it contains the same ``_id`` value as the document containing the previous hostname. The error itself will resemble the following."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:337
# 791ab16af5144a62ae181a12a21655d9
msgid "This is a benign error and does not affect replication operations on the :term:`secondary` or :term:`slave`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:340
# 1fe6e89d2bea44278e23ca59e5756918
msgid "To prevent the error from appearing, drop the ``local.slaves`` collection from the :term:`primary` or :term:`master`, with the following sequence of operations in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:349
# 1052ef598f564e8caf72702159b87caf
msgid "The next time a :term:`secondary` or :term:`slave` polls the :term:`primary` or :term:`master`, the :term:`primary` or :term:`master` recreates the ``local.slaves`` collection."
msgstr ""

