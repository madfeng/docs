# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/replica-sets.txt:3
# 162cbe489d374dcb89b8491db9e4f3c5
msgid "FAQ: Replication and Replica Sets"
msgstr ""

#: ../source/faq/replica-sets.txt:7
# 17b98c43dd3a48d68191777ea40f5f08
msgid "This document answers common questions about database replication in MongoDB."
msgstr ""

#: ../source/faq/replica-sets.txt:10
# 3144289219be4041865880d3a7b723be
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

#: ../source/faq/replica-sets.txt:15
# 903e7df8e28a4bdaa9c559a89e892dcd
msgid "What kinds of replication does MongoDB support?"
msgstr ""

#: ../source/faq/replica-sets.txt:17
# 1111360908e0410bad3f2985e62b874f
msgid "MongoDB supports master-slave replication and a variation on master-slave replication known as replica sets. Replica sets are the recommended replication topology."
msgstr ""

#: ../source/faq/replica-sets.txt:22
# 1ec8537fb7b345e5b7eee923875de775
msgid "What do the terms \"primary\" and \"master\" mean?"
msgstr ""

#: ../source/faq/replica-sets.txt:24
# 5fada8d95ec94a44ae4e39a89e9df60a
msgid ":term:`Primary` and :term:`master` nodes are the nodes that can accept writes. MongoDB's replication is \"single-master:\" only one node can accept write operations at a time."
msgstr ""

#: ../source/faq/replica-sets.txt:28
# d4f113cd4809471e917b19106634ccd3
msgid "In a replica set, if the current \"primary\" node fails or becomes inaccessible, the other members can autonomously :term:`elect <election>` one of the other members of the set to be the new \"primary\"."
msgstr ""

#: ../source/faq/replica-sets.txt:32
# 30a0743e8c174d24aca6e5077364b891
msgid "By default, clients send all reads to the primary; however, :term:`read preference` is configurable at the client level on a per-connection basis, which makes it possible to send reads to secondary nodes instead."
msgstr ""

#: ../source/faq/replica-sets.txt:38
# ed7ccbd4c6a6490ba911ef971bc05dfe
msgid "What do the terms \"secondary\" and \"slave\" mean?"
msgstr ""

#: ../source/faq/replica-sets.txt:40
# d713174b657348c1981c684a6cc53a43
msgid ":term:`Secondary` and :term:`slave` nodes are read-only nodes that replicate from the :term:`primary`."
msgstr ""

#: ../source/faq/replica-sets.txt:43
# a15f11c1133c48d5b30a19ccc8a1023d
msgid "Replication operates by way of an :term:`oplog`, from which secondary/slave members apply new operations to themselves. This replication process is asynchronous, so secondary/slave nodes may not always reflect the latest writes to the primary. But usually, the gap between the primary and secondary nodes is just few milliseconds on a local network connection."
msgstr ""

#: ../source/faq/replica-sets.txt:50
# 6e74f740289e4aaba28b80debaeedaf7
msgid "How long does replica set failover take?"
msgstr ""

#: ../source/faq/replica-sets.txt:52
# f3f58f2cdfab4e48b335ee7d1a8ef6ca
msgid "It varies, but a replica set will select a new primary within a minute."
msgstr ""

#: ../source/faq/replica-sets.txt:54
# 3d46768c67344380b14ce0896924a784
msgid "It may take 10-30 seconds for the members of a :term:`replica set` to declare a :term:`primary` inaccessible. This triggers an :term:`election`. During the election, the cluster is unavailable for writes."
msgstr ""

#: ../source/faq/replica-sets.txt:59
# 07f9935763724581ae7a6395f38dfb3a
msgid "The election itself may take another 10-30 seconds."
msgstr ""

#: ../source/faq/replica-sets.txt:63
# 9807daf1a1fe4b8b9abcc16a35479722
msgid ":term:`Eventually consistent <eventual consistency>` reads, like the ones that will return from a replica set are only possible with a :term:`write concern` that permits reads from :term:`secondary` members."
msgstr ""

#: ../source/faq/replica-sets.txt:69
# f3f8f70f6391492e9200206088967b27
msgid "Does replication work over the Internet and WAN connections?"
msgstr ""

#: ../source/faq/replica-sets.txt:71
#: ../source/faq/replica-sets.txt:137
#: ../source/faq/replica-sets.txt:254
# 9cd30c60b5ae4ea9a1c24dbb699a385e
# 4a0ade031eae46dcaba3ac1613c23e4f
# e6c25b74ca0244cd8cc8c0f09f6e3355
msgid "Yes."
msgstr ""

#: ../source/faq/replica-sets.txt:73
# 6ad768b42e0644d4bf9f74ba950a85d5
msgid "For example, a deployment may maintain a :term:`primary` and :term:`secondary` in an East-coast data center along with a :term:`secondary` member for disaster recovery in a West-coast data center."
msgstr ""

#: ../source/faq/replica-sets.txt:77
# d48085795a0544d0aade07b647945d17
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`"
msgstr ""

#: ../source/faq/replica-sets.txt:80
# d1d80ca8f1aa4d5e9b6eef286ef1e37b
msgid "Can MongoDB replicate over a \"noisy\" connection?"
msgstr ""

#: ../source/faq/replica-sets.txt:82
# 62c4566218664c289c38a47b2a3b1e64
msgid "Yes, but not without connection failures and the obvious latency."
msgstr ""

#: ../source/faq/replica-sets.txt:84
# ada86bb6a9cc4f72b9e92e90ab92c657
msgid "Members of the set will attempt to reconnect to the other members of the set in response to networking flaps. This does not require administrator intervention. However, if the network connections among the nodes in the replica set are very slow, it might not be possible for the members of the node to keep up with the replication."
msgstr ""

#: ../source/faq/replica-sets.txt:90
# 23624aab1336467b9c24b61e70c052f5
msgid "If the TCP connection between the secondaries and the :term:`primary` instance breaks, a :term:`replica set` will automatically elect one of the :term:`secondary` members of the set as primary."
msgstr ""

#: ../source/faq/replica-sets.txt:95
# 091e0e0eb247451fbe13b70030c98f6f
msgid "What is the preferred replication method: master/slave or replica sets?"
msgstr ""

#: ../source/faq/replica-sets.txt:99
# edf825d4a15e455989d56b8be5b1ec5f
msgid ":term:`Replica sets <replica set>` are the preferred :term:`replication` mechanism in MongoDB. However, if your deployment requires more than 12 nodes, you must use master/slave replication."
msgstr ""

#: ../source/faq/replica-sets.txt:104
# 5ddf6dc74b1441329c2905b4d30d2d1a
msgid "What is the preferred replication method: replica sets or replica pairs?"
msgstr ""

#: ../source/faq/replica-sets.txt:108
# cc4ba357f90d48d987a4f1dd1208836f
msgid ":term:`Replica sets <replica set>` replaced :term:`replica pairs` in version 1.6. :term:`Replica sets <replica set>` are the preferred :term:`replication` mechanism in MongoDB."
msgstr ""

#: ../source/faq/replica-sets.txt:113
# 09be2f08942443b986ff8ab2879ad164
msgid "Why use journaling if replication already provides data redundancy?"
msgstr ""

#: ../source/faq/replica-sets.txt:115
# d2eb7fa4b9c2429e95d27de02ec12145
msgid ":term:`Journaling <journal>` facilitates faster crash recovery. Prior to journaling, crashes often required :dbcommand:`database repairs <repairDatabase>` or full data resync. Both were slow, and the first was unreliable."
msgstr ""

#: ../source/faq/replica-sets.txt:119
# 1485f5ffee244508adaf301d110349cb
msgid "Journaling is particularly useful for protection against power failures, especially if your replica set resides in a single data center or power circuit."
msgstr ""

#: ../source/faq/replica-sets.txt:123
# d2a92d71e0d7418991a23f5c624073d3
msgid "When a :term:`replica set` runs with journaling, :program:`mongod` instances can safely restart without any administrator intervention."
msgstr ""

#: ../source/faq/replica-sets.txt:128
# 983565ae2eec44cb84e2574887d09b39
msgid "Journaling requires some resource overhead for write operations. Journaling has no effect on read performance, however."
msgstr ""

#: ../source/faq/replica-sets.txt:131
# d2155728be7148ebb415df427f5c86da
msgid "Journaling is enabled by default on all 64-bit builds of MongoDB v2.0 and greater."
msgstr ""

#: ../source/faq/replica-sets.txt:135
# a31eeed325cd4f55b0980617884d1758
msgid "Are write operations durable if write concern does not acknowledge writes?"
msgstr ""

#: ../source/faq/replica-sets.txt:139
# 69708393da6f44f19c8ca3da546ca269
msgid "However, if you want confirmation that a given write has arrived at the server, use :ref:`write concern <write-concern>`."
msgstr ""

#: ../source/faq/replica-sets.txt:142
# fc80539f2e12473a865c3751c76a62cd
msgid "After the :ref:`default write concern change <driver-write-concern-change>`, the default write concern acknowledges all write operations, and unacknowledged writes must be explicitly configured. See the :doc:`/applications/drivers` documentation for your driver for more information."
msgstr ""

#: ../source/faq/replica-sets.txt:150
# 400dd51354a448b5a5d6b296a2afb2b2
msgid "The :program:`mongo` shell now defaults to use :doc:`safe writes </core/write-concern>`. See :ref:`write-methods-incompatibility` for more information."
msgstr ""

#: ../source/faq/replica-sets.txt:154
# 5736776b723947d4999c1454d3f229b4
msgid "A new protocol for :ref:`write operations <rel-notes-write-operations>` integrates write concerns with the write operations. Previous versions issued a :dbcommand:`getLastError` command after a write to specify a write concern."
msgstr ""

#: ../source/faq/replica-sets.txt:161
# 1ba3da08fd2a49d78ae4db6985dea5b4
msgid "How many arbiters do replica sets need?"
msgstr ""

#: ../source/faq/replica-sets.txt:163
# f1d0b037d1474abd98c8f7a14d052031
msgid "Some configurations do not require any :term:`arbiter` instances. Arbiters vote in :term:`elections <election>` for :term:`primary` but do not replicate the data like :term:`secondary` members."
msgstr ""

#: ../source/faq/replica-sets.txt:168
# ed2b6df4b11142418889a8a16e852a2b
msgid ":term:`Replica sets <replica set>` require a majority of the remaining nodes present to elect a primary. Arbiters allow you to construct this majority without the overhead of adding replicating nodes to the system."
msgstr ""

#: ../source/faq/replica-sets.txt:173
# 06410ca63eaf45b5a49a74372f7ffee0
msgid "There are many possible replica set :doc:`architectures </core/replica-set-architectures>`."
msgstr ""

#: ../source/faq/replica-sets.txt:176
# 6be2ab8299de415ebdfe54ca611078f2
msgid "A replica set with an odd number of voting nodes does not need an arbiter."
msgstr ""

#: ../source/faq/replica-sets.txt:178
# ec0072c345474b25b86c3093a8ad932e
msgid "A common configuration consists of two replicating nodes that include a :term:`primary` and a :term:`secondary`, as well as an :term:`arbiter` for the third node. This configuration makes it possible for the set to elect a primary in the event of failure, without requiring three replicating nodes."
msgstr ""

#: ../source/faq/replica-sets.txt:184
# 279d1b6a6bac430488a3351a5bbc23b2
msgid "You may also consider adding an arbiter to a set if it has an equal number of nodes in two facilities and network partitions between the facilities are possible. In these cases, the arbiter will break the tie between the two facilities and allow the set to elect a new primary."
msgstr ""

#: ../source/faq/replica-sets.txt:190
# 91676b80e73e42e3927b21c1f39ccf6b
msgid ":doc:`/core/replica-set-architectures`"
msgstr ""

#: ../source/faq/replica-sets.txt:193
# c8f445e35cd34d53932c481c8b121953
msgid "What information do arbiters exchange with the rest of the replica set?"
msgstr ""

#: ../source/faq/replica-sets.txt:195
# 2881a18e31b34b27ac858e360e8c1d55
msgid "Arbiters never receive the contents of a collection but do exchange the following data with the rest of the replica set:"
msgstr ""

#: ../source/faq/replica-sets.txt:198
# 15838be0b665472ba00d320481018ffa
msgid "Credentials used to authenticate the arbiter with the replica set. All MongoDB processes within a replica set use keyfiles. These exchanges are encrypted."
msgstr ""

#: ../source/faq/replica-sets.txt:202
# eec1c9162475427ba0f088241adecfa8
msgid "Replica set configuration data and voting data. This information is not encrypted. Only credential exchanges are encrypted."
msgstr ""

#: ../source/faq/replica-sets.txt:205
# e4960b1052e1408b8eb75d86177c2570
msgid "If your MongoDB deployment uses SSL, then all communications between arbiters and the other members of the replica set are secure. See the documentation for :doc:`/tutorial/configure-ssl` for more information. Run all arbiters on secure networks, as with all MongoDB components."
msgstr ""

#: ../source/faq/replica-sets.txt:0
# 268ff64e3fd748c1acfb71faef97c062
msgid "See"
msgstr ""

#: ../source/faq/replica-sets.txt:215
# 061eb324651547b4ba18231c094cf475
msgid "Which members of a replica set vote in elections?"
msgstr ""

#: ../source/faq/replica-sets.txt:217
# 4e29a864a08949e7bdb81a9bcd222edb
msgid "All members of a replica set, unless the value of :data:`votes <local.system.replset.members[n].votes>` is equal to ``0``, vote in elections. This includes all :ref:`delayed <replica-set-delayed-members>`, :ref:`hidden <replica-set-hidden-members>` and :ref:`secondary-only <replica-set-secondary-only-members>` members, as well as the :ref:`arbiters <replica-set-arbiters>`."
msgstr ""

#: ../source/faq/replica-sets.txt:225
# d9f10f6f667b41ee81b2379f9844425d
msgid "Additionally, the :data:`~replSetGetStatus.members.state` of the voting members also determine whether the member can vote. Only voting members in the following states are eligible to vote:"
msgstr ""

#: ../source/faq/replica-sets.txt:229
# b93e85c6e489483ba79924b85c644286
msgid "``PRIMARY``"
msgstr ""

#: ../source/faq/replica-sets.txt:231
# 50d408444ce146a1a6b53a8bc911aa22
msgid "``SECONDARY``"
msgstr ""

#: ../source/faq/replica-sets.txt:233
# 95bed4fab34a4c18805266fed5a43de0
msgid "``RECOVERING``"
msgstr ""

#: ../source/faq/replica-sets.txt:235
# 231542eedcfc4416a413a7c252596ddb
msgid "``ARBITER``"
msgstr ""

#: ../source/faq/replica-sets.txt:237
# 8a731c9379574f7b925c28e0799facaa
msgid "``ROLLBACK``"
msgstr ""

#: ../source/faq/replica-sets.txt:239
#: ../source/faq/replica-sets.txt:249
# e457d8c6f9374a99b6bd7669643e79e8
# 1361cca7919a4601bde1efb5ac25bdc4
msgid ":ref:`replica-set-elections`"
msgstr ""

#: ../source/faq/replica-sets.txt:242
# c660558b0a5241b099ec5f4a233f0fe4
msgid "Do hidden members vote in replica set elections?"
msgstr ""

#: ../source/faq/replica-sets.txt:244
# b05d03bec8134dd2b3448adb48705338
msgid ":ref:`Hidden members <replica-set-hidden-members>` of :term:`replica sets <replica set>` *do* vote in elections. To exclude a member from voting in an :term:`election`, change the value of the member's :data:`~local.system.replset.members[n].votes` configuration to ``0``."
msgstr ""

#: ../source/faq/replica-sets.txt:252
# 28f1890b8216435fa666ca747ec4e138
msgid "Is it normal for replica set members to use different amounts of disk space?"
msgstr ""

#: ../source/faq/replica-sets.txt:256
# e5256402a75b45d3b96b01861328ba8c
msgid "Factors including: different oplog sizes, different levels of storage fragmentation, and MongoDB's data file pre-allocation can lead to some variation in storage utilization between nodes. Storage use disparities will be most pronounced when you add members at different times."
msgstr ""

