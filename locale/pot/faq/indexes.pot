# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/indexes.txt:3
# 2e5a1cae2b584a889ab89f19f5f3b61e
msgid "FAQ: Indexes"
msgstr ""

#: ../source/faq/indexes.txt:7
# 4f152001ebf34db197712f7032c18f9f
msgid "This document addresses common questions regarding MongoDB indexes."
msgstr ""

#: ../source/faq/indexes.txt:9
# 14de95e6de684a9a95ff92c090233d8b
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_. See also :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:15
# 7f25e3812883494b9b9f3bac947d1d40
msgid "Should you run ``ensureIndex()`` after every insert?"
msgstr ""

#: ../source/faq/indexes.txt:17
# 3251de0949d040dda43b6c5eff778ea3
msgid "No. You only need to create an index once for a single collection. After initial creation, MongoDB automatically updates the index as data changes."
msgstr ""

#: ../source/faq/indexes.txt:21
# 645a0dfd249e4c3788970878d92130f2
msgid "While running :method:`~db.collection.ensureIndex()` is usually ok, if an index doesn't exist because of ongoing administrative work, a call to :method:`~db.collection.ensureIndex()` may disrupt database availability. Running :method:`~db.collection.ensureIndex()` can render a replica set inaccessible as the index creation is happening. See :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/faq/indexes.txt:29
# b554636313024dba81f1246df9707fcc
msgid "How do you know what indexes exist in a collection?"
msgstr ""

#: ../source/faq/indexes.txt:31
# 2f37098f77a14f768d4dc7c39a4333ca
msgid "To list a collection's indexes, use the :method:`db.collection.getIndexes()` method or a similar :api:`method for your driver <>`."
msgstr ""

#: ../source/faq/indexes.txt:36
# bcc55314a6d547f7a18d9465caa811bd
msgid "How do you determine the size of an index?"
msgstr ""

#: ../source/faq/indexes.txt:38
# 927e532e0dbe4620aefe1038ce627e34
msgid "To check the sizes of the indexes on a collection, use :method:`db.collection.stats()`."
msgstr ""

#: ../source/faq/indexes.txt:43
# 9e1cb2b58656430abc63b890ca510618
msgid "What happens if an index does not fit into RAM?"
msgstr ""

#: ../source/faq/indexes.txt:45
# ee2abffaffdb4ef1b215567f2c596a4d
msgid "When an index is too large to fit into RAM, MongoDB must read the index from disk, which is a much slower operation than reading from RAM. Keep in mind an index fits into RAM when your server has RAM available for the index combined with the rest of the :term:`working set`."
msgstr ""

#: ../source/faq/indexes.txt:50
# a820d06693a44fe7ba63f21a410d1f8c
msgid "In certain cases, an index does not need to fit *entirely* into RAM. For details, see :ref:`indexing-right-handed`."
msgstr ""

#: ../source/faq/indexes.txt:56
# 27fc36b007034dcbba428a00f6e6ff0b
msgid "How do you know what index a query used?"
msgstr ""

#: ../source/faq/indexes.txt:58
# efd85f09fa104bd286937fa584b2aaff
msgid "To inspect how MongoDB processes a query, use the :method:`~cursor.explain()` method in the :program:`mongo` shell, or in your application driver."
msgstr ""

#: ../source/faq/indexes.txt:63
# 8202e0758a0e4744a5a69f7c790c662e
msgid "How do you determine what fields to index?"
msgstr ""

#: ../source/faq/indexes.txt:65
# 7ec3f4ed2dc545d68afb8f5847e761bf
msgid "A number of factors determine what fields to index, including :ref:`selectivity <index-selectivity>`, fitting indexes into RAM, reusing indexes in multiple queries when possible, and creating indexes that can support all the fields in a given query. For detailed documentation on choosing which fields to index, see :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:81
# bf0b9aca2a4a477b90c42cb3c1d5056f
msgid "How do write operations affect indexes?"
msgstr ""

#: ../source/faq/indexes.txt:83
# 8d2c0da04fff4d28bdf931b1da864036
msgid "Any write operation that alters an indexed field requires an update to the index in addition to the document itself. If you update a document that causes the document to grow beyond the allotted record size, then MongoDB must update all indexes that include this document as part of the update operation."
msgstr ""

#: ../source/faq/indexes.txt:89
# 92eaead62dd347ce94693f2cfa7da5b6
msgid "Therefore, if your application is write-heavy, creating too many indexes might affect performance."
msgstr ""

#: ../source/faq/indexes.txt:93
# 4ee8b0a1f97e4955acd0ad6620a8cb15
msgid "Will building a large index affect database performance?"
msgstr ""

#: ../source/faq/indexes.txt:95
# 801419ebb7d0480cae7aa4ee803e1ac3
msgid "Building an index can be an IO-intensive operation, especially if you have a large collection. This is true on any database system that supports secondary indexes, including MySQL. If you need to build an index on a large collection, consider building the index in the background. See :ref:`index-creation-operations`."
msgstr ""

#: ../source/faq/indexes.txt:101
# 080296644f8a49349561901b072a3ea8
msgid "If you build a large index without the background option, and if doing so causes the database to stop responding, do one of the following:"
msgstr ""

#: ../source/faq/indexes.txt:105
# 97f06bedb5cd4662be632a031e26fba4
msgid "Wait for the index to finish building."
msgstr ""

#: ../source/faq/indexes.txt:107
# b2d7a304191e4a1ba09cc5eead1631f6
msgid "Kill the current operation (see :method:`db.killOp()`). The partial index will be deleted."
msgstr ""

#: ../source/faq/indexes.txt:113
# 99160437f3084f868e714a3b6b050bdb
msgid "Can I use index keys to constrain query matches?"
msgstr ""

#: ../source/faq/indexes.txt:115
# b8bbdc698b334169856abdf3d703acc0
msgid "You can use the :method:`~cursor.min()` and :method:`~cursor.max()` methods to constrain the results of the cursor returned from :method:`~db.collection.find()` by using index keys."
msgstr ""

#: ../source/faq/indexes.txt:120
# 4a05ec3652514ed79d0b0542cb9d9818
msgid "Using ``$ne`` and ``$nin`` in a query is slow. Why?"
msgstr ""

#: ../source/faq/indexes.txt:122
# 144439bb9e48401d8fe8bbbd35754d8c
msgid "The :query:`$ne` and :query:`$nin` operators are not selective. See :ref:`index-selectivity`. If you need to use these, it is often best to make sure that an additional, more selective criterion is part of the query."
msgstr ""

#: ../source/faq/indexes.txt:128
# 4ad72405a5904872b2ad9bdfa6484ec3
msgid "Can I use a multi-key index to support a query for a whole array?"
msgstr ""

#: ../source/faq/indexes.txt:130
# 1bf9a9c032b54ee89071245708823832
msgid "Not entirely. The index can partially support these queries because it can speed the selection of the first element of the array; however, comparing all subsequent items in the array cannot use the index and must scan the documents individually."
msgstr ""

#: ../source/faq/indexes.txt:136
# 0b976321895345e3a4f5eadf07489e39
msgid "How can I effectively use indexes strategy for attribute lookups?"
msgstr ""

#: ../source/faq/indexes.txt:138
# 3f8bba9f0e364781bcadbafd6690ee50
msgid "For simple attribute lookups that don't require sorted result sets or range queries, consider creating a field that contains an array of documents where each document has a field (e.g. ``attrib`` ) that holds a specific type of attribute. You can index this ``attrib`` field."
msgstr ""

#: ../source/faq/indexes.txt:144
# e976ed430c724fcfb644de3d29dbed35
msgid "For example, the ``attrib`` field in the following document allows you to add an unlimited number of attributes types:"
msgstr ""

#: ../source/faq/indexes.txt:158
# d07c931c3e284670b509254df2116a70
msgid "*Both* of the following queries could use the same ``{ \"attrib.k\": 1, \"attrib.v\": 1 }`` index:"
msgstr ""

