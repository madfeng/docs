# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/mongo.txt:3
# a1e473859714461e8a3359b08dc250cf
msgid "FAQ: The ``mongo`` Shell"
msgstr ""

#: ../source/faq/mongo.txt:10
# 30caa0b40bd1485fb16a4048679824b3
msgid "How can I enter multi-line operations in the ``mongo`` shell?"
msgstr ""

#: ../source/faq/mongo.txt:12
# b4b4607db77c4055a00cc6bdd9fc7ec5
msgid "If you end a line with an open parenthesis (``'('``), an open brace (``'{'``), or an open bracket (``'['``), then the subsequent lines start with ellipsis (``\"...\"``) until you enter the corresponding closing parenthesis (``')'``), the closing brace (``'}'``) or the closing bracket (``']'``). The :program:`mongo` shell waits for the closing parenthesis, closing brace, or the closing bracket before evaluating the code, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:27
# 83c9ad6d734d4f57812217d3ecb24d9c
msgid "You can exit the line continuation mode if you enter two blank lines, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:40
# 228bc6c6fde24a3bbf84b3654b3223fe
msgid "How can I access different databases temporarily?"
msgstr ""

#: ../source/faq/mongo.txt:42
# a06e818698a840e8ace617ee062b1a3b
msgid "You can use :method:`db.getSiblingDB()` method to access another database without switching databases, as in the following example which first switches to the ``test`` database and then accesses the ``sampleDB`` database from the ``test`` database:"
msgstr ""

#: ../source/faq/mongo.txt:56
# 460eb67e221246c48c0fba047921d9b6
msgid "Does the ``mongo`` shell support tab completion and other keyboard shortcuts?"
msgstr ""

#: ../source/faq/mongo.txt:58
# 7388c7624a3b4568ab30865c1aec5bb5
msgid "The :program:`mongo` shell supports keyboard shortcuts. For example,"
msgstr ""

#: ../source/faq/mongo.txt:60
# 45e6e5be53da4f0491da34fff0dac2bb
msgid "Use the up/down arrow keys to scroll through command history. See :ref:`.dbshell <mongo-dbshell-file>` documentation for more information on the ``.dbshell`` file."
msgstr ""

#: ../source/faq/mongo.txt:64
# 92ae13b293b94a15afecefc30f2ca65a
msgid "Use ``<Tab>`` to autocomplete or to list the completion possibilities, as in the following example which uses ``<Tab>`` to complete the method name starting with the letter ``'c'``:"
msgstr ""

#: ../source/faq/mongo.txt:72
# c490c7cc043f4fb7826b4b675a938fe8
msgid "Because there are many collection methods starting with the letter ``'c'``, the ``<Tab>`` will list the various methods that start with ``'c'``."
msgstr ""

#: ../source/faq/mongo.txt:76
# 91f235da4ae147ca977bb2c7cfba39fa
msgid "For a full list of the shortcuts, see :ref:`Shell Keyboard Shortcuts <mongo-keyboard-shortcuts>`"
msgstr ""

#: ../source/faq/mongo.txt:79
# 79647ae7274544d79405e4535f480b93
msgid "How can I customize the ``mongo`` shell prompt?"
msgstr ""

#: ../source/faq/mongo.txt:83
# 68744b7bd1ed43f18f153a4e03db961e
msgid "You can change the :program:`mongo` shell prompt by setting the ``prompt`` variable. This makes it possible to display additional information in the prompt."
msgstr ""

#: ../source/faq/mongo.txt:87
# 46eb63fbb07d4baebd210005ecb0d8d9
msgid "Set ``prompt`` to any string or arbitrary JavaScript code that returns a string, consider the following examples:"
msgstr ""

#: ../source/faq/mongo.txt:90
# 7eae03e1ae1945eb9d6439fb78e5a8ba
msgid "Set the shell prompt to display the hostname and the database issued:"
msgstr ""

#: ../source/faq/mongo.txt:97
#: ../source/faq/mongo.txt:111
# 9eae4e8621b044a8a6c9422d2f58a4e5
# 061cbe34ac3c4a0e98322a76b086044b
msgid "The :program:`mongo` shell prompt should now reflect the new prompt:"
msgstr ""

#: ../source/faq/mongo.txt:103
# a5459e6201e4461a8eed05ecc9b8da67
msgid "Set the shell prompt to display the database statistics:"
msgstr ""

#: ../source/faq/mongo.txt:117
# 96c87eda274b41318fa6694671f9db66
msgid "You can add the logic for the prompt in the :ref:`.mongorc.js <mongo-mongorc-file>` file to set the prompt each time you start up the :program:`mongo` shell."
msgstr ""

#: ../source/faq/mongo.txt:122
# b381d33855b44cc583a9726c29154979
msgid "Can I edit long shell operations with an external text editor?"
msgstr ""

#: ../source/faq/mongo.txt:126
# 28354f6eb0b44cb9a3f8408c2e7ab7b9
msgid "You can use your own editor in the :program:`mongo` shell by setting the :envvar:`EDITOR` environment variable before starting the :program:`mongo` shell. Once in the :program:`mongo` shell, you can edit with the specified editor by typing ``edit <variable>`` or ``edit <function>``, as in the following example:"
msgstr ""

#: ../source/faq/mongo.txt:132
# 454c450ddacf44d7a29ef046fe418349
msgid "Set the :envvar:`EDITOR` variable from the command line prompt:"
msgstr ""

#: ../source/faq/mongo.txt:138
# 9b8f30fdde1e461992d0de61cab3db7c
msgid "Start the :program:`mongo` shell:"
msgstr ""

#: ../source/faq/mongo.txt:144
# a1ad483f07924a4dacd6129f8bdaddca
msgid "Define a function ``myFunction``:"
msgstr ""

#: ../source/faq/mongo.txt:150
# dec34540617040698829246c89699333
msgid "Edit the function using your editor:"
msgstr ""

#: ../source/faq/mongo.txt:156
# 197b732d0d4741a38ea6f3ab51d499d7
msgid "The command should open the ``vim`` edit session. Remember to save your changes."
msgstr ""

#: ../source/faq/mongo.txt:159
# bc266ec1027d4619aafeb94d2eeee000
msgid "Type ``myFunction`` to see the function definition:"
msgstr ""

#: ../source/faq/mongo.txt:165
# 89d86338e2f8404586d49c4dd82e2dc3
msgid "The result should be the changes from your saved edit:"
msgstr ""

