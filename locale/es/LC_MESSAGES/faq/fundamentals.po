# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 16:24+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 6f2fff7587d449a0801cfeb626300e76
#: ../source/faq/fundamentals.txt:3
msgid "FAQ: MongoDB Fundamentals"
msgstr ""

# c5d07d9d71574a9d85ef60eadb576eda
#: ../source/faq/fundamentals.txt:7
msgid ""
"This document addresses basic high level questions about MongoDB and its "
"use."
msgstr ""

# c8bed7b7c95c4a8db73bbf120f274371
#: ../source/faq/fundamentals.txt:10
msgid ""
"If you don't find the answer you're looking for, check the :doc:`complete "
"list of FAQs </faq>` or post your question to the `MongoDB User Mailing List"
" <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

# b18e7ebc66fa4d3fbadb2af1dd681eac
#: ../source/faq/fundamentals.txt:15
msgid "What kind of database is MongoDB?"
msgstr ""

# 07d62fb9ba5443e996a6630bb862d148
#: ../source/faq/fundamentals.txt:17
msgid ""
"MongoDB is a :term:`document`\\-oriented DBMS. Think of MySQL but with "
":term:`JSON`-like objects comprising the data model, rather than RDBMS "
"tables. Significantly, MongoDB supports neither joins nor transactions. "
"However, it features secondary indexes, an expressive query language, atomic"
" writes on a per-document level, and fully-consistent reads."
msgstr ""

# 622cf55c66724156b1f44cf8454e1ac0
#: ../source/faq/fundamentals.txt:23
msgid ""
"Operationally, MongoDB features master-slave replication with automated "
"failover and built-in horizontal scaling via automated range-based "
"partitioning."
msgstr ""

# 22305e81413d40d5be53d3d1c4f3e10f
#: ../source/faq/fundamentals.txt:29
msgid ""
"MongoDB uses :term:`BSON`, a binary object format similar to, but more "
"expressive than :term:`JSON`."
msgstr ""

# d239e91b345b431c943a99cae7399040
#: ../source/faq/fundamentals.txt:33
msgid "Do MongoDB databases have tables?"
msgstr ""

# c7a62b8ee552481bac1b349362805a1f
#: ../source/faq/fundamentals.txt:35
msgid ""
"Instead of tables, a MongoDB database stores its data in :term:`collections "
"<collection>`, which are the rough equivalent of RDBMS tables. A collection "
"holds one or more :term:`documents <document>`, which corresponds to a "
"record or a row in a relational database table, and each document has one or"
" more fields, which corresponds to a column in a relational database table."
msgstr ""

# 8eed337891b94bd2aee7b42f63748e3d
#: ../source/faq/fundamentals.txt:43
msgid ""
"Collections have important differences from RDBMS tables. Documents in a "
"single collection may have a unique combination and set of fields. Documents"
" need not have identical fields. You can add a field to some documents in a "
"collection without adding that field to all documents in the collection."
msgstr ""

# 85c4ab2ec12441e5be97b5d998324fb8
# 9277643fa6ec4c0eaca5bf70ec4889d1
#: ../source/faq/fundamentals.txt:0 ../source/faq/fundamentals.txt:0
msgid "See"
msgstr ""

# cbda7d23d02f454dafb1a24ea9a5b5bd
#: ../source/faq/fundamentals.txt:54
msgid "Do MongoDB databases have schemas?"
msgstr ""

# 5cce3a433f0e44159b8db0f72d7ead3c
#: ../source/faq/fundamentals.txt:56
msgid ""
"MongoDB uses dynamic schemas. You can create collections without defining "
"the structure, i.e. the fields or the types of their values, of the "
"documents in the collection. You can change the structure of documents "
"simply by adding new fields or deleting existing ones. Documents in a "
"collection need not have an identical set of fields."
msgstr ""

# 7de239dfb23e4706bf1ed4948b0649d8
#: ../source/faq/fundamentals.txt:62
msgid ""
"In practice, it is common for the documents in a collection to have a "
"largely homogeneous structure; however, this is not a requirement. MongoDB's"
" flexible schemas mean that schema migration and augmentation are very easy "
"in practice, and you will rarely, if ever, need to write scripts that "
"perform \"alter table\" type operations, which simplifies and facilitates "
"iterative software development with MongoDB."
msgstr ""

# 13dcfec0aafe41c3959c5b8db66c5a89
#: ../source/faq/fundamentals.txt:73
msgid "What languages can I use to work with MongoDB?"
msgstr ""

# b3c853c40d4549c1b527b349a01e6f58
#: ../source/faq/fundamentals.txt:75
msgid ""
"MongoDB :term:`client drivers <driver>` exist for all of the most popular "
"programming languages, and many other ones. See the :ecosystem:`latest list "
"of drivers </drivers>` for details."
msgstr ""

# ab856e67101f4746ae359f4e3af98343
#: ../source/faq/fundamentals.txt:81
msgid ":doc:`/applications/drivers`."
msgstr ""

# 3759cd2768154a69bb961fd1aa2e264f
#: ../source/faq/fundamentals.txt:84
msgid "Does MongoDB support SQL?"
msgstr ""

# b1f5fa59a0614d66aee062461176f335
#: ../source/faq/fundamentals.txt:86
msgid "No."
msgstr ""

# 1ab2a18b46da43e886e382cc5623258a
#: ../source/faq/fundamentals.txt:88
msgid ""
"However, MongoDB does support a rich, ad-hoc query language of its own."
msgstr ""

# f481a742892242b0b96fbd81100aadec
#: ../source/faq/fundamentals.txt:91
msgid ":doc:`/reference/operator`"
msgstr ""

# efdc70c7d8c849ff86f209d76d4ec6e3
#: ../source/faq/fundamentals.txt:94
msgid "What are typical uses for MongoDB?"
msgstr ""

# 1803aa4e12a04668bc3999fabd87b6ee
#: ../source/faq/fundamentals.txt:96
msgid ""
"MongoDB has a general-purpose design, making it appropriate for a large "
"number of use cases. Examples include content management systems, mobile "
"applications, gaming, e-commerce, analytics, archiving, and logging."
msgstr ""

# e310ff1ce6594e1bbc6e5cf09ff9c254
#: ../source/faq/fundamentals.txt:101
msgid ""
"Do not use MongoDB for systems that require SQL, joins, and multi-object "
"transactions."
msgstr ""

# b91ee329a3754d6c94fb4626374ef9c4
#: ../source/faq/fundamentals.txt:105
msgid "Does MongoDB support ACID transactions?"
msgstr ""

# be0030d4510a449da674f9f0883b8d20
#: ../source/faq/fundamentals.txt:107
msgid "MongoDB does not support multi-document transactions."
msgstr ""

# 833476475b4c408d8ba60da2fc8cf51d
#: ../source/faq/fundamentals.txt:109
msgid ""
"However, MongoDB does provide atomic operations on a single document. Often "
"these document-level atomic operations are sufficient to solve problems that"
" would require ACID transactions in a relational database."
msgstr ""

# 9e5bad14d34145ef9c876e6ac182e6d4
#: ../source/faq/fundamentals.txt:114
msgid ""
"For example, in MongoDB, you can embed related data in nested arrays or "
"nested documents within a single document and update the entire document in "
"a single atomic operation. Relational databases might represent the same "
"kind of data with multiple tables and rows, which would require transaction "
"support to update the data atomically."
msgstr ""

# 49a551f3548643df838dfa5ae918b9e5
#: ../source/includes/fact-write-concern-read-uncommitted.rst:1
msgid ""
"MongoDB allows clients to read documents inserted or modified before it "
"commits these modifications to disk, regardless of write concern level or "
"journaling configuration. As a result, applications may observe two classes "
"of behaviors:"
msgstr ""

# e33ca67cb08540d289f1ae8daa663be8
#: ../source/includes/fact-write-concern-read-uncommitted.rst:6
msgid ""
"For systems with multiple concurrent readers and writers, MongoDB will allow"
" clients to read the results of a write operation before the write operation"
" returns."
msgstr ""

# 0de84b7ff1bd4f6db7cf2e7a1699945d
#: ../source/includes/fact-write-concern-read-uncommitted.rst:10
msgid ""
"If the :program:`mongod` terminates before the journal commits, even if a "
"write returns successfully, queries may have read data that will not exist "
"after the :program:`mongod` restarts."
msgstr ""

# fd673f8ccbc944b687363e07d8df9911
#: ../source/includes/fact-write-concern-read-uncommitted.rst:14
msgid ""
"Other database systems refer to these isolation semantics as *read "
"uncommitted*. For all inserts and updates, MongoDB modifies each document in"
" isolation: clients never see documents in intermediate states. For multi-"
"document operations, MongoDB does not provide any multi-document "
"transactions or isolation."
msgstr ""

# 38130baca98f404ea8e50f0dabf46a04
#: ../source/includes/fact-write-concern-read-uncommitted.rst:20
msgid ""
"When :program:`mongod` returns a successful *journaled write concern*, the "
"data is fully committed to disk and will be available after "
":program:`mongod` restarts."
msgstr ""

# aad05a677bb44b9b99006fd41c64f5f7
#: ../source/includes/fact-write-concern-read-uncommitted.rst:24
msgid ""
"For replica sets, write operations are durable only after a write replicates"
" and commits to the journal of a majority of the members of the set. MongoDB"
" regularly commits data to the journal regardless of journaled write "
"concern: use the :setting:`~storage.journal.commitIntervalMs` to control how"
" often a :program:`mongod` commits the journal."
msgstr ""

# 46f83f0726cd41538c4d97cd2871a98d
#: ../source/faq/fundamentals.txt:123
msgid "Does MongoDB require a lot of RAM?"
msgstr ""

# ebef304f2d504d5595cb63cc14e4306e
#: ../source/faq/fundamentals.txt:125
msgid ""
"Not necessarily. It's certainly possible to run MongoDB on a machine with a "
"small amount of free RAM."
msgstr ""

# 3964806195d24a6c9a59b1ebb5191374
#: ../source/faq/fundamentals.txt:128
msgid ""
"MongoDB automatically uses all free memory on the machine as its cache. "
"System resource monitors show that MongoDB uses a lot of memory, but its "
"usage is dynamic. If another process suddenly needs half the server's RAM, "
"MongoDB will yield cached memory to the other process."
msgstr ""

# 736ecf19de5d4a7999f8350a1e63a850
#: ../source/faq/fundamentals.txt:133
msgid ""
"Technically, the operating system's virtual memory subsystem manages "
"MongoDB's memory. This means that MongoDB will use as much free memory as it"
" can, swapping to disk as needed. Deployments with enough memory to fit the "
"application's working data set in RAM will achieve the best performance."
msgstr ""

# 77558a6e4f22430fb94d03c425a13dcb
#: ../source/faq/fundamentals.txt:139
msgid ""
":doc:`/faq/diagnostics` for answers to additional questions about MongoDB "
"and Memory use."
msgstr ""

# d6979cbf11394159929146d631256e17
#: ../source/faq/fundamentals.txt:143
msgid "How do I configure the cache size?"
msgstr ""

# fae06b5ef1d14233b4beb2818652e832
#: ../source/faq/fundamentals.txt:145
msgid ""
"MongoDB has no configurable cache. MongoDB uses all *free* memory on the "
"system automatically by way of memory-mapped files. Operating systems use "
"the same approach with their file system caches."
msgstr ""

# 147adc21df8c40fab1a50cd3290037f0
#: ../source/faq/fundamentals.txt:152
msgid ""
"Does MongoDB require a separate caching layer for application-level caching?"
msgstr ""

# 567d8dccb5d14ed4b633fc8f747bdf8d
#: ../source/faq/fundamentals.txt:154
msgid ""
"No. In MongoDB, a document's representation in the database is similar to "
"its representation in application memory. This means the database already "
"stores the usable form of data, making the data usable in both the "
"persistent store and in the application cache. This eliminates the need for "
"a separate caching layer in the application."
msgstr ""

# 98caac6a2bc144f29a9b36b839556a3f
#: ../source/faq/fundamentals.txt:160
msgid ""
"This differs from relational databases, where caching data is more "
"expensive. Relational databases must transform data into object "
"representations that applications can read and must store the transformed "
"data in a separate cache: if these transformation from data to application "
"objects require joins, this process increases the overhead related to using "
"the database which increases the importance of the caching layer."
msgstr ""

# eb9fd1204c7f4caa938d751fc5c33457
#: ../source/faq/fundamentals.txt:169
msgid "Does MongoDB handle caching?"
msgstr ""

# 1d7215e378b649e5b24d8c99e08b1e6b
#: ../source/faq/fundamentals.txt:171
msgid ""
"Yes. MongoDB keeps all of the most recently used data in RAM. If you have "
"created indexes for your queries and your working data set fits in RAM, "
"MongoDB serves all queries from memory."
msgstr ""

# 8ea3747e62704f41bea83f7f48a7050f
#: ../source/faq/fundamentals.txt:175
msgid ""
"MongoDB does not implement a query cache: MongoDB serves all queries "
"directly from the indexes and/or data files."
msgstr ""

# 75b2053cf859467d8ee6e4bf6a3c0164
#: ../source/faq/fundamentals.txt:179
msgid "Are writes written to disk immediately, or lazily?"
msgstr ""

# 87d6b9cd961c48b0a62ea5b4e95c7ef1
#: ../source/faq/fundamentals.txt:181
msgid ""
"Writes are physically written to the :doc:`journal </core/journaling>` "
"within 100 milliseconds, by default. At that point, the write is \"durable\""
" in the sense that after a pull-plug-from-wall event, the data will still be"
" recoverable after a hard restart. See "
":setting:`~storage.journal.commitIntervalMs` for more information on the "
"journal commit window."
msgstr ""

# 7f8a347fdc6d4692abfeca290a309a75
#: ../source/faq/fundamentals.txt:187
msgid ""
"While the journal commit is nearly instant, MongoDB writes to the data files"
" lazily. MongoDB may wait to write data to the data files for as much as one"
" minute by default. This does not affect durability, as the journal has "
"enough information to ensure crash recovery. To change the interval for "
"writing to the data files, see :setting:`~storage.syncPeriodSecs`."
msgstr ""

# 072a3ca955814bf2a28bb34fde3e177a
#: ../source/faq/fundamentals.txt:194
msgid "What language is MongoDB written in?"
msgstr ""

# 32415053f38240ae9eee22eb88ca8848
#: ../source/faq/fundamentals.txt:196
msgid ""
"MongoDB is implemented in C++. :term:`Drivers <driver>` and client libraries"
" are typically written in their respective languages, although some drivers "
"use C extensions for better performance."
msgstr ""

# 1471850977d74f1b8dccf61d78785c72
#: ../source/faq/fundamentals.txt:203
msgid "What are the limitations of 32-bit versions of MongoDB?"
msgstr ""

# 219f8a4551ab40b0ad8c726916057826
#: ../source/faq/fundamentals.txt:205
msgid ""
"MongoDB uses :ref:`memory-mapped files <faq-storage-memory-mapped-files>`. "
"When running a 32-bit build of MongoDB, the total storage size for the "
"server, including data and indexes, is 2 gigabytes. For this reason, do not "
"deploy MongoDB to production on 32-bit machines."
msgstr ""

# 716087f18ab74c348b956d6477f9c7c3
#: ../source/faq/fundamentals.txt:211
msgid ""
"If you're running a 64-bit build of MongoDB, there's virtually no limit to "
"storage size. For production deployments, 64-bit builds and operating "
"systems are strongly recommended."
msgstr ""

# cf12bffc8da640689003fef335fb756e
#: ../source/faq/fundamentals.txt:215
msgid ""
"\"`Blog Post: 32-bit Limitations <http://blog.mongodb.org/post/137788967/32"
"-bit-limitations>`_\""
msgstr ""

#: ../source/faq/fundamentals.txt:219
msgid ""
"32-bit builds disable :term:`journaling <journal>` by default because "
"journaling further limits the maximum amount of data that the database can "
"store."
msgstr ""

#~ msgid ""
#~ "32-bit builds disable :term:`journaling <journal>` by default because "
#~ "journaling further limits the maximum amount of data that the database can"
#~ msgstr ""
