# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 16:24+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 8225ab7057634d62a6ce7f56998b740b
#: ../source/faq/replica-sets.txt:3
msgid "FAQ: Replication and Replica Sets"
msgstr ""

# 558c8716113d4250b840602411a6e0cc
#: ../source/faq/replica-sets.txt:7
msgid ""
"This document answers common questions about database replication in "
"MongoDB."
msgstr ""

# e2c6da2ebc614d6195bfb5b06b76a30d
#: ../source/faq/replica-sets.txt:10
msgid ""
"If you don't find the answer you're looking for, check the :doc:`complete "
"list of FAQs </faq>` or post your question to the `MongoDB User Mailing List"
" <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

# 5d2686439925416bb19fe8bad69499a1
#: ../source/faq/replica-sets.txt:15
msgid "What kinds of replication does MongoDB support?"
msgstr ""

# 074bbc155584431e925b2067bf9d5256
#: ../source/faq/replica-sets.txt:17
msgid ""
"MongoDB supports master-slave replication and a variation on master-slave "
"replication known as replica sets. Replica sets are the recommended "
"replication topology."
msgstr ""

# abd2268528bb411aa21595c2a48122d1
#: ../source/faq/replica-sets.txt:22
msgid "What do the terms \"primary\" and \"master\" mean?"
msgstr ""

# 0fccf92e50df484bb33224a9e365a8ee
#: ../source/faq/replica-sets.txt:24
msgid ""
":term:`Primary` and :term:`master` nodes are the nodes that can accept "
"writes. MongoDB's replication is \"single-master:\" only one node can accept"
" write operations at a time."
msgstr ""

# 2c529fa853be415883e735e8628eaed7
#: ../source/faq/replica-sets.txt:28
msgid ""
"In a replica set, if the current \"primary\" node fails or becomes "
"inaccessible, the other members can autonomously :term:`elect <election>` "
"one of the other members of the set to be the new \"primary\"."
msgstr ""

# 5ad8791787e34af4812270a8a11c6698
#: ../source/faq/replica-sets.txt:32
msgid ""
"By default, clients send all reads to the primary; however, :term:`read "
"preference` is configurable at the client level on a per-connection basis, "
"which makes it possible to send reads to secondary nodes instead."
msgstr ""

# d7caf28a3dad488fbdc7cb5f15d4d0de
#: ../source/faq/replica-sets.txt:38
msgid "What do the terms \"secondary\" and \"slave\" mean?"
msgstr ""

# 8e91ad22c5794606be1d19b8e6ddabd6
#: ../source/faq/replica-sets.txt:40
msgid ""
":term:`Secondary` and :term:`slave` nodes are read-only nodes that replicate"
" from the :term:`primary`."
msgstr ""

# c381d29e551343908cdbda1bff824937
#: ../source/faq/replica-sets.txt:43
msgid ""
"Replication operates by way of an :term:`oplog`, from which secondary/slave "
"members apply new operations to themselves. This replication process is "
"asynchronous, so secondary/slave nodes may not always reflect the latest "
"writes to the primary. But usually, the gap between the primary and "
"secondary nodes is just few milliseconds on a local network connection."
msgstr ""

# a372de8ff6a74cf4a46f8f561e653e77
#: ../source/faq/replica-sets.txt:50
msgid "How long does replica set failover take?"
msgstr ""

# b13a85f6481048e6bd81c24a75ad9051
#: ../source/faq/replica-sets.txt:52
msgid ""
"It varies, but a replica set will select a new primary within a minute."
msgstr ""

# 1d8f5096e61e472aa85a20ae448128c9
#: ../source/faq/replica-sets.txt:54
msgid ""
"It may take 10-30 seconds for the members of a :term:`replica set` to "
"declare a :term:`primary` inaccessible. This triggers an :term:`election`. "
"During the election, the cluster is unavailable for writes."
msgstr ""

# 79bb94831a1949e082cc940895f573da
#: ../source/faq/replica-sets.txt:59
msgid "The election itself may take another 10-30 seconds."
msgstr ""

# 909b9858b5ed4a7ca8a87876802a6ffb
#: ../source/faq/replica-sets.txt:63
msgid ""
":term:`Eventually consistent <eventual consistency>` reads, like the ones "
"that will return from a replica set are only possible with a :term:`write "
"concern` that permits reads from :term:`secondary` members."
msgstr ""

# 294bdeef8b074688918280bf8bdd241f
#: ../source/faq/replica-sets.txt:69
msgid "Does replication work over the Internet and WAN connections?"
msgstr ""

# 58696e1931a2469fbef099b0cfe1d657
# 4181f9452d094b66982b4ff5edd8371e
# 894251cdad3e4233b2d7714762579c31
#: ../source/faq/replica-sets.txt:71 ../source/faq/replica-sets.txt:137
#: ../source/faq/replica-sets.txt:254
msgid "Yes."
msgstr ""

# 90aba582381b42f8901a78204be62424
#: ../source/faq/replica-sets.txt:73
msgid ""
"For example, a deployment may maintain a :term:`primary` and "
":term:`secondary` in an East-coast data center along with a "
":term:`secondary` member for disaster recovery in a West-coast data center."
msgstr ""

# d3f3724e9cad48c192489eaed653e3a3
#: ../source/faq/replica-sets.txt:77
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`"
msgstr ""

# 91232828ae9645439640b57c576154d3
#: ../source/faq/replica-sets.txt:80
msgid "Can MongoDB replicate over a \"noisy\" connection?"
msgstr ""

# 9c2b17f5aa9f40868631eea6235a5288
#: ../source/faq/replica-sets.txt:82
msgid "Yes, but not without connection failures and the obvious latency."
msgstr ""

# a3dbd889efc045489b1558249b3669fe
#: ../source/faq/replica-sets.txt:84
msgid ""
"Members of the set will attempt to reconnect to the other members of the set"
" in response to networking flaps. This does not require administrator "
"intervention. However, if the network connections among the nodes in the "
"replica set are very slow, it might not be possible for the members of the "
"node to keep up with the replication."
msgstr ""

# eb68d1064ebd4fea8fd3c8ecc4a78683
#: ../source/faq/replica-sets.txt:90
msgid ""
"If the TCP connection between the secondaries and the :term:`primary` "
"instance breaks, a :term:`replica set` will automatically elect one of the "
":term:`secondary` members of the set as primary."
msgstr ""

# e8efa14d8cdb4ad780c5ee900e70fdc1
#: ../source/faq/replica-sets.txt:95
msgid ""
"What is the preferred replication method: master/slave or replica sets?"
msgstr ""

# 99fc5d10e92a4cea9b392a9ce839cafc
#: ../source/faq/replica-sets.txt:99
msgid ""
":term:`Replica sets <replica set>` are the preferred :term:`replication` "
"mechanism in MongoDB. However, if your deployment requires more than 12 "
"nodes, you must use master/slave replication."
msgstr ""

# 9ce535d4ad68482dbc6cd461355b02a3
#: ../source/faq/replica-sets.txt:104
msgid ""
"What is the preferred replication method: replica sets or replica pairs?"
msgstr ""

# 2d3146b97c734ee6b6fc4ca88fa64eae
#: ../source/faq/replica-sets.txt:108
msgid ""
":term:`Replica sets <replica set>` replaced :term:`replica pairs` in version"
" 1.6. :term:`Replica sets <replica set>` are the preferred "
":term:`replication` mechanism in MongoDB."
msgstr ""

# 6e93760efac945a08b6b45f6e8bef239
#: ../source/faq/replica-sets.txt:113
msgid "Why use journaling if replication already provides data redundancy?"
msgstr ""

# 6ea3638fc36948e0929cc84d224b17a3
#: ../source/faq/replica-sets.txt:115
msgid ""
":term:`Journaling <journal>` facilitates faster crash recovery. Prior to "
"journaling, crashes often required :dbcommand:`database repairs "
"<repairDatabase>` or full data resync. Both were slow, and the first was "
"unreliable."
msgstr ""

# cac18bacce054975b426872e26d71ca9
#: ../source/faq/replica-sets.txt:119
msgid ""
"Journaling is particularly useful for protection against power failures, "
"especially if your replica set resides in a single data center or power "
"circuit."
msgstr ""

# af766652f604412f855fed3ee507a0e9
#: ../source/faq/replica-sets.txt:123
msgid ""
"When a :term:`replica set` runs with journaling, :program:`mongod` instances"
" can safely restart without any administrator intervention."
msgstr ""

# b6fbba794afb48e5be5c6cc228005e17
#: ../source/faq/replica-sets.txt:128
msgid ""
"Journaling requires some resource overhead for write operations. Journaling "
"has no effect on read performance, however."
msgstr ""

# 0b830543c8a14d4c82bfbd4a7c2f6533
#: ../source/faq/replica-sets.txt:131
msgid ""
"Journaling is enabled by default on all 64-bit builds of MongoDB v2.0 and "
"greater."
msgstr ""

# 0d7090db63074e63a8cc77fafec52e33
#: ../source/faq/replica-sets.txt:135
msgid ""
"Are write operations durable if write concern does not acknowledge writes?"
msgstr ""

# 201283209c724a30b5f3b3ee6f60415c
#: ../source/faq/replica-sets.txt:161
msgid "How many arbiters do replica sets need?"
msgstr ""

# b3052bebebc04301a7e1e3d1950b3f4f
#: ../source/faq/replica-sets.txt:163
msgid ""
"Some configurations do not require any :term:`arbiter` instances. Arbiters "
"vote in :term:`elections <election>` for :term:`primary` but do not "
"replicate the data like :term:`secondary` members."
msgstr ""

# f5238b5e0c7642adb84f702e6f8656f7
#: ../source/faq/replica-sets.txt:168
msgid ""
":term:`Replica sets <replica set>` require a majority of the remaining nodes"
" present to elect a primary. Arbiters allow you to construct this majority "
"without the overhead of adding replicating nodes to the system."
msgstr ""

# 5b096e56e3ad4c739fe2d685b386fb7f
#: ../source/faq/replica-sets.txt:173
msgid ""
"There are many possible replica set :doc:`architectures </core/replica-set-"
"architectures>`."
msgstr ""

# 2ff957c5054142e9a695ca662d5f52b5
#: ../source/faq/replica-sets.txt:176
msgid ""
"A replica set with an odd number of voting nodes does not need an arbiter."
msgstr ""

# 84b548a730d343ab9f337153438100e6
#: ../source/faq/replica-sets.txt:178
msgid ""
"A common configuration consists of two replicating nodes that include a "
":term:`primary` and a :term:`secondary`, as well as an :term:`arbiter` for "
"the third node. This configuration makes it possible for the set to elect a "
"primary in the event of failure, without requiring three replicating nodes."
msgstr ""

# d9eb380fa359465da66c0f580cffd73c
#: ../source/faq/replica-sets.txt:184
msgid ""
"You may also consider adding an arbiter to a set if it has an equal number "
"of nodes in two facilities and network partitions between the facilities are"
" possible. In these cases, the arbiter will break the tie between the two "
"facilities and allow the set to elect a new primary."
msgstr ""

# aa0fccdb9d7641a3b5d20399c230e205
#: ../source/faq/replica-sets.txt:190
msgid ":doc:`/core/replica-set-architectures`"
msgstr ""

# 17ca6493d2f0494cbb9c54b99983a002
#: ../source/faq/replica-sets.txt:193
msgid ""
"What information do arbiters exchange with the rest of the replica set?"
msgstr ""

# 7c762e4a9d1648e3a934a0dc27a52416
#: ../source/faq/replica-sets.txt:195
msgid ""
"Arbiters never receive the contents of a collection but do exchange the "
"following data with the rest of the replica set:"
msgstr ""

# ba1a6dc83ed74c4393ac446845e00788
#: ../source/faq/replica-sets.txt:198
msgid ""
"Credentials used to authenticate the arbiter with the replica set. All "
"MongoDB processes within a replica set use keyfiles. These exchanges are "
"encrypted."
msgstr ""

# 80b6222463e54bc5be6f844b82963f09
#: ../source/faq/replica-sets.txt:202
msgid ""
"Replica set configuration data and voting data. This information is not "
"encrypted. Only credential exchanges are encrypted."
msgstr ""

# 14a43c527caa4a9a80a78bc34c080b74
#: ../source/faq/replica-sets.txt:205
msgid ""
"If your MongoDB deployment uses SSL, then all communications between "
"arbiters and the other members of the replica set are secure. See the "
"documentation for :doc:`/tutorial/configure-ssl` for more information. Run "
"all arbiters on secure networks, as with all MongoDB components."
msgstr ""

# 525d8a533d9c4c72b59521f58a6ea093
#: ../source/faq/replica-sets.txt:0
msgid "See"
msgstr ""

# af7dbc1c05c54dbcbb27a23789ef60f3
#: ../source/faq/replica-sets.txt:215
msgid "Which members of a replica set vote in elections?"
msgstr ""

# ac88d09e8bfb47f7be842eff6c1a6da2
#: ../source/faq/replica-sets.txt:217
msgid ""
"All members of a replica set, unless the value of :data:`votes "
"<local.system.replset.members[n].votes>` is equal to ``0``, vote in "
"elections. This includes all :ref:`delayed <replica-set-delayed-members>`, "
":ref:`hidden <replica-set-hidden-members>` and :ref:`secondary-only "
"<replica-set-secondary-only-members>` members, as well as the :ref:`arbiters"
" <replica-set-arbiters>`."
msgstr ""

# e9608f02068d49bd8c651ce8fbaac1a2
#: ../source/faq/replica-sets.txt:225
msgid ""
"Additionally, the :data:`~replSetGetStatus.members.state` of the voting "
"members also determine whether the member can vote. Only voting members in "
"the following states are eligible to vote:"
msgstr ""

# f4610c67338a4aaf8229db6d7871db2d
#: ../source/faq/replica-sets.txt:229
msgid "``PRIMARY``"
msgstr ""

# 33f5e841978e4765b5e6337cb064e639
#: ../source/faq/replica-sets.txt:231
msgid "``SECONDARY``"
msgstr ""

# 7d6cb3ee7a994dba9bc506fec77f8bf8
#: ../source/faq/replica-sets.txt:233
msgid "``RECOVERING``"
msgstr ""

# 6722c8bded4b4ece9b119a06fc1cd675
#: ../source/faq/replica-sets.txt:235
msgid "``ARBITER``"
msgstr ""

# 216966a6850343b18ab82f0bf433bd21
#: ../source/faq/replica-sets.txt:237
msgid "``ROLLBACK``"
msgstr ""

# d5f50e119fe84c9bbf778c398554a3c0
# 1883c88a7dfe4b36a0a8a46057dbb6f0
#: ../source/faq/replica-sets.txt:239 ../source/faq/replica-sets.txt:249
msgid ":ref:`replica-set-elections`"
msgstr ""

# ddb3324f4d1641939d389254e71f177a
#: ../source/faq/replica-sets.txt:242
msgid "Do hidden members vote in replica set elections?"
msgstr ""

# 3694b5f596354fdab30a17f13959d5f0
#: ../source/faq/replica-sets.txt:244
msgid ""
":ref:`Hidden members <replica-set-hidden-members>` of :term:`replica sets "
"<replica set>` *do* vote in elections. To exclude a member from voting in an"
" :term:`election`, change the value of the member's "
":data:`~local.system.replset.members[n].votes` configuration to ``0``."
msgstr ""

# d68778ead9e141078a8534dc25535857
#: ../source/faq/replica-sets.txt:252
msgid ""
"Is it normal for replica set members to use different amounts of disk space?"
msgstr ""

# 3c73e4108c2543ab9d7d78c530bf06c9
#: ../source/faq/replica-sets.txt:256
msgid ""
"Factors including: different oplog sizes, different levels of storage "
"fragmentation, and MongoDB's data file pre-allocation can lead to some "
"variation in storage utilization between nodes. Storage use disparities will"
" be most pronounced when you add members at different times."
msgstr ""

#: ../source/faq/replica-sets.txt:139
msgid ""
"However, if you want confirmation that a given write has arrived at the "
"server, use :ref:`write concern <write-concern>`."
msgstr ""

#: ../source/faq/replica-sets.txt:142
msgid ""
"After the :ref:`default write concern change <driver-write-concern-change>`,"
" the default write concern acknowledges all write operations, and "
"unacknowledged writes must be explicitly configured. See the "
":doc:`/applications/drivers` documentation for your driver for more "
"information."
msgstr ""

#: ../source/faq/replica-sets.txt:150
msgid ""
"The :program:`mongo` shell now defaults to use :doc:`safe writes </core"
"/write-concern>`. See :ref:`write-methods-incompatibility` for more "
"information."
msgstr ""

#: ../source/faq/replica-sets.txt:154
msgid ""
"A new protocol for :ref:`write operations <rel-notes-write-operations>` "
"integrates write concerns with the write operations. Previous versions "
"issued a :dbcommand:`getLastError` command after a write to specify a write "
"concern."
msgstr ""

#~ msgid ""
#~ "However, if you want confirmation that a given write has arrived at the "
#~ "server, use :ref:`write concern <write-concern>`. The "
#~ ":dbcommand:`getLastError` command provides the facility for write concern. "
#~ "However, after the :ref:`default write concern change <driver-write-concern-"
#~ "change>`, the default write concern acknowledges all write operations, and "
#~ "unacknowledged writes must be explicitly configured. See the "
#~ ":doc:`/applications/drivers` documentation for your driver for more "
#~ "information."
#~ msgstr ""
