# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2013-12-16 22:45+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 5d5782eb4a844eb6b66388abe5312acb
#: ../source/tutorial/insert-documents.txt:3
msgid "Insert Documents"
msgstr ""

#: ../source/tutorial/insert-documents.txt:7
msgid ""
"In MongoDB, the :method:`db.collection.insert()` method adds new documents "
"into a collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:11
msgid "Insert a Document"
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:8
msgid "Insert a document into a collection."
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:11
msgid ""
"Insert a document into a collection named ``inventory``. The operation will "
"create the collection if the collection does not currently exist."
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:31
msgid ""
"The operation returns a :method:`WriteResult` object with the status of the "
"operation. A successful insert of the document returns the following object:"
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:41
msgid ""
"The :data:`~WriteResult.nInserted` field specifies the number of documents "
"inserted. If the operation encounters an error, the :method:`WriteResult` "
"object will contain the error information."
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:57
msgid "Review the inserted document."
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:60
msgid ""
"If the insert operation is successful, verify the insertion by querying the "
"collection."
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:69
msgid "The document you inserted should return."
msgstr ""

#: ../source/includes/steps/getting-started-insert.rst:77
msgid ""
"The returned document shows that MongoDB added an ``_id`` field to the "
"document. If a client inserts a document that does not contain the ``_id`` "
"field, MongoDB adds the field with the value set to a generated "
":manual:`ObjectId </reference/object-id>`. The :manual:`ObjectId </reference"
"/object-id>` values in your documents will differ from the ones shown."
msgstr ""

#: ../source/tutorial/insert-documents.txt:16
msgid "Insert an Array of Documents"
msgstr ""

#: ../source/tutorial/insert-documents.txt:18
msgid ""
"You can pass an array of documents to the :method:`db.collection.insert()` "
"method to insert multiple documents."
msgstr ""

#: ../source/includes/steps/getting-started-insert-an-array.rst:8
msgid "Create an array of documents."
msgstr ""

#: ../source/includes/steps/getting-started-insert-an-array.rst:11
msgid ""
"Define a variable ``mydocuments`` that holds an array of documents to "
"insert."
msgstr ""

#: ../source/includes/steps/getting-started-insert-an-array.rst:51
msgid "Insert the documents."
msgstr ""

#: ../source/includes/steps/getting-started-insert-an-array.rst:54
msgid ""
"Pass the ``mydocuments`` array to the :method:`db.collection.insert()` to "
"perform a bulk insert."
msgstr ""

#: ../source/includes/steps/getting-started-insert-an-array.rst:63
#: ../source/includes/steps/getting-started-insert-bulk.rst:92
msgid ""
"The method returns a :method:`BulkWriteResult` object with the status of the"
" operation. A successful insert of the documents returns the following "
"object:"
msgstr ""

#: ../source/includes/steps/getting-started-insert-an-array.rst:82
#: ../source/includes/steps/getting-started-insert-bulk.rst:111
msgid ""
"The :data:`~BulkWriteResult.nInserted` field specifies the number of "
"documents inserted. If the operation encounters an error, the "
":method:`BulkWriteResult` object will contain information regarding the "
"error."
msgstr ""

#: ../source/includes/steps/getting-started-insert-an-array.rst:87
msgid ""
"The inserted documents will each have an ``_id`` field added by MongoDB."
msgstr ""

#: ../source/tutorial/insert-documents.txt:24
msgid "Insert Multiple Documents with ``Bulk``"
msgstr ""

#: ../source/tutorial/insert-documents.txt:28
msgid ""
"MongoDB provides a :method:`Bulk()` API that you can use to perform multiple"
" write operations in bulk. The following sequence of operations describes "
"how you would use the :method:`Bulk()` API to insert a group of documents "
"into a MongoDB collection."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:8
msgid "Initialize a ``Bulk`` operations builder."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:11
msgid ""
"Initialize a :method:`Bulk` operations builder for the collection "
"``inventory``."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:20
msgid ""
"The operation returns an unordered operations builder which maintains a list"
" of operations to perform. Unordered operations means that MongoDB can "
"execute in parallel as well as in nondeterministic order. If an error occurs"
" during the processing of one of the write operations, MongoDB will continue"
" to process remaining write operations in the list."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:27
msgid ""
"You can also initialize an ordered operations builder; see "
":method:`db.collection.initializeOrderedBulkOp()` for details."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:42
msgid "Add insert operations to the ``bulk`` object."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:45
msgid ""
"Add two insert operations to the ``bulk`` object using the "
":method:`Bulk.insert()` method."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:80
msgid "Execute the bulk operation."
msgstr ""

#: ../source/includes/steps/getting-started-insert-bulk.rst:83
msgid ""
"Call the :method:`~Bulk.execute()` method on the ``bulk`` object to execute "
"the operations in its list."
msgstr ""

#: ../source/tutorial/insert-documents.txt:36
msgid "Additional Examples and Methods"
msgstr ""

#: ../source/tutorial/insert-documents.txt:38
msgid "For more examples, see :method:`db.collection.insert()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:40
msgid ""
"The :method:`db.collection.update()` method, the "
":method:`db.collection.findAndModify()`, and the "
":method:`db.collection.save()` method can also add new documents. See the "
"individual reference pages for the methods for more information and "
"examples."
msgstr ""

#~ msgid ""
#~ "In MongoDB, the :method:`db.collection.insert()` method adds new documents "
#~ "into a collection. In addition, both the :method:`db.collection.update()` "
#~ "method and the :method:`db.collection.save()` method can also add new "
#~ "documents through an operation called an *upsert*. An *upsert* is an "
#~ "operation that performs either an update of an existing document or an "
#~ "insert of a new document if the document to modify does not exist."
#~ msgstr ""

#~ msgid ""
#~ "This tutorial provides examples of insert operations using each of the three"
#~ " methods in the :program:`mongo` shell."
#~ msgstr ""

#~ msgid "Insert a Document with ``insert()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "The following statement inserts a document with three fields into the "
#~ "collection ``inventory``:"
#~ msgstr ""

#~ msgid ""
#~ "In the example, the document has a user-specified ``_id`` field value of "
#~ "``10``. The value must be unique within the ``inventory`` collection."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.insert()`."
#~ msgstr ""

#~ msgid "Insert a Document with ``update()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "Call the :method:`~db.collection.update()` method with the ``upsert`` flag "
#~ "to create a new document if no document matches the update's query criteria."
#~ " [#previous-versions-upsert]_"
#~ msgstr ""

#~ msgid ""
#~ "The following example creates a new document if no document in the "
#~ "``inventory`` collection contains ``{ type: \"books\", item : \"journal\" "
#~ "}``:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB adds the ``_id`` field and assigns as its value a unique ObjectId. "
#~ "The new document includes the ``item`` and ``type`` fields from the "
#~ "``<query>`` criteria and the ``qty`` field from the ``<update>`` parameter."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.update()`."
#~ msgstr ""

#~ msgid ""
#~ "Prior to version 2.2, in the :program:`mongo` shell, you would specify the "
#~ "``upsert`` and the ``multi`` options in the "
#~ ":method:`~db.collection.update()` method as positional boolean options. See "
#~ ":method:`~db.collection.update()` for details."
#~ msgstr ""

#~ msgid "Insert a Document with ``save()`` Method"
#~ msgstr ""

#~ msgid ""
#~ "To insert a document with the :method:`~db.collection.save()` method, pass "
#~ "the method a document that does not contain the ``_id`` field or a document "
#~ "that contains an ``_id`` field that does not exist in the collection."
#~ msgstr ""

#~ msgid ""
#~ "The following example creates a new document in the ``inventory`` "
#~ "collection:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB adds the ``_id`` field and assigns as its value a unique ObjectId."
#~ msgstr ""

#~ msgid "For more examples, see :method:`~db.collection.save()`."
#~ msgstr ""
