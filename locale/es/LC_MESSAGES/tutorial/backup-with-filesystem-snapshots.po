# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:36+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 1a04fffc69d84422a57881f4c1f44009
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:3
msgid "Backup and Restore with Filesystem Snapshots"
msgstr ""

# 324d0ac249ef4990ab30aa3bdf84bb18
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:7
msgid ""
"This document describes a procedure for creating backups of MongoDB systems "
"using system-level tools, such as :term:`LVM` or storage appliance, as well "
"as the corresponding restoration strategies."
msgstr ""

# 86f2d86ba40e4a3887ddb65028fe0bb5
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:11
msgid ""
"These filesystem snapshots, or \"block-level\" backup methods use system "
"level tools to create copies of the device that holds MongoDB's data files. "
"These methods complete quickly and work reliably, but require more system "
"configuration outside of MongoDB."
msgstr ""

# a7635712372145aeae2572ad9ea144a8
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:16
msgid ":doc:`/core/backups` and :doc:`/tutorial/backup-with-mongodump`."
msgstr ""

# 1358623be78b46078cdb946800075a26
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:22
msgid "Snapshots Overview"
msgstr ""

# a16445b1156c45a8878de2e6508d05ee
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:24
msgid ""
"Snapshots work by creating pointers between the live data and a special "
"snapshot volume. These pointers are theoretically equivalent to \"hard "
"links.\" As the working data diverges from the snapshot, the snapshot "
"process uses a copy-on-write strategy. As a result the snapshot only stores "
"modified data."
msgstr ""

# b2fcd8b867774beb883df5212a759509
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:30
msgid ""
"After making the snapshot, you mount the snapshot image on your file system "
"and copy data from the snapshot. The resulting backup contains a full copy "
"of all data."
msgstr ""

# 66e61a05269645efaee1515b9bfa2e79
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:34
msgid "Snapshots have the following limitations:"
msgstr ""

# e4891190de774a12bc591ab3a5306a09
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:36
msgid ""
"The database must be valid when the snapshot takes place. This means that "
"all writes accepted by the database need to be fully written to disk: either"
" to the :term:`journal` or to data files."
msgstr ""

# a92bb1bfb3c049bf921f0747382c29e4
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:41
msgid ""
"If all writes are not on disk when the backup occurs, the backup will not "
"reflect these changes. If writes are *in progress* when the backup occurs, "
"the data files will reflect an inconsistent state. With :term:`journaling "
"<journal>` all data-file states resulting from in-progress writes are "
"recoverable; without journaling you must flush all pending writes to disk "
"before running the backup operation and must ensure that no writes occur "
"during the entire backup procedure."
msgstr ""

# f965b883a57f4989b8b5245fbeac848a
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:50
msgid ""
"If you do use journaling, the journal **must** reside on the same volume as "
"the data."
msgstr ""

# 1776d3afe11e4b53b79c1a4c80af5352
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:53
msgid ""
"Snapshots create an image of an entire disk image. Unless you need to back "
"up your entire system, consider isolating your MongoDB data files, journal "
"(if applicable), and configuration on one logical disk that doesn't contain "
"any other data."
msgstr ""

# 628e1f916c0a4714b47b3dccc97420a9
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:58
msgid ""
"Alternately, store all MongoDB data files on a dedicated device so that you "
"can make backups without duplicating extraneous data."
msgstr ""

# 9831a144a37d4818a8b75aed0b548dd7
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:61
msgid ""
"Ensure that you copy data from snapshots and onto other systems to ensure "
"that data is safe from site failures."
msgstr ""

# c06d6619089e498fb529e226397380ab
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:64
msgid ""
"Although different snapshots methods provide different capability, the LVM "
"method outlined below does not provide any capacity for capturing "
"incremental backups."
msgstr ""

# 5ef139e6d65e477c9a9775cc703a8851
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:71
msgid "Snapshots With Journaling"
msgstr ""

# c7b4004ca8a0470a9f2e196c9310fc69
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:73
msgid ""
"If your :program:`mongod` instance has journaling enabled, then you can use "
"any kind of file system or volume/block level snapshot tool to create "
"backups."
msgstr ""

# 0c0b357033f24fb9bb11360d771b084b
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:77
msgid ""
"If you manage your own infrastructure on a Linux-based system, configure "
"your system with :term:`LVM` to provide your disk packages and provide "
"snapshot capability. You can also use LVM-based setups *within* a "
"cloud/virtualized environment."
msgstr ""

# 9de5bc0963ef4eb2b458ddfd77feff49
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:84
msgid ""
"Running :term:`LVM` provides additional flexibility and enables the "
"possibility of using snapshots to back up MongoDB."
msgstr ""

# 86650d70eef54f669fc20e9c728d9d55
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:88
msgid "Snapshots with Amazon EBS in a RAID 10 Configuration"
msgstr ""

# 7122c83e548145eda0d4f4e2859f958f
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:90
msgid ""
"If your deployment depends on Amazon's Elastic Block Storage (EBS) with RAID"
" configured within your instance, it is impossible to get a consistent state"
" across all disks using the platform's snapshot tool. As an alternative, you"
" can do one of the following:"
msgstr ""

# a755658dc3fd4f98a620aa272f0cf324
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:95
msgid ""
"Flush all writes to disk and create a write lock to ensure consistent state "
"during the backup process."
msgstr ""

# 94ab0d66f15c4fb58dcb4986f3a82ef0
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:98
msgid "If you choose this option see :ref:`backup-without-journaling`."
msgstr ""

# a9bfb1c173b64f35bfa8484bbb01d2bb
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:100
msgid ""
"Configure :term:`LVM` to run and hold your MongoDB data files on top of the "
"RAID within your system."
msgstr ""

# f065647c1bb54fcf901f5238fd2a0fde
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:103
msgid ""
"If you choose this option, perform the LVM backup operation described in "
":ref:`lvm-backup-operation`."
msgstr ""

# 6a562ac182f24cf19a923db26564854d
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:109
msgid "Backup and Restore Using LVM on a Linux System"
msgstr ""

# 1708c7e5879243388cff8ece291afd06
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:111
msgid ""
"This section provides an overview of a simple backup process using "
":term:`LVM` on a Linux system. While the tools, commands, and paths may be "
"(slightly) different on your system the following steps provide a high level"
" overview of the backup operation."
msgstr ""

# ff3b4c27612e41df96479d6c164b03e2
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:118
msgid ""
"Only use the following procedure as a guideline for a backup system and "
"infrastructure. Production backup systems must consider a number of "
"application specific requirements and factors unique to specific "
"environments."
msgstr ""

# f1a9402b3f5f4bf1bba1c9a037ecc4d0
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:126
msgid "Create a Snapshot"
msgstr ""

# 5784e81efa714445b8bdada09f70519f
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:128
msgid ""
"To create a snapshot with :term:`LVM`, issue a command as root in the "
"following format:"
msgstr ""

# dc9c1852acc146e5b429fd00d16957c5
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:135
msgid ""
"This command creates an :term:`LVM` snapshot (with the ``--snapshot`` "
"option) named ``mdb-snap01`` of the ``mongodb`` volume in the ``vg0`` volume"
" group."
msgstr ""

# 3567df5971d0497a92ab386988d32307
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:139
msgid ""
"This example creates a snapshot named ``mdb-snap01`` located at ``/dev/vg0"
"/mdb-snap01``. The location and paths to your systems volume groups and "
"devices may vary slightly depending on your operating system's :term:`LVM` "
"configuration."
msgstr ""

# 51e63b53019e4ac2a0b52d78b7977bd7
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:144
msgid ""
"The snapshot has a cap of at 100 megabytes, because of the parameter "
"``--size 100M``. This size does not reflect the total amount of the data on "
"the disk, but rather the quantity of differences between the current state "
"of ``/dev/vg0/mongodb`` and the creation of the snapshot (i.e. ``/dev/vg0"
"/mdb-snap01``.)"
msgstr ""

# 5e19f39beb3f419d8ddad5767d371a39
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:152
msgid ""
"Ensure that you create snapshots with enough space to account for data "
"growth, particularly for the period of time that it takes to copy data out "
"of the system or to a temporary image."
msgstr ""

# d5095252d7f849ffa9ff8c5f907797b1
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:156
msgid ""
"If your snapshot runs out of space, the snapshot image becomes unusable. "
"Discard this logical volume and create another."
msgstr ""

# e14ad4ac722646b694d06b6419bc4458
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:159
msgid ""
"The snapshot will exist when the command returns. You can restore directly "
"from the snapshot at any time or by creating a new logical volume and "
"restoring from this snapshot to the alternate image."
msgstr ""

# 7527abd84ef3404ea5ea3592501ba31d
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:163
msgid ""
"While snapshots are great for creating high quality backups very quickly, "
"they are not ideal as a format for storing backup data. Snapshots typically "
"depend and reside on the same storage infrastructure as the original disk "
"images. Therefore, it's crucial that you archive these snapshots and store "
"them elsewhere."
msgstr ""

# 461b9c0e1c92476cb263bfb978be3886
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:170
msgid "Archive a Snapshot"
msgstr ""

# fc41eee84e0b4cc5bc260b7ab939a283
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:182
msgid "The above command sequence does the following:"
msgstr ""

# cb59e9d0665546abafd733b8e2e681e9
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:188
msgid ""
"Performs a block level copy of the entire snapshot image using the ``dd`` "
"command and compresses the result in a gzipped file in the current working "
"directory."
msgstr ""

# c0992078b31a41ed8314879a63d03a17
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:194
msgid ""
"This command will create a large ``gz`` file in your current working "
"directory. Make sure that you run this command in a file system that has "
"enough free space."
msgstr ""

# a829502d4a514adcac3994c0486f8508
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:201
msgid "Restore a Snapshot"
msgstr ""

# 8aedf327daab4b93b571514e1902408e
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:203
msgid ""
"To restore a snapshot created with the above method, issue the following "
"sequence of commands:"
msgstr ""

# b356f8ed51e243109870f71214edc1b3
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:212
msgid "The above sequence does the following:"
msgstr ""

# 3bc260473ea34ab386dcb986d35b0c5a
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:214
msgid ""
"Creates a new logical volume named ``mdb-new``, in the ``/dev/vg0`` volume "
"group. The path to the new device will be ``/dev/vg0/mdb-new``."
msgstr ""

# 756bb57bf0b740b38493ca1b135ff3bf
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:219
msgid ""
"This volume will have a maximum size of 1 gigabyte. The original file system"
" must have had a total size of 1 gigabyte or smaller, or else the "
"restoration will fail."
msgstr ""

# f642d0da0a4e4d3b8b3155508fd07f5a
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:223
msgid "Change ``1G`` to your desired volume size."
msgstr ""

# 395e95bd739c482e937784e8a15c8d32
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:225
msgid ""
"Uncompresses and unarchives the ``mdb-snap01.gz`` into the ``mdb-new`` disk "
"image."
msgstr ""

# 8cef04ab2490401cbed29f3d11803d51
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:228
msgid ""
"Mounts the ``mdb-new`` disk image to the ``/srv/mongodb`` directory. Modify "
"the mount point to correspond to your MongoDB data file location, or other "
"location as needed."
msgstr ""

# 1105d43c6cd14d248a1672aa91fbaeca
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:234
msgid ""
"The restored snapshot will have a stale ``mongod.lock`` file. If you do not "
"remove this file from the snapshot, and MongoDB may assume that the stale "
"lock file indicates an unclean shutdown. If you're running with "
":setting:`storage.journal.enabled` enabled, and you *do not* use "
":method:`db.fsyncLock()`, you do not need to remove the ``mongod.lock`` "
"file. If you use :method:`db.fsyncLock()` you will need to remove the lock."
msgstr ""

# 844473f841fa49af849b71e31ba98bbb
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:245
msgid "Restore Directly from a Snapshot"
msgstr ""

# b93b0554fb2e4fa78c892ef7546f4fa9
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:247
msgid ""
"To restore a backup without writing to a compressed ``gz`` file, use the "
"following sequence of commands:"
msgstr ""

# 6f068e7556f246558e94d56a90d56b65
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:258
msgid "Remote Backup Storage"
msgstr ""

# c5218f1507c74e1e8bc40c9341c1f75c
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:260
msgid ""
"You can implement off-system backups using the :ref:`combined process "
"<backup-restore-from-snapshot>` and SSH."
msgstr ""

# 2dd15e0b348d4110a0709fcb6e2afc1a
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:263
msgid ""
"This sequence is identical to procedures explained above, except that it "
"archives and compresses the backup on a remote system using SSH."
msgstr ""

# e2742004b5ee458594e49dc3b4a79fdc
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:266
msgid "Consider the following procedure:"
msgstr ""

# 6f3ed120894c43a6be98550ca452fd06
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:279
msgid "Create Backups on Instances that do not have Journaling Enabled"
msgstr ""

# 7a6f5022ef404023a2cda37e985b7e66
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:281
msgid ""
"If your :program:`mongod` instance does not run with journaling enabled, or "
"if your journal is on a separate volume, obtaining a functional backup of a "
"consistent state is more complicated. As described in this section, you must"
" flush all writes to disk and lock the database to prevent writes during the"
" backup process. If you have a :term:`replica set` configuration, then for "
"your backup use a :term:`secondary` which is not receiving reads (i.e. "
":term:`hidden member`)."
msgstr ""

# 6bd3a0141bb74220af9ede5b2620c611
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:291
msgid ""
"To flush writes to disk and to \"lock\" the database (to prevent further "
"writes), issue the :method:`db.fsyncLock()` method in the :program:`mongo` "
"shell:"
msgstr ""

# 3437bd288b914fc7aeb639834ee80fde
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:299
msgid "Perform the backup operation described in :ref:`lvm-backup-operation`."
msgstr ""

# 2b3f4ce017704fe496bc5f636cf1c3b6
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:301
msgid ""
"To unlock the database after the snapshot has completed, use the following "
"command in the :program:`mongo` shell:"
msgstr ""

# ab21994308af430e9a9e0851da97f66d
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:310
msgid ""
"MongoDB 2.0 added :method:`db.fsyncLock()` and :method:`db.fsyncUnlock()` "
"helpers to the :program:`mongo` shell.  Prior to this version, use the "
":dbcommand:`fsync` command with the ``lock`` option, as follows:"
msgstr ""

# b2cff11185d149f4a5679ea19c9af5be
#: ../source/includes/warning-fsync-lock-mongodump.rst:3
msgid ""
"When used in combination with :dbcommand:`fsync` or "
":method:`db.fsyncLock()`, :program:`mongod` may block some reads, including "
"those from :program:`mongodump`, when queued write operation waits behind "
"the :dbcommand:`fsync` lock."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:172
msgid ""
"After creating a snapshot, mount the snapshot and copy the data to separate "
"storage. Your system might try to compress the backup images as you move the"
" offline. Alternatively, take a block level copy of the snapshot image, such"
" as with the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:184
msgid ""
"Ensures that the ``/dev/vg0/mdb-snap01`` device is not mounted.  Never take "
"a block level copy of a filesystem or filesystem snapshot that is mounted."
msgstr ""

#~ msgid ""
#~ "After creating a snapshot, mount the snapshot and move the data to separate "
#~ "storage. Your system might try to compress the backup images as you move the"
#~ " offline. The following procedure fully archives the data from the snapshot:"
#~ msgstr ""

#~ msgid "Ensures that the ``/dev/vg0/mdb-snap01`` device is not mounted."
#~ msgstr ""

#~ msgid ""
#~ "The database cannot be locked with :method:`db.fsyncLock()` while profiling "
#~ "is enabled.  You must disable profiling before locking the database with "
#~ ":method:`db.fsyncLock()`.  Disable profiling using "
#~ ":method:`db.setProfilingLevel()` as follows in the :program:`mongo` shell:"
#~ msgstr ""
