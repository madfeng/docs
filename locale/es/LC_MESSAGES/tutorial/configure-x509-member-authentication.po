# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/configure-x509-member-authentication.txt:5
msgid "Use x.509 Certificate for Membership Authentication"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:11
msgid ""
"MongoDB supports x.509 certificate authentication for use with a secure "
":doc:`SSL connection </tutorial/configure-ssl>`. Sharded cluster members and"
" replica set members can use x.509 certificates to verify their membership "
"to the cluster or the replica set instead of using :doc:`keyfiles "
"</core/authentication>`. The membership authentication is an internal "
"process."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:19
msgid ""
"For client authentication with x.509, see :doc:`configure-x509-client-"
"authentication`."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:28
msgid "Member x.509 Certificate"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:30
msgid ""
"The member certificate, used for internal authentication to verify "
"membership to the sharded cluster or a replica set, must have the following "
"properties:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:34
msgid ""
"A single Certificate Authority (CA) must issue all the x.509 certificates "
"for the members of a sharded cluster or a replica set."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:37
msgid ""
"The Distinguished Name (``DN``), found in the member certificate's "
"``subject``, must specify a non-empty value for *at least one* of the "
"following attributes: Organization (``O``), the Organizational Unit (``OU``)"
" or the Domain Component (``DC``)."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:42
msgid ""
"The Organization attributes (``O``\\'s), the Organizational Unit attributes "
"(``OU``\\'s), and the Domain Components (``DC``\\'s) must match those from "
"the certificates for the other cluster members. To match, the certificate "
"must match all specifications of these attributes, or even the non-"
"specification of these attributes. The order of the attributes does not "
"matter."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:49
msgid ""
"In the following example, the two ``DN``\\'s contain matching specifications"
" for ``O``, ``OU`` as well as the non-specification of the ``DC`` attribute."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:58
msgid ""
"However, the following two ``DN``\\'s contain a mismatch for the ``OU`` "
"attribute since one contains two ``OU`` specifications and the other, only "
"one specification."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:67
msgid ""
"Either the Common Name (``CN``) or one of the Subject Alternative Name "
"(``SAN``) entries must match the hostname of the server, used by the other "
"members of the cluster."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:71
msgid ""
"For example, the certificates for a cluster could have the following "
"subjects:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:80
msgid ""
"It is possible to use a single x509 certificate for both member "
"authentication and :doc:`x.509 client authentication "
"</tutorial/configure-x509-client-authentication>`. To do so, obtain a "
"certificate with both ``clientAuth`` and ``serverAuth`` (i.e. \"TLS Web "
"Client Authentication\" and \"TLS Web Server Authentication\") specified as "
"Extended Key Usage (EKU) values, or simply do not specify any EKU values. "
"Provide this file as the the :option:`--sslPEMKeyFile <mongod "
"--sslPEMKeyFile>` and omit the :option:`--sslClusterFile <mongod "
"--sslClusterFile>` option described below."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:90
msgid "Configure Replica Set/Sharded Cluster"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:93
msgid "Use Command-line Options"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:95
msgid ""
"To specify the x.509 certificate for internal cluster member authentication,"
" append the additional SSL options :option:`--clusterAuthMode` and "
":option:`--sslClusterFile`, as in the following example for a member of a "
"replica set:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:104
msgid ""
"Include any additional options, SSL or otherwise, that are required for your"
" specific configuration. For instance, if the membership key is encrypted, "
"set the :option:`--sslClusterPassword` to the passphrase to decrypt the key "
"or have MongoDB prompt for the passphrase. See :ref:`ssl-certificate-"
"password` for details."
msgstr ""

#: ../source/includes/warning-x509-requires-sslCAfile.rst:3
msgid ""
"If the :option:`--sslCAFile <mongod --sslCAFile>` option and its target file"
" are not specified, x.509 client and member authentication will not "
"function. :program:`mongod`, and :program:`mongos` in sharded systems, will "
"not be able to verify the certificates of processes connecting to it against"
" the trusted certificate authority (CA) that issued them, breaking the "
"certificate chain."
msgstr ""

#: ../source/includes/warning-x509-requires-sslCAfile.rst:10
msgid ""
"As of version 2.6.4, :program:`mongod` will not start with x.509 "
"authentication enabled if the CA file is not specified."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:113
msgid "Use Configuration File"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:115
msgid ""
"You may also specify these options in the :doc:`configuration file "
"</reference/configuration-options>`."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:119
msgid "YAML Formatted Configuration File"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:121
msgid ""
"Starting in MongoDB 2.6, you can specify the configuration for MongoDB in "
":doc:`YAML format </reference/configuration-options>`, as in the following "
"example:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:136
msgid ""
"See :setting:`security.clusterAuthMode`, :setting:`net.ssl.mode`, "
":setting:`net.ssl.PEMKeyFile`, :setting:`net.ssl.CAFile`, and "
":setting:`net.ssl.clusterFile` for more information on the settings."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:141
msgid "v2.4 Configuration File"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:143
msgid ""
"For backwards compatibility, you can also specify the configuration using "
"the :v2.4:`v2.4 configuration file format </reference/configuration>`, as in"
" the following example:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:158
msgid "Upgrade from Keyfile Authentication to x.509 Authentication"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:160
msgid ""
"To upgrade clusters that are currently using keyfile authentication to x.509"
" authentication, use a rolling upgrade process."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:164
msgid "Clusters Currently Using SSL"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:166
msgid ""
"For clusters using SSL and keyfile authentication, to upgrade to x.509 "
"cluster authentication, use the following rolling upgrade process:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:169
msgid ""
"For each node of a cluster, start the node with the option "
":option:`--clusterAuthMode` set to ``sendKeyFile`` and the option "
":option:`--sslClusterFile` set to the appropriate path of the node's "
"certificate. Include other :doc:`SSL options </tutorial/configure-ssl>` as "
"well as any other options that are required for your specific configuration."
" For example:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:180
msgid ""
"With this setting, each node continues to use its keyfile to authenticate "
"itself as a member. However, each node can now accept either a keyfile or an"
" x.509 certificate from other members to authenticate those members. Upgrade"
" all nodes of the cluster to this setting."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:186
msgid ""
"Then, for each node of a cluster, connect to the node and use the "
":dbcommand:`setParameter` command to update the :parameter:`clusterAuthMode`"
" to ``sendX509``. [#update-mode-alternative]_ For example,"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:194
msgid ""
"With this setting, each node uses its x.509 certificate, specified with the "
":option:`--sslClusterFile` option in the previous step, to authenticate "
"itself as a member. However, each node continues to accept either a keyfile "
"or an x.509 certificate from other members to authenticate those members. "
"Upgrade all nodes of the cluster to this setting."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:201
msgid ""
"Optional but recommended. Finally, for each node of the cluster, connect to "
"the node and use the :dbcommand:`setParameter` command to update the "
":parameter:`clusterAuthMode` to ``x509`` to only use the x.509 certificate "
"for authentication. [#update-mode-alternative]_ For example:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:211
msgid ""
"After the upgrade of all nodes, edit the :doc:`configuration file "
"</reference/configuration-options>` with the appropriate x.509 settings to "
"ensure that upon subsequent restarts, the cluster uses x.509 authentication."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:216
#: ../source/tutorial/configure-x509-member-authentication.txt:292
msgid ""
"See :option:`--clusterAuthMode` for the various modes and their "
"descriptions."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:220
msgid "Clusters Currently Not Using SSL"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:222
msgid ""
"For clusters using keyfile authentication but not SSL, to upgrade to x.509 "
"authentication, use the following rolling upgrade process:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:225
msgid ""
"For each node of a cluster, start the node with the option "
":option:`--sslMode` set to ``allowSSL``, the option "
":option:`--clusterAuthMode` set to ``sendKeyFile`` and the option "
":option:`--sslClusterFile` set to the appropriate path of the node's "
"certificate. Include other :doc:`SSL options </tutorial/configure-ssl>` as "
"well as any other options that are required for your specific configuration."
" For example:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:237
msgid ""
"The :option:`--sslMode allowSSL <--sslMode>` setting allows the node to "
"accept both SSL and non-SSL incoming connections. Its outgoing connections "
"do not use SSL."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:241
msgid ""
"The :option:`--clusterAuthMode sendKeyFile <--clusterAuthMode>` setting "
"allows each node continues to use its keyfile to authenticate itself as a "
"member. However, each node can now accept either a keyfile or an x.509 "
"certificate from other members to authenticate those members."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:247
#: ../source/tutorial/configure-x509-member-authentication.txt:269
msgid "Upgrade all nodes of the cluster to these settings."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:249
msgid ""
"Then, for each node of a cluster, connect to the node and use the "
":dbcommand:`setParameter` command to update the :parameter:`sslMode` to "
"``preferSSL`` and the :parameter:`clusterAuthMode` to ``sendX509``. "
"[#update-mode-alternative]_ For example:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:258
msgid ""
"With the :parameter:`sslMode` set to ``preferSSL``, the node accepts both "
"SSL and non-SSL incoming connections, and its outgoing connections use SSL."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:262
msgid ""
"With the :parameter:`clusterAuthMode` set to ``sendX509``, each node uses "
"its x.509 certificate, specified with the :option:`--sslClusterFile` option "
"in the previous step, to authenticate itself as a member. However, each node"
" continues to accept either a keyfile or an x.509 certificate from other "
"members to authenticate those members."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:271
msgid ""
"Optional but recommended. Finally, for each node of the cluster, connect to "
"the node and use the :dbcommand:`setParameter` command to update the "
":parameter:`sslMode` to ``requireSSL`` and the :parameter:`clusterAuthMode` "
"to ``x509``. [#update-mode-alternative]_ For example:"
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:281
msgid ""
"With the :parameter:`sslMode` set to ``requireSSL``, the node only uses SSL "
"connections."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:284
msgid ""
"With the :parameter:`clusterAuthMode` set to ``x509``, the node only uses "
"the x.509 certificate for authentication."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:287
msgid ""
"After the upgrade of all nodes, edit the :doc:`configuration file "
"</reference/configuration-options>` with the appropriate SSL and x.509 "
"settings to ensure that upon subsequent restarts, the cluster uses x.509 "
"authentication."
msgstr ""

#: ../source/tutorial/configure-x509-member-authentication.txt:295
msgid ""
"As an alternative to using the :dbcommand:`setParameter` command, you can "
"also restart the nodes with the appropriate SSL and x509 options and values."
msgstr ""
