# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:31+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# ac639ab13ca64771b095c9d6e0ef2ff6
#: ../source/core/indexes-introduction.txt:6
msgid "Index Introduction"
msgstr ""

# 4c66f78d55074a6ca2a0fe7fe21f1f48
#: ../source/core/indexes-introduction.txt:18
msgid ""
"Indexes are special data structures [#b-tree]_ that store a small portion of"
" the collection's data set in an easy to traverse form. The index stores the"
" value of a specific field or set of fields, ordered by the value of the "
"field."
msgstr ""

# 9d2c7aae83084d7b877726cb8ce1dc6b
#: ../source/core/indexes-introduction.txt:23
msgid ""
"Fundamentally, indexes in MongoDB are similar to indexes in other database "
"systems. MongoDB defines indexes at the :term:`collection` level and "
"supports indexes on any field or sub-field of the documents in a MongoDB "
"collection."
msgstr ""

# 9c43246ede7d4457bc48fff97dc12571
#: ../source/core/indexes-introduction.txt:28
msgid ""
"If an appropriate index exists for a query, MongoDB can use the index to "
"limit the number of documents it must inspect. In some cases, MongoDB can "
"use the data from the index to determine which documents match a query. The "
"following diagram illustrates a query that selects documents using an index."
msgstr ""

# 201b7d9f6a7642328e286d1d736f820c
#: ../source/core/indexes-introduction.txt:45
msgid ""
"Consider the documentation of the :ref:`query optimizer <read-operations-"
"query-optimization>` for more information on the relationship between "
"queries and indexes."
msgstr ""

# 877a741e8b824266a2382fe2f763ca11
#: ../source/core/indexes-introduction.txt:55
msgid ""
"Indexes can also optimize the performance of other operations in specific "
"situations:"
msgstr ""

# 59b2b7b97aa0476abedf0316a43234d9
#: ../source/core/indexes-introduction.txt:61
msgid ""
"MongoDB can use indexes to return documents sorted by the index key directly"
" from the index without requiring an additional sort phase."
msgstr ""

# 00a58620abd146c6b12df8ffa8d109db
#: ../source/core/indexes-introduction.txt:36
msgid "MongoDB indexes use a B-tree data structure."
msgstr ""

# be07451f048e4f6b9635942796e074bf
#: ../source/core/indexes-introduction.txt:77
msgid "Index Types"
msgstr ""

# 4f6d120227064f849174e4a42bdf2600
#: ../source/core/indexes-introduction.txt:83
msgid "Default ``_id``"
msgstr ""

# edd0cc34d77246c8a2b71c4ba8a6801a
#: ../source/core/indexes-introduction.txt:85
msgid ""
"All MongoDB collections have an index on the ``_id`` field that exists by "
"default. If applications do not specify a value for ``_id`` the driver or "
"the :program:`mongod` will create an ``_id`` field with an :term:`ObjectId` "
"value."
msgstr ""

# 10369decfefa44d6accab56ffb9ff1ca
#: ../source/core/indexes-introduction.txt:90
msgid ""
"The ``_id`` index is *unique*, and prevents clients from inserting two "
"documents with the same value for the ``_id`` field."
msgstr ""

# cc0055ece9ba412eb539a980ccfa3af5
#: ../source/core/indexes-introduction.txt:94
msgid "Single Field"
msgstr ""

# b74aa9d684c34b2f9e29d651d45db336
#: ../source/core/indexes-introduction.txt:96
msgid ""
"In addition to the MongoDB-defined ``_id`` index, MongoDB supports user-"
"defined indexes on a :doc:`single field of a document </core/index-single>`."
" Consider the following illustration of a single-field index:"
msgstr ""

# 68d17345dc5941c2a6d1e7fdecb70f84
#: ../source/core/indexes-introduction.txt:104
msgid "Compound Index"
msgstr ""

# 48d68cb11a664862bbe6571b10907c9e
#: ../source/core/indexes-introduction.txt:106
msgid ""
"MongoDB *also* supports user-defined indexes on multiple fields. These "
":doc:`compound indexes </core/index-compound>` behave like single-field "
"indexes; *however*, the query can select documents based on additional "
"fields. The order of fields listed in a compound index has significance. For"
" instance, if a compound index consists of ``{ userid: 1, score: -1 }``, the"
" index sorts first by ``userid`` and then, within each ``userid`` value, "
"sort by ``score``. Consider the following illustration of this compound "
"index:"
msgstr ""

# b86a86888ff44e99b1714aa0e0baf342
#: ../source/core/indexes-introduction.txt:118
msgid "Multikey Index"
msgstr ""

# 0e8f56eb539843cea7f2f3ffe83e2c30
#: ../source/core/indexes-introduction.txt:120
msgid ""
"MongoDB uses :doc:`multikey indexes </core/index-multikey>` to index the "
"content stored in arrays. If you index a field that holds an array value, "
"MongoDB creates separate index entries for *every* element of the array. "
"These :doc:`multikey indexes </core/index-multikey>` allow queries to select"
" documents that contain arrays by matching on element or elements of the "
"arrays. MongoDB automatically determines whether to create a multikey index "
"if the indexed field contains an array value; you do not need to explicitly "
"specify the multikey type."
msgstr ""

# 1e0d5650830d498e9bc4e3492a15af54
#: ../source/core/indexes-introduction.txt:129
msgid "Consider the following illustration of a multikey index:"
msgstr ""

# 82acbc090479468d989c02ca4f441369
#: ../source/core/indexes-introduction.txt:134
msgid "Geospatial Index"
msgstr ""

# 8a57f261ba744ae5beef8ca1cd9c5e54
#: ../source/core/indexes-introduction.txt:136
msgid ""
"To support efficient queries of geospatial coordinate data, MongoDB provides"
" two special indexes: :doc:`2d indexes </core/2d>` that uses planar geometry"
" when returning results and :doc:`2sphere indexes </core/2dsphere>` that use"
" spherical geometry to return results."
msgstr ""

# ba0672c6d6ef4518bcb6b0df2159619f
#: ../source/core/indexes-introduction.txt:141
msgid ""
"See :doc:`/core/geospatial-indexes` for a high level introduction to "
"geospatial indexes."
msgstr ""

# abe216e16e5e4464be96b6f187d7e0e1
#: ../source/core/indexes-introduction.txt:145
msgid "Text Indexes"
msgstr ""

# e17cfe158c6d4cca994226bbc6a72f77
#: ../source/core/indexes-introduction.txt:152
msgid ""
"See :doc:`/core/index-text` for more information on text indexes and search."
msgstr ""

# b14ff7343fb1457eaafdfd17a3ce0b7c
#: ../source/core/indexes-introduction.txt:156
msgid "Hashed Indexes"
msgstr ""

# 757fbf8eec414dcb8d07832bf7913f39
#: ../source/core/indexes-introduction.txt:158
msgid ""
"To support :ref:`hash based sharding <sharding-hashed-sharding>`, MongoDB "
"provides a :doc:`hashed index </core/index-hashed>` type, which indexes the "
"hash of the value of a field. These indexes have a more random distribution "
"of values along their range, but *only* support equality matches and cannot "
"support range-based queries."
msgstr ""

# 01ddf5dac3254babbffa8d73f7869f6e
#: ../source/core/indexes-introduction.txt:165
msgid "Index Properties"
msgstr ""

# 8122c6e7c3fb45d2b9606785ad5e5948
#: ../source/core/indexes-introduction.txt:168
msgid "Unique Indexes"
msgstr ""

# b33c63138fb6480e85b5cd91e78d60ca
#: ../source/core/indexes-introduction.txt:170
msgid ""
"The :doc:`unique </core/index-unique>` property for an index causes MongoDB "
"to reject duplicate values for the indexed field.  To create a :doc:`unique "
"index </core/index-unique>` on a field that already has duplicate values, "
"see :ref:`index-creation-duplicate-dropping` for index creation options. "
"Other than the unique constraint, unique indexes are functionally "
"interchangeable with other MongoDB indexes."
msgstr ""

# 4a5c5735abf64df7a8affe590fd6e8ad
#: ../source/core/indexes-introduction.txt:179
msgid "Sparse Indexes"
msgstr ""

# 3ced17c79f9142e28bd5d8f056d89f38
#: ../source/core/indexes-introduction.txt:181
msgid ""
"The :doc:`sparse </core/index-sparse>` property of an index ensures that the"
" index only contain entries for documents that have the indexed field. The "
"index skips documents that *do not* have the indexed field."
msgstr ""

# e3dcea2a760749379d57f3d7a2c2a2ec
#: ../source/core/indexes-introduction.txt:185
msgid ""
"You can combine the sparse index option with the unique index option to "
"reject documents that have duplicate values for a field but ignore documents"
" that do not have the indexed key."
msgstr ""

# 09a1299839ef4aec836fac89ba2305ce
#: ../source/core/indexes-introduction.txt:190
msgid "Index Intersection"
msgstr ""

# 3c462a96593641bfb8eb4806018f4555
#: ../source/core/indexes-introduction.txt:194
msgid ""
"MongoDB can use the :doc:`intersection of indexes </core/index-"
"intersection>` to fulfill queries. For queries that specify compound query "
"conditions, if one index can fulfill a part of a query condition, and "
"another index can fulfill another part of the query condition, then MongoDB "
"can use the intersection of the two indexes to fulfill the query. Whether "
"the use of a compound index or the use of an index intersection is more "
"efficient depends on the particular query and the system."
msgstr ""

# 47a473d5005b443f8b9088979ad85921
#: ../source/core/indexes-introduction.txt:203
msgid ""
"For details on index intersection, see :doc:`/core/index-intersection`."
msgstr ""

# a6d72ee5c8824863b1bfaa1ce79e461f
#: ../source/core/indexes-introduction.txt:1
msgid "index"
msgstr ""

# a6d72ee5c8824863b1bfaa1ce79e461f
#: ../source/core/indexes-introduction.txt:1
msgid "overview"
msgstr ""

#: ../source/core/indexes-introduction.txt:12
msgid ""
"Indexes support the efficient execution of queries in MongoDB. Without "
"indexes, MongoDB must scan every document in a collection to select those "
"documents that match the query statement. These *collection scans* are "
"inefficient because they require :program:`mongod` to process a larger "
"volume of data than an index for each operation."
msgstr ""

#: ../source/core/indexes-introduction.txt:41
msgid "Optimization"
msgstr ""

#: ../source/core/indexes-introduction.txt:49
msgid ""
"Create indexes to support common and user-facing queries. Having these "
"indexes will ensure that MongoDB only scans the smallest possible number of "
"documents."
msgstr ""

#: ../source/core/indexes-introduction.txt:59
msgid "Sorted Results"
msgstr ""

#: ../source/core/indexes-introduction.txt:67
msgid "Covered Results"
msgstr ""

#: ../source/core/indexes-introduction.txt:69
msgid ""
"When the query criteria and the :term:`projection` of a query include *only*"
" the indexed fields, MongoDB will return results directly from the index "
"*without* scanning any documents or bringing documents into memory. These "
"covered queries can be *very* efficient."
msgstr ""

#: ../source/core/indexes-introduction.txt:79
msgid ""
"MongoDB provides a number of different index types to support specific types"
" of data and queries."
msgstr ""

#: ../source/core/indexes-introduction.txt:147
msgid ""
"MongoDB provides a ``text`` index type that supports searching for string "
"content in a collection. These text indexes do not store language-specific "
"*stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words in a "
"collection to only store root words."
msgstr ""

#~ msgid ""
#~ "Indexes support the efficient execution of queries in MongoDB. Without "
#~ "indexes MongoDB must scan every document in a collection to select those "
#~ "documents that match the query statement. These *collection scans* are "
#~ "inefficient because they require :program:`mongod` to process a larger "
#~ "volume of data than an index for each operation."
#~ msgstr ""

#~ msgid "Tip"
#~ msgstr ""

#~ msgid "**Sorted Results**"
#~ msgstr ""

#~ msgid "**Covered Results**"
#~ msgstr ""

#~ msgid ""
#~ "When the query criteria and the :term:`projection` of a query include *only*"
#~ " the indexed fields, MongoDB will return results directly from the index "
#~ "*without* scanning any documents or bringing documents into memory. These "
#~ "covered queries can be *very* efficient. Indexes can also cover "
#~ ":doc:`aggregation pipeline operations </core/aggregation-pipeline>`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides an umber of different index types to support specific types"
#~ " of data and queries."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides a *beta* ``text`` index type that supports searching for "
#~ "string content in a collection. These text indexes do not store language-"
#~ "specific *stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words in "
#~ "a collection to only store root words."
#~ msgstr ""
