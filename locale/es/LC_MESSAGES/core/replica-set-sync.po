# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:30+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 3fd2274f7b064ab6b68d1ae536088628
#: ../source/core/replica-set-sync.txt:5
msgid "Replica Set Data Synchronization"
msgstr ""

# 6c1d2b01334a497c8d6d55c8ebcdea5c
#: ../source/core/replica-set-sync.txt:9
msgid ""
"In order to maintain up-to-date copies of the shared data set, members of a "
"replica set :term:`sync` or replicate data from other members. MongoDB uses "
"two forms of data synchronization: :ref:`initial sync <replica-set-initial-"
"sync>` to populate new members with the full data set, and replication to "
"apply ongoing changes to the entire data set."
msgstr ""

# 9cb70f413d484b0ba0e28e39044ea82b
#: ../source/core/replica-set-sync.txt:19
msgid "Initial Sync"
msgstr ""

# ae9475ae33bb44d0a5c0c56646630c90
#: ../source/core/replica-set-sync.txt:21
msgid ""
"Initial sync copies all the data from one member of the replica set to "
"another member. A member uses initial sync when the member has no data, such"
" as when the member is new, or when the member has data but is missing a "
"history of the set's replication."
msgstr ""

# c9c035c96a804a5c94f6ec7fad477a3f
#: ../source/core/replica-set-sync.txt:26
msgid "When you perform an initial sync, MongoDB does the following:"
msgstr ""

# 47eb1f515ee74441b35acf5c86be41c0
#: ../source/core/replica-set-sync.txt:28
msgid ""
"Clones all databases. To clone, the :program:`mongod` queries every "
"collection in each source database and inserts all data into its own copies "
"of these collections.  At this time, _id indexes are also built."
msgstr ""

# 86891f9b0e434b999397635ab132c823
#: ../source/core/replica-set-sync.txt:32
msgid ""
"Applies all changes to the data set. Using the oplog from the source, the "
":program:`mongod` updates its data set to reflect the current state of the "
"replica set."
msgstr ""

# f20b5adb13054590be56c1a04b9d9e5a
#: ../source/core/replica-set-sync.txt:36
msgid ""
"Builds all indexes on all collections (except _id indexes, which were "
"already completed)."
msgstr ""

# 0e503734c7a84d65ae0c85da99433bc9
#: ../source/core/replica-set-sync.txt:38
msgid ""
"When the :program:`mongod` finishes building all index builds, the member "
"can transition to a normal state, i.e. :term:`secondary`."
msgstr ""

# 7588a72bb78d43cfb833bf77f077ec65
#: ../source/core/replica-set-sync.txt:41
msgid ""
"To perform an initial sync, see :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

# e5286e1aeb50452da9fb3bbd74de1e98
#: ../source/core/replica-set-sync.txt:47
msgid "Replication"
msgstr ""

# c6abe39e9e694b299cd23dec02940389
#: ../source/core/replica-set-sync.txt:49
msgid ""
"Replica set members replicate data continuously after the initial sync. This"
" process keeps the members up to date with all changes to the replica set's "
"data. In most cases, secondaries synchronize from the primary. Secondaries "
"may automatically change their *sync targets* if needed based on changes in "
"the ping time and state of other members' replication."
msgstr ""

# 3d29360e4687422c97a0cea54915782d
#: ../source/core/replica-set-sync.txt:81
msgid ""
"For a member to sync from another, the "
":data:`~local.system.replset.members[n].buildIndexes` setting for both "
"members must have the same value/ "
":data:`~local.system.replset.members[n].buildIndexes` must be either "
"``true`` or ``false`` for both members."
msgstr ""

# 4f6513faa01a4c519f93c45018bf6d69
#: ../source/core/replica-set-sync.txt:87
msgid ""
"Beginning in version 2.2, secondaries avoid syncing from :ref:`delayed "
"members <replica-set-delayed-members>` and :ref:`hidden members <replica-"
"set-hidden-members>`."
msgstr ""

# 2c2fee22bc7c497eb55b344241ae39f7
#: ../source/core/replica-set-sync.txt:92
msgid "Validity and Durability"
msgstr ""

# 4270f0da2ffd4614b2455c58de60118e
#: ../source/core/replica-set-sync.txt:96
msgid ""
"In a replica set, only the primary can accept write operations. Writing only"
" to the primary provides :term:`strict consistency` among members."
msgstr ""

# 9118f00f5c9249d3b0b9776d41281b53
#: ../source/core/replica-set-sync.txt:99
msgid ""
":term:`Journaling <journal>` provides single-instance write durability. "
"Without journaling, if a MongoDB instance terminates ungracefully, you must "
"assume that the database is in an invalid state."
msgstr ""

# 573d77c7e86441c68f369f8758e0beff
#: ../source/core/replica-set-sync.txt:106
msgid "Multithreaded Replication"
msgstr ""

# 9ada275d884a4666aaed1013473d05d2
#: ../source/core/replica-set-sync.txt:108
msgid ""
"MongoDB applies write operations in batches using multiple threads to "
"improve concurrency. MongoDB groups batches by namespace and applies "
"operations using a group of threads, but always applies the write operations"
" to a namespace in order."
msgstr ""

# 7adfddb69ca84e5a809b1ced7615d681
#: ../source/core/replica-set-sync.txt:113
msgid ""
"While applying a batch, MongoDB blocks all reads. As a result, secondaries "
"can never return data that reflects a state that never existed on the "
"primary."
msgstr ""

# 965e738ff0214dd592fbf506a8ba6666
#: ../source/core/replica-set-sync.txt:118
msgid "Pre-Fetching Indexes to Improve Replication Throughput"
msgstr ""

# e0220aeda42f4994b9db109241d7c39a
#: ../source/core/replica-set-sync.txt:120
msgid ""
"To help improve the performance of applying oplog entries, MongoDB fetches "
"memory pages that hold affected data and indexes. This *pre-fetch* stage "
"minimizes the amount of time MongoDB holds the write lock while applying "
"oplog entries. By default, secondaries will pre-fetch all :ref:`indexes`."
msgstr ""

#: ../source/core/replica-set-sync.txt:126
msgid ""
"Optionally, you can disable all pre-fetching or only pre-fetch the index on "
"the ``_id`` field. See the :setting:`~replication.secondaryIndexPrefetch` "
"setting for more information."
msgstr ""

#~ msgid ""
#~ "Optionally, you can disable all pre-fetching or only pre-fetch the index on "
#~ "the ``_id`` field. See the :setting:`replIndexPrefetch` setting for more "
#~ "information."
#~ msgstr ""
