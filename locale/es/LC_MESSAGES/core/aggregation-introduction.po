# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2013-12-16 23:55+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 19aacd425f00438dac9983a05264b733
#: ../source/core/aggregation-introduction.txt:3
msgid "Aggregation Introduction"
msgstr ""

# edf76cd4db2d43e0a63362837dacf4f0
#: ../source/core/aggregation-introduction.txt:9
msgid ""
"*Aggregations* are operations that process data records and return computed "
"results. MongoDB provides a rich set of aggregation operations that examine "
"and perform calculations on the data sets. Running data aggregation on the "
":program:`mongod` instance simplifies application code and limits resource "
"requirements."
msgstr ""

# 27f9370e5e8d42d3bee0e4ac1a9e7b83
#: ../source/core/aggregation-introduction.txt:17
msgid ""
"Like queries, aggregation operations in MongoDB use :term:`collections "
"<collection>` of documents as an input and return results in the form of one"
" or more documents."
msgstr ""

# db590a4fea584978a5d138ec6c732a7e
#: ../source/core/aggregation-introduction.txt:22
msgid "Aggregation Modalities"
msgstr ""

# 073fd8c96dde463680e2c7e34b7ae039
#: ../source/core/aggregation-introduction.txt:25
msgid "Aggregation Pipelines"
msgstr ""

# f769b5ad3a9348a3a66c71a91deff673
#: ../source/core/aggregation-introduction.txt:27
msgid ""
"MongoDB 2.2 introduced a new :doc:`aggregation framework </core/aggregation-"
"pipeline>`, modeled on the concept of data processing pipelines. Documents "
"enter a multi-stage pipeline that transforms the documents into an "
"aggregated result."
msgstr ""

# e417b234fbc04bf5959fc2f1218b8bb5
#: ../source/core/aggregation-introduction.txt:32
msgid ""
"The most basic pipeline stages provide *filters* that operate like queries "
"and *document transformations* that modify the form of the output document."
msgstr ""

# 495a185c6cfe4a12ac89b536d5da01f4
#: ../source/core/aggregation-introduction.txt:36
msgid ""
"Other pipeline operations provide tools for grouping and sorting documents "
"by specific field or fields as well as tools for aggregating the contents of"
" arrays, including arrays of documents. In addition, pipeline stages can use"
" :ref:`operators <aggregation-expression-operators>` for tasks such as "
"calculating the average or concatenating a string."
msgstr ""

# 9d89c9978f034560aa3b47db673a3323
#: ../source/core/aggregation-introduction.txt:43
msgid ""
"The pipeline provides efficient data aggregation using native operations "
"within MongoDB, and is the preferred method for data aggregation in MongoDB."
msgstr ""

# f8deb0bcce2547118ab2185e2339cce8
#: ../source/core/aggregation-introduction.txt:50
msgid "Map-Reduce"
msgstr ""

# 299cd05776204a6c9cf3e92c2b5aa0fb
#: ../source/core/aggregation-introduction.txt:52
msgid ""
"MongoDB also provides :doc:`map-reduce </core/map-reduce>` operations to "
"perform aggregation. In general, map-reduce operations have two phases: a "
"*map* stage that processes each document and *emits* one or more objects for"
" each input document, and *reduce* phase that combines the output of the map"
" operation. Optionally, map-reduce can have a *finalize* stage to make final"
" modifications to the result. Like other aggregation operations, map-reduce "
"can specify a query condition to select the input documents as well as sort "
"and limit the results."
msgstr ""

# 05e06d9753a343bea7158910b5cf2d98
#: ../source/core/aggregation-introduction.txt:61
msgid ""
"Map-reduce uses custom JavaScript functions to perform the map and reduce "
"operations, as well as the optional *finalize* operation. While the custom "
"JavaScript provide great flexibility compared to the aggregation pipeline, "
"in general, map-reduce is less efficient and more complex than the "
"aggregation pipeline."
msgstr ""

# de81391ab99747b49c889dadc84f7908
#: ../source/core/aggregation-introduction.txt:67
msgid ""
"Starting in MongoDB 2.4, certain :program:`mongo` shell functions and "
"properties are inaccessible in map-reduce operations. MongoDB 2.4 also "
"provides support for multiple JavaScript operations to run at the same time."
" Before MongoDB 2.4, JavaScript code executed in a single thread, raising "
"concurrency issues for map-reduce."
msgstr ""

# 893b705b10534ee88f86a7c6e9ca94f4
#: ../source/core/aggregation-introduction.txt:77
msgid "Single Purpose Aggregation Operations"
msgstr ""

# 6b4fd4c6767f4d12972868945e98c3b2
#: ../source/core/aggregation-introduction.txt:79
msgid ""
"For a number of common :doc:`single purpose aggregation operations </core"
"/single-purpose-aggregation>`, MongoDB provides special purpose database "
"commands. These common aggregation operations are: returning a count of "
"matching documents, returning the distinct values for a field, and grouping "
"data based on the values of a field. All of these operations aggregate "
"documents from a single collection. While these operations provide simple "
"access to common aggregation processes, they lack the flexibility and "
"capabilities of the aggregation pipeline and map-reduce."
msgstr ""

# 5191723cf2ef4df9941ad1e5443bffdf
#: ../source/core/aggregation-introduction.txt:92
msgid "Additional Features and Behaviors"
msgstr ""

# d30cd9a959de48e1a79c75f2bf2d4b70
#: ../source/core/aggregation-introduction.txt:94
msgid ""
"Both the aggregation pipeline and map-reduce can operate on a :doc:`sharded "
"collection </core/sharding-introduction>`. Map-reduce operations can also "
"output to a sharded collection. See :doc:`/core/aggregation-pipeline-"
"sharded-collections` and :doc:`/core/map-reduce-sharded-collections` for "
"details."
msgstr ""

# 9009d6587e5e48248d53edb477c9b368
#: ../source/core/aggregation-introduction.txt:100
msgid ""
"The aggregation pipeline can use indexes to improve its performance during "
"some of its stages. In addition, the aggregation pipeline has an internal "
"optimization phase. See :ref:`aggregation-pipeline-operators-and-"
"performance` and :doc:`/core/aggregation-pipeline-optimization` for details."
msgstr ""

# 13dd47ab6eca4ef2834a8fe4e4234064
#: ../source/core/aggregation-introduction.txt:106
msgid ""
"For a feature comparison of the aggregation pipeline, map-reduce, and the "
"special group functionality, see :doc:`/reference/aggregation-commands-"
"comparison`."
msgstr ""

#~ msgid ""
#~ "Additionally, map-reduce operations can have output sets that exceed the 16 "
#~ "megabyte output limitation of the aggregation pipeline."
#~ msgstr ""
