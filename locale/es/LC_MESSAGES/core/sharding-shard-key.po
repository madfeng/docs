# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:30+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 26ed35dd39ef4846ae4c9d519097be72
#: ../source/core/sharding-shard-key.txt:10
msgid "Shard Keys"
msgstr ""

# 1b7ea70c592c4d18832fcb1190296b45
#: ../source/core/sharding-shard-key.txt:14
msgid ""
"The shard key determines the distribution of the collection's "
":term:`documents <document>` among the cluster's :term:`shards <shard>`. The"
" shard key is either an indexed :term:`field` or an indexed compound field "
"that exists in every document in the collection."
msgstr ""

# 3b27a11f63d942169114cf0ce4722c56
#: ../source/core/sharding-shard-key.txt:20
msgid ""
"MongoDB partitions data in the collection using ranges of shard key values. "
"Each range, or :term:`chunk`, defines a non-overlapping range of shard key "
"values. MongoDB distributes the chunks, and their documents, among the "
"shards in the cluster."
msgstr ""

# 123ebb30753547a9a5888a76a80713a8
#: ../source/core/sharding-shard-key.txt:27
msgid ""
"When a chunk grows beyond the :ref:`chunk size <sharding-chunk-size>`, "
"MongoDB :term:`splits <split>` the chunk into smaller chunks, always based "
"on ranges in the shard key."
msgstr ""

# 4c59b13f30ac4860adffe4d8c7110dc7
#: ../source/core/sharding-shard-key.txt:32
msgid "Considerations"
msgstr ""

# 6924593c244c4c96be42a54a06b1e70d
#: ../source/core/sharding-shard-key.txt:34
msgid ""
"Shard keys are immutable and cannot be changed after insertion. See the "
":ref:`system limits for sharded cluster <limits-sharding>` for more "
"information."
msgstr ""

# 69458b986ccf40669a983e804c5c22bb
#: ../source/core/sharding-shard-key.txt:38
msgid ""
"The index on the shard key **cannot** be a :ref:`multikey index <index-type-"
"multikey>`."
msgstr ""

# b6176569172d452db67c5b4b2d0436dd
#: ../source/core/sharding-shard-key.txt:44
msgid "Hashed Shard Keys"
msgstr ""

# 5a4af1e576444401895d71bfc33ff3af
#: ../source/core/sharding-shard-key.txt:48
msgid ""
"Hashed shard keys use a :ref:`hashed index <index-hashed-index>` of a single"
" field as the :term:`shard key` to partition data across your sharded "
"cluster."
msgstr ""

# c8afd96e538943f3a671a1559774a435
#: ../source/core/sharding-shard-key.txt:52
msgid ""
"The field you choose as your hashed shard key should have a good "
"cardinality, or large number of different values. Hashed keys work well with"
" fields that increase monotonically like :term:`ObjectId` values or "
"timestamps."
msgstr ""

# 522549a7a8ab43b5bbd951efd0eb4984
#: ../source/core/sharding-shard-key.txt:57
msgid ""
"If you shard an empty collection using a hashed shard key, MongoDB will "
"automatically create and migrate chunks so that each shard has two chunks.  "
"You can control how many chunks MongoDB will create with the "
"``numInitialChunks`` parameter to :dbcommand:`shardCollection` or by "
"manually creating chunks on the empty collection using the "
":dbcommand:`split` command."
msgstr ""

# 56fbf99b7ff240d382c0e559ca75551b
#: ../source/core/sharding-shard-key.txt:64
msgid ""
"To shard a collection using a hashed shard key, see :doc:`/tutorial/shard-"
"collection-with-a-hashed-shard-key`."
msgstr ""

# 973fb795f46d4ebf9ad54a51f53f0e1e
#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:0
msgid "Tip"
msgstr ""

# 542255b68fd34f3484459f9e957eae9b
#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:3
msgid ""
"MongoDB automatically computes the hashes when resolving queries using "
"hashed indexes.  Applications do **not** need to compute hashes."
msgstr ""

# 6a4d2402eedc4b62b6d87d91f48ff802
#: ../source/core/sharding-shard-key.txt:70
msgid "Impacts of Shard Keys on Cluster Operations"
msgstr ""

# b0c637b7d6a74721b1ff71fecf42898d
#: ../source/core/sharding-shard-key.txt:72
msgid ""
"The shard key affects write and query performance by determining how the "
"MongoDB partitions data in the cluster and how effectively the "
":program:`mongos` instances can direct operations to the cluster. Consider "
"the following operational impacts of shard key selection:"
msgstr ""

# cb3566d11691462c92077c45efd68c97
#: ../source/core/sharding-shard-key.txt:82
msgid "Write Scaling"
msgstr ""

# 6690ee3db53441548372d93aa4d8307d
#: ../source/core/sharding-shard-key.txt:84
msgid ""
"Some possible shard keys will allow your application to take advantage of "
"the increased write capacity that the cluster can provide, while others do "
"not. Consider the following example where you shard by the values of the "
"default :term:`_id` field, which is :term:`ObjectId`."
msgstr ""

# 09ab81aad1184d7da72770febd6f4393
#: ../source/core/sharding-shard-key.txt:89
msgid ""
"MongoDB generates ``ObjectId`` values upon document creation to produce a "
"unique identifier for the object. However, the most significant bits of data"
" in this value represent a time stamp, which means that they increment in a "
"regular and predictable pattern. Even though this value has :ref:`high "
"cardinality <sharding-shard-key-cardinality>`, when using this, *any date, "
"or other monotonically increasing number* as the shard key, all insert "
"operations will be storing data into a single chunk, and therefore, a single"
" shard. As a result, the write capacity of this shard will define the "
"effective write capacity of the cluster."
msgstr ""

# c194124f43ec445faa86a568b2623063
#: ../source/core/sharding-shard-key.txt:100
msgid ""
"A shard key that increases monotonically will not hinder performance if you "
"have a very low insert rate, or if most of your write operations are "
":method:`~db.collection.update()` operations distributed through your entire"
" data set. Generally, choose shard keys that have *both* high cardinality "
"and will distribute write operations across the *entire cluster*."
msgstr ""

# 2d85bf8697d54363a5b3f649ed9ee5e1
#: ../source/core/sharding-shard-key.txt:107
msgid ""
"Typically, a computed shard key that has some amount of \"randomness,\" such"
" as ones that include a cryptographic hash (i.e. MD5 or SHA1) of other "
"content in the document, will allow the cluster to scale write operations. "
"However, random shard keys do not typically provide :ref:`query isolation "
"<sharding-shard-key-query-isolation>`, which is another important "
"characteristic of shard keys."
msgstr ""

# 5c7e1120326c4fb5a67e47c5effd6672
#: ../source/core/sharding-shard-key.txt:114
msgid ""
"MongoDB makes it possible to shard a collection on a hashed index. This can "
"greatly improve write scaling. See :doc:`/tutorial/shard-collection-with-a"
"-hashed-shard-key`."
msgstr ""

# 61cc0603dda340d1a87340ba39ba7c57
#: ../source/core/sharding-shard-key.txt:122
msgid "Querying"
msgstr ""

# 204f39bfc0fa4fc7bb5b16b80aeb4e05
#: ../source/core/sharding-shard-key.txt:124
msgid ""
"The :program:`mongos` provides an interface for applications to interact "
"with sharded clusters that hides the complexity of :term:`data partitioning "
"<partition>`. A :program:`mongos` receives queries from applications, and "
"uses metadata from the :ref:`config server <sharding-config-server>`, to "
"route queries to the :program:`mongod` instances with the appropriate data. "
"While the :program:`mongos` succeeds in making all querying operational in "
"sharded environments, the :term:`shard key` you select can have a profound "
"affect on query performance."
msgstr ""

# aa3e7929395f40ba8994d3b2063b804e
#: ../source/core/sharding-shard-key.txt:134
msgid ""
"The :doc:`/core/sharded-cluster-query-router` and :ref:`config server "
"<sharding-config-server>` sections for a more general overview of querying "
"in sharded environments."
msgstr ""

# a836eccc7ba846dda8a9b56e607e4f38
#: ../source/core/sharding-shard-key.txt:142
msgid "Query Isolation"
msgstr ""

# 57656b976a7d4cc1aa7aa1703a327e9e
#: ../source/core/sharding-shard-key.txt:144
msgid ""
"The fastest queries in a sharded environment are those that "
":program:`mongos` will route to a single shard, using the :term:`shard key` "
"and the cluster meta data from the :ref:`config server <sharding-config-"
"server>`. For queries that don't include the shard key, :program:`mongos` "
"must query all shards, wait for their response and then return the result to"
" the application. These \"scatter/gather\" queries can be long running "
"operations."
msgstr ""

# fe1493aae2b44aaab2f7c248be3bd94b
#: ../source/core/sharding-shard-key.txt:159
msgid "To select a shard key for a collection:"
msgstr ""

# a11c8926fa1b4b90a4b31ed26a34f882
#: ../source/core/sharding-shard-key.txt:161
msgid ""
"determine the most commonly included fields in queries for a given "
"application"
msgstr ""

# 07236c050b8e43c8ac5d7048644ae519
#: ../source/core/sharding-shard-key.txt:164
msgid "find which of these operations are most performance dependent."
msgstr ""

# d4299f457c474e60958cc8a036c692bc
#: ../source/core/sharding-shard-key.txt:168
msgid ""
"If this field has low cardinality (i.e not sufficiently selective) you "
"should add a second field to the shard key making a compound shard key. The "
"data may become more splittable with a compound shard key."
msgstr ""

# d7a0cf234a2449f18cafe9ab5a0f9cd3
#: ../source/core/sharding-shard-key.txt:0
msgid "See"
msgstr ""

# 15a540f96fc542d9a73f2b35b2c873ee
#: ../source/core/sharding-shard-key.txt:176
msgid ""
"In many ways, you can think of the shard key a cluster-wide unique index. "
"However, be aware that sharded systems cannot enforce cluster-wide unique "
"indexes *unless* the unique field is in the shard key. Consider the "
":doc:`/core/indexes` page for more information on indexes and compound "
"indexes."
msgstr ""

# bbccbfc22f97408284aeae6c001ad19d
#: ../source/core/sharding-shard-key.txt:183
msgid "Sorting"
msgstr ""

# 3c429acf5415414199ec4b0a2a16f59b
#: ../source/core/sharding-shard-key.txt:185
msgid ""
"In sharded systems, the :program:`mongos` performs a merge-sort of all "
"sorted query results from the shards. See :doc:`/core/sharded-cluster-query-"
"router` and :ref:`index-sort` for more information."
msgstr ""

# 6c22ae7a64904ec6ba4ed88db0b255fb
# 6c22ae7a64904ec6ba4ed88db0b255fb
# e4853fe0e09a4065939643bfc5e77830
# 1df081d51d6642749510f1d549d769ea
#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:78
#: ../source/core/sharding-shard-key.txt:138
msgid "shard key"
msgstr ""

# 6c22ae7a64904ec6ba4ed88db0b255fb
#: ../source/core/sharding-shard-key.txt:1
msgid "sharding"
msgstr ""

# e4853fe0e09a4065939643bfc5e77830
#: ../source/core/sharding-shard-key.txt:78
msgid "write scaling"
msgstr ""

# 1df081d51d6642749510f1d549d769ea
#: ../source/core/sharding-shard-key.txt:138
msgid "query isolation"
msgstr ""

#: ../source/core/sharding-shard-key.txt:152
msgid ""
"If your query includes the first component of a compound shard key [#shard-"
"key-index]_, the :program:`mongos` can route the query directly to a single "
"shard, or a small number of shards, which provides better performance. Even "
"if you query values of the shard key that reside in different chunks, the "
":program:`mongos` will route queries directly to specific shards."
msgstr ""

#~ msgid ""
#~ "If your query includes the first component of a compound shard key [#shard-"
#~ "key-index]_, the :program:`mongos` can route the query directly to a single "
#~ "shard, or a small number of shards, which provides better performance. Even "
#~ "if you query values of the shard key reside in different chunks, the "
#~ ":program:`mongos` will route queries directly to specific shards."
#~ msgstr ""
