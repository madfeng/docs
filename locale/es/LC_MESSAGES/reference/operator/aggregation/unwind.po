# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2013-12-16 23:03+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 906d2059cf784e38a61fdaad2d661914
#: ../source/reference/operator/aggregation/unwind.txt:3
msgid "$unwind (aggregation)"
msgstr ""

# 69dabb9a4f71483f9a7c1c6ff509540c
#: ../source/reference/operator/aggregation/unwind.txt:28
msgid ":pipeline:`$unwind` has the following behaviors:"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:12
msgid ""
"Deconstructs an array field from the input documents to output a document "
"for *each* element. Each output document is the input document with the "
"value of the array field replaced by the element."
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:16
msgid "The :pipeline:`$unwind` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:22
msgid ""
"To specify a field path, prefix the field name with a dollar sign ``$`` and "
"enclose in quotes."
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:26
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:30
msgid ""
"If a value in the field specified by the field path is *not* an array, "
":method:`db.collection.aggregate()` generates an error."
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:33
msgid ""
"If you specify a path for a field that does not exist in an input document, "
"the pipeline ignores the input document and will not output documents for "
"that input document."
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:37
msgid ""
"If the array holds an empty array (``[]``) in an input document, the "
"pipeline ignores the input document and will not output documents for that "
"input document."
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:42
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:44
msgid "Consider an ``inventory`` with the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:50
msgid ""
"The following aggregation uses the :pipeline:`$unwind` stage to output a "
"document for each element in the ``sizes`` array:"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:57
msgid "The operation returns the following results:"
msgstr ""

#: ../source/reference/operator/aggregation/unwind.txt:65
msgid ""
"Each document is identical to the input document except for the value of the"
" ``sizes`` field which now holds a value from the original ``sizes`` array."
msgstr ""

#~ msgid ""
#~ "Peels off the elements of an array individually, and returns a stream of "
#~ "documents. :pipeline:`$unwind` returns one document for every member of the "
#~ "unwound array within every source document. Take the following aggregation "
#~ "command:"
#~ msgstr ""

#~ msgid ""
#~ "The dollar sign (i.e. ``$``) must precede the field specification handed to "
#~ "the :pipeline:`$unwind` operator."
#~ msgstr ""

#~ msgid ""
#~ "In the above aggregation :pipeline:`$project` selects (inclusively) the "
#~ "``author``, ``title``, and ``tags`` fields, as well as the ``_id`` field "
#~ "implicitly. Then the pipeline passes the results of the projection to the "
#~ ":pipeline:`$unwind` operator, which will unwind the ``tags`` field. This "
#~ "operation may return a sequence of documents that resemble the following for"
#~ " a collection that contains one document holding a ``tags`` field with an "
#~ "array of 3 items."
#~ msgstr ""

#~ msgid ""
#~ "A single document becomes 3 documents: each document is identical except for"
#~ " the value of the ``tags`` field. Each value of ``tags`` is one of the "
#~ "values in the original \"tags\" array."
#~ msgstr ""

#~ msgid ""
#~ ":pipeline:`$unwind` is most useful in combination with :pipeline:`$group`."
#~ msgstr ""

#~ msgid ""
#~ "You may undo the effects of unwind operation with the :pipeline:`$group` "
#~ "pipeline operator."
#~ msgstr ""

#~ msgid ""
#~ "If you specify a target field for :pipeline:`$unwind` that does not exist in"
#~ " an input document, the pipeline ignores the input document, and will "
#~ "generate no result documents."
#~ msgstr ""

#~ msgid ""
#~ "If you specify a target field for :pipeline:`$unwind` that is not an array, "
#~ ":method:`db.collection.aggregate()` generates an error."
#~ msgstr ""

#~ msgid ""
#~ "If you specify a target field for :pipeline:`$unwind` that holds an empty "
#~ "array (``[]``) in an input document, the pipeline ignores the input "
#~ "document, and will generates no result documents."
#~ msgstr ""
