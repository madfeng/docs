# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 18:50+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# ad5bbbc5f8f54b43b79fc4b8832b5d40
#: ../source/reference/operator/aggregation/out.txt:3
msgid "$out (aggregation)"
msgstr ""

# 4ecefe31c87c41888c67fe4179f21d6c
#: ../source/reference/operator/aggregation/out.txt:10
msgid "Definition"
msgstr ""

# ff2debe9646047259ea3ad681bde09ab
#: ../source/reference/operator/aggregation/out.txt:30
msgid ""
"You cannot specify a sharded collection as the output collection. The input "
"collection for a pipeline can be sharded."
msgstr ""

# 8534eeebb74f4ee5a2d4ca63be380759
#: ../source/reference/operator/aggregation/out.txt:33
msgid ""
"The :pipeline:`$out` operator cannot write results to a :doc:`capped "
"collection </core/capped-collections>`."
msgstr ""

# 36c8260e9d2b463588265e3dc96647af
#: ../source/reference/operator/aggregation/out.txt:37
msgid "Behaviors"
msgstr ""

# 46ef08d669924d31ae4f22d7b9097eed
#: ../source/reference/operator/aggregation/out.txt:40
msgid "Create New Collection"
msgstr ""

# d9a012ca87c944b79d5003901a21fb75
#: ../source/reference/operator/aggregation/out.txt:42
msgid ""
"The :pipeline:`$out` operation creates a new collection in the current "
"database if one does not already exist. The collection is not visible until "
"the aggregation completes. If the aggregation fails, MongoDB does not create"
" the collection."
msgstr ""

# 6918be679e904331ba65601ff2f08987
#: ../source/reference/operator/aggregation/out.txt:48
msgid "Replace Existing Collection"
msgstr ""

# 309fcd43b6604e169cc381921b8fbe82
#: ../source/reference/operator/aggregation/out.txt:50
msgid ""
"If the collection specified by the :pipeline:`$out` operation already "
"exists, then upon completion of the aggregation, the :pipeline:`$out` stage "
"atomically replaces the existing collection with the new results collection."
" The :pipeline:`$out` operation does not change any indexes that existed on "
"the previous collection. If the aggregation fails, the :pipeline:`$out` "
"operation makes no changes to the pre-existing collection."
msgstr ""

# 25c4cab86d8e4afa82d12182689a239e
#: ../source/reference/operator/aggregation/out.txt:59
msgid "Index Constraints"
msgstr ""

# 335bc0f451a942b3b01b56e1f0b68615
#: ../source/reference/operator/aggregation/out.txt:61
msgid ""
"The pipeline will fail to complete if the documents produced by the pipeline"
" would violate any unique indexes, including the index on the ``_id`` field "
"of the original output collection."
msgstr ""

# d0ba5ecef6e141119f0314f28f6768ba
#: ../source/reference/operator/aggregation/out.txt:66
msgid "Example"
msgstr ""

# ec16bad1b62e4061b8c7fc36bff5b208
#: ../source/reference/operator/aggregation/out.txt:68
msgid "A collection ``books`` contains the following documents:"
msgstr ""

# 8490cda31cb84e5d9c685594c9c1d49c
#: ../source/reference/operator/aggregation/out.txt:78
msgid ""
"The following aggregation operation pivots the data in the ``books`` "
"collection to have titles grouped by authors and then writes the results to "
"the ``authors`` collection."
msgstr ""

# 5211c35ef0684bbf8a7493e7eae60348
#: ../source/reference/operator/aggregation/out.txt:89
msgid ""
"After the operation, the ``authors`` collection contains the following "
"documents:"
msgstr ""

#: ../source/reference/operator/aggregation/out.txt:14
msgid ""
"Takes the documents returned by the aggregation pipeline and writes them to "
"a specified collection. The :pipeline:`$out` operator must be *the last "
"stage* in the pipeline. The :pipeline:`$out` operator lets the aggregation "
"framework return result sets of any size."
msgstr ""

#: ../source/reference/operator/aggregation/out.txt:19
msgid "The :pipeline:`$out` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/out.txt:25
msgid ""
":pipeline:`$out` takes a string that specifies the output collection name."
msgstr ""

#~ msgid ""
#~ "Takes the documents returned by the aggregation pipeline and writes them to "
#~ "a specified collection. The :pipeline:`$out` operator lets the aggregation "
#~ "framework return result sets of any size. The :pipeline:`$out` operator must"
#~ " be *the last stage* in the pipeline."
#~ msgstr ""

#~ msgid ""
#~ "The command has the following syntax, where ``<output-collection>`` is "
#~ "collection that will hold the output of the aggregation operation. "
#~ ":pipeline:`$out` is only permissible at the end of the pipeline:"
#~ msgstr ""
