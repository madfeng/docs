# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2013-12-16 23:08+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 693ebeac9b7b4392a018697cf08cb7f5
#: ../source/reference/operator/query/nearSphere.txt:3
msgid "$nearSphere"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:9
msgid ""
"Specifies a point for which a :term:`geospatial` query returns the documents"
" from nearest to farthest. MongoDB calculates distances for "
":query:`$nearSphere` using spherical geometry."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:13
msgid ""
"The :query:`$nearSphere` operator requires a geospatial index and can use "
"either :doc:`2dsphere </core/2dsphere>` index or :doc:`2d </core/2d>` index "
"for location data defined as GeoJSON points or legacy coordinate pairs. To "
"use a :doc:`2d </core/2d>` index on :ref:`GeoJSON points <geojson-point>`, "
"create the index on the ``coordinates`` field of the GeoJSON object."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:20
msgid ""
"The :query:`$nearSphere` operator can specify either a :term:`GeoJSON` point"
" or legacy coordinate point."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:23
msgid "To specify a :term:`GeoJSON` point, use the following syntax:"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:38
#: ../source/reference/operator/query/nearSphere.txt:58
msgid ""
"The *optional* :query:`$minDistance` is available only if the query uses the"
" :doc:`2dsphere </core/2dsphere>` index. :query:`$minDistance` limits the "
"results to those documents that are *at least* the specified distance from "
"the center point."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:45
#: ../source/reference/operator/query/nearSphere.txt:65
msgid "The *optional* :query:`$maxDistance` is available for either index."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:47
msgid "To specify a point using legacy coordinates, use the following syntax:"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:67
msgid ""
"If you use longitude and latitude for legacy coordinates, specify the "
"longitude first, then latitude."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:71
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:73
msgid ""
"Queries that use a :doc:`2d </core/2d>` index return at most 100 documents."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:77
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:80
msgid "Specify Center Point Using GeoJSON"
msgstr ""

#: ../source/includes/example-nearSphere-minDistance.rst:1
msgid ""
"Consider a collection ``places`` that contains documents with a ``location``"
" field and has a :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/includes/example-nearSphere-minDistance.rst:4
msgid ""
"Then, the following example returns whose ``location`` is at least ``1000`` "
"meters from and at most ``5000`` meters from the specified point, ordered "
"from nearest to farthest:"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:85
msgid "Specify Center Point Using Legacy Coordinates"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:88
msgid "``2d`` Index"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:90
msgid ""
"Consider a collection ``legacyPlaces`` that contains documents with legacy "
"coordinates pairs in the ``location`` field and has a :doc:`2d </core/2d>` "
"index."
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:94
msgid ""
"Then, the following example returns up to 100 documents whose ``location`` "
"is at most ``0.10`` radians from the specified point, ordered from nearest "
"to farthest:"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:105
msgid "``2dsphere`` Index"
msgstr ""

#: ../source/reference/operator/query/nearSphere.txt:107
msgid ""
"If the collection has a ``2dsphere`` index instead, you can also specify the"
" optional :query:`$minDistance` specification. For example, the following "
"example returns the documents whose ``location`` is at least ``0.0004`` "
"radians from the specified point, ordered from nearest to farthest:"
msgstr ""

#~ msgid ""
#~ "Specifies a point for which a :term:`geospatial` query returns the closest "
#~ "documents first. The query sorts the documents from nearest to farthest. "
#~ "MongoDB calculates distances for :query:`$nearSphere` using spherical "
#~ "geometry."
#~ msgstr ""

#~ msgid ""
#~ "The :query:`$nearSphere` operator queries for points defined by either "
#~ ":term:`GeoJSON` objects or legacy coordinate pairs."
#~ msgstr ""

#~ msgid ""
#~ "The optional :query:`$maxDistance` operator limits a :query:`$nearSphere` "
#~ "query to return only those documents that fall within a maximum distance of "
#~ "a point. If you use :query:`$maxDistance` on GeoJSON points, the distance is"
#~ " measured in meters. If you use :query:`$maxDistance` on legacy coordinate "
#~ "pairs, the distance is measured in radians."
#~ msgstr ""

#~ msgid ""
#~ "The :query:`$nearSphere` operator requires a geospatial index. The "
#~ "``2dsphere`` and ``2d`` indexes both support :query:`$nearSphere` with both "
#~ "legacy coordinate pairs and GeoJSON points. Queries that use a ``2d`` index "
#~ "return a at most 100 documents."
#~ msgstr ""

#~ msgid "If you use longitude and latitude, specify **longitude first**."
#~ msgstr ""

#~ msgid "For queries on GeoJSON data, use the following syntax:"
#~ msgstr ""

#~ msgid "For queries on legacy coordinate pairs, use the following syntax:"
#~ msgstr ""

#~ msgid ""
#~ "The following example selects the 100 documents with legacy coordinates "
#~ "pairs nearest to ``[ 40 , 5 ]``, as calculated by spherical geometry:"
#~ msgstr ""
