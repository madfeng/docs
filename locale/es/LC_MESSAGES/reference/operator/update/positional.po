# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 18:52+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 2a7ad18fcaea46ce9abd1d4b48559bcf
#: ../source/reference/operator/update/positional.txt:3
msgid "\\$ (update)"
msgstr ""

# 0cb61a7c07734f539e06d1e992586d83
#: ../source/reference/operator/update/positional.txt:8
msgid "Definition"
msgstr ""

# aff78c99d6c84165882b3b3170b46984
#: ../source/reference/operator/update/positional.txt:12
msgid "*Syntax*: ``{ \"<array>.$\" : value }``"
msgstr ""

# f044f4c239c649c4801fb370054e07be
#: ../source/reference/operator/update/positional.txt:14
msgid ""
"The positional :operator:`$` operator identifies an element in an ``array`` "
"field to update without explicitly specifying the position of the element in"
" the array. To project, or return, an array element from a read operation, "
"see the :projection:`$` projection operator."
msgstr ""

# 62e19a1a17a64c9293003fe1fb3f79a2
#: ../source/reference/operator/update/positional.txt:20
msgid "When used with the :method:`~db.collection.update()` method,"
msgstr ""

# b14221f98aff4d83b00c5ac218bff19a
#: ../source/reference/operator/update/positional.txt:23
msgid ""
"the positional :operator:`$` operator acts as a placeholder for the "
"**first** element that matches the :ref:`query document <read-operations-"
"query-document>`, and"
msgstr ""

# 183f2a719624411aaba134011354e7ac
#: ../source/reference/operator/update/positional.txt:27
msgid "the ``array`` field **must** appear as part of the ``query document``."
msgstr ""

# d2af2d3bf1a44f3a989aaac1fe76d43d
#: ../source/reference/operator/update/positional.txt:35
msgid "Behavior"
msgstr ""

# d1c75c48813e41ddbc50f34d235fd6fa
#: ../source/reference/operator/update/positional.txt:38
msgid "Upserts"
msgstr ""

# c258adc171334236b2cd3be8fbc01afb
#: ../source/reference/operator/update/positional.txt:40
msgid ""
"Do not use the positional operator :operator:`$` with :term:`upsert` "
"operations because inserts will use the ``$`` as a field name in the "
"inserted document."
msgstr ""

# 483bd43b018a446db177c408941ca45e
#: ../source/reference/operator/update/positional.txt:45
msgid "Nested Arrays"
msgstr ""

# cd72f0302bd54b778813aff9d1769a2e
#: ../source/reference/operator/update/positional.txt:47
msgid ""
"The positional :operator:`$` operator cannot be used for queries which "
"traverse more than one array, such as queries that traverse arrays nested "
"within other arrays, because the replacement for the :operator:`$` "
"placeholder is a single value"
msgstr ""

# 0f806c791225436e8632b6fc3c4b5d7f
#: ../source/reference/operator/update/positional.txt:53
msgid "Unsets"
msgstr ""

# 94cac100ab984710801e51188eaedca9
#: ../source/reference/operator/update/positional.txt:55
msgid ""
"When used with the :update:`$unset` operator, the positional :operator:`$` "
"operator does not remove the matching element from the array but rather sets"
" it to ``null``."
msgstr ""

# c7f5a18348e54ec2a0dcc55d2d6f5198
#: ../source/reference/operator/update/positional.txt:60
msgid "Negations"
msgstr ""

# ba7a523e22714c5489d8ca71dd00672a
#: ../source/reference/operator/update/positional.txt:64
msgid ""
"If the query matches the array using a negation operator, such as "
":query:`$ne`, :query:`$not`, or :query:`$nin`, then you cannot use the "
"positional operator to update values from this array."
msgstr ""

# f2671ef9efef43da897b09717c025431
#: ../source/reference/operator/update/positional.txt:68
msgid ""
"However, if the negated portion of the query is inside of an "
":query:`$elemMatch` expression, then you *can* use the positional operator "
"to update this field."
msgstr ""

# 76848ae6c2a04eaa8ddac8743d399093
#: ../source/reference/operator/update/positional.txt:73
msgid "Examples"
msgstr ""

# cd8af6d2dae34c9b8b469927a7a60238
#: ../source/reference/operator/update/positional.txt:76
msgid "Update Values in an Array"
msgstr ""

# f86d96fe541143d29604e399781a13dd
#: ../source/reference/operator/update/positional.txt:78
msgid "Consider a collection ``students`` with the following documents:"
msgstr ""

# 2690d8a5cc9b488f96b6c9bd9dd6c126
#: ../source/reference/operator/update/positional.txt:86
msgid ""
"To update ``80`` to ``82`` in the ``grades`` array in the first document, "
"use the positional :operator:`$` operator if you do not know the position of"
" the element in the array:"
msgstr ""

# ed99e99542f64ab59245d2cbde4a699b
#: ../source/reference/operator/update/positional.txt:94
msgid ""
"Remember that the positional :operator:`$` operator acts as a placeholder "
"for the **first match** of the update :ref:`query document <read-operations-"
"query-document>`."
msgstr ""

# 70cf947f9699411d92d1cbfcd01590cf
#: ../source/reference/operator/update/positional.txt:99
msgid "Update Documents in an Array"
msgstr ""

# 8467bec48a0348439ba8cbdc1145dfbd
#: ../source/reference/operator/update/positional.txt:101
msgid ""
"The positional :operator:`$` operator facilitates updates to arrays that "
"contain embedded documents. Use the positional :operator:`$` operator to "
"access the fields in the embedded documents with the :ref:`dot notation "
"<document-dot-notation>` on the :operator:`$` operator."
msgstr ""

# a98fbfc5fcc444549d8a7a8e41b9e9a7
#: ../source/reference/operator/update/positional.txt:135
msgid ""
"Consider the following document in the ``students`` collection whose "
"``grades`` field value is an array of embedded documents:"
msgstr ""

# 5e046c37f7a2453eb2dbfbcde8d0c0fd
#: ../source/reference/operator/update/positional.txt:120
msgid ""
"Use the positional :operator:`$` operator to update the value of the ``std``"
" field in the embedded document with the ``grade`` of ``85``:"
msgstr ""

# 6d37eb42bf5c4bf09ff8228eae251cd5
#: ../source/reference/operator/update/positional.txt:166
msgid "Further Reading"
msgstr ""

#: ../source/reference/operator/update/positional.txt:111
msgid ""
"Consider the following document in the ``students`` collection whose "
"``grades`` element value is an array of embedded documents:"
msgstr ""

#: ../source/reference/operator/update/positional.txt:130
msgid "Update Embedded Documents Using Multiple Field Matches"
msgstr ""

#: ../source/reference/operator/update/positional.txt:132
msgid ""
"The :operator:`$` operator can update the first array element that matches "
"multiple query criteria specified with the :query:`$elemMatch()` operator."
msgstr ""

#: ../source/reference/operator/update/positional.txt:144
msgid ""
"In the example below, the :operator:`$` operator updates the value of the "
"``std`` field in the first embedded document that has ``grade`` field with a"
" value less than or equal to ``90`` and a ``mean`` field with a value "
"greater than ``80``:"
msgstr ""

#: ../source/reference/operator/update/positional.txt:156
msgid ""
"This operation updates the first embedded document that matches the "
"criteria, namely the second embedded document in the array:"
msgstr ""

#: ../source/reference/operator/update/positional.txt:168
msgid ""
":method:`~db.collection.update()`, :query:`$elemMatch()`, :update:`$set` and"
" :update:`$unset`"
msgstr ""

#~ msgid ":method:`~db.collection.update()`, :update:`$set` and :update:`$unset`"
#~ msgstr ""
