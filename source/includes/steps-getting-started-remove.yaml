title:
  text: Remove documents with ``category`` field equal to ``"houseware"``.
  character: "`"
stepnum: 1
ref: remove-matching-documents
action:
  - pre: |
      Call :method:`~db.collection.remove` on the ``inventory``
      collection, specifying ``{ "category" : "houseware" }`` as the
      remove condition.
    language: javascript
    code: |
      db.inventory.remove( { "category" : "houseware" } )
  - pre: |
      The remove operation returns a :method:`WriteResult` object which
      contains the status of the operation. Successful operation should
      return the following document.
    language: javascript
    code: |
      WriteResult({ "nRemoved" : 2 })
    post: |
      The :data:`~WriteResult.nRemoved` field specifies the number of
      documents removed, in this case ``2``.
---
title:
  text: Limit removal to a single document using ``justOne`` option.
  character: "`"
stepnum: 2
pre: |
  By default, the :method:`~db.collection.remove()` method removes all
  documents that match the remove condition. Use the ``justOne`` option
  to limit the remove operation to only one of the matching documents.
ref: remove-one-document
action:
  - pre: |
      For example, multiple documents have ``category`` field equal to
      ``"clothing"``. The following operation only removes a single
      document even though multiple documents match.
    language: javascript
    code: |
      db.inventory.remove( { category: "clothing" },  { justOne: true } )
  - pre: |
      The remove operation returns a :method:`WriteResult` object which
      contains the status of the operation. Successful operation should
      return the following document.
    language: javascript
    code: |
      WriteResult({ "nRemoved" : 1 })
post: |
  The :data:`~WriteResult.nRemoved` field specifies the number of
  documents removed, in this case ``1``.

  A query of the ``inventory`` collection shows that three documents
  with ``category`` equal to ``"clothing"`` still remain.
---
title:
  text: Remove all documents.
  character: "`"
stepnum: 3
ref: remove-all-documents
action:
  - pre: |
      To remove all documents from a collection, pass an empty
      conditions document ``{}`` to the
      :method:`~db.collection.remove()` method.
    language: javascript
    code: |
      db.inventory.remove( { } )
  - pre: |
      The remove operation returns a :method:`WriteResult` object which
      contains the status of the operation. Successful operation should
      return the following document.
    language: javascript
    code: |
       WriteResult({ "nRemoved" : 3 })
post: |
  The :data:`~WriteResult.nRemoved` field specifies the number of
  documents removed, in this case ``3``.
...