title:
  text: Query for all documents in a collection.
  character: "`"
stepnum: 1
ref: query-all-documents
action:
  - pre: |
      Query for all documents in the ``inventory`` collection.
    language: javascript
    code: |
       db.inventory.find()
    post: |
       The query is equivalent to ``db.inventory.find({ })`` which calls
       the method with an empty conditions document.
  - pre: |
      The result set contains all documents in the ``inventory`` collection.
    language: javascript
    code: |
       { "_id" : ObjectId("53d98f133bb604791249ca99"), "item" : "ABC1", "details" : { "model" : "14Q3", "manufacturer" : "XYZ Company" }, "stock" : [ { "size" : "S", "qty" : 25 }, { "size" : "M", "qty" : 50 } ], "category" : "clothing" }
       { "_id" : ObjectId("53d98fc93bb604791249ca9a"), "item" : "ABC2", "details" : { "model" : "14Q3", "manufacturer" : "M1 Corporation" }, "stock" : [ { "size" : "M", "qty" : 50 } ], "category" : "clothing" }
       { "_id" : ObjectId("53d98fc93bb604791249ca9b"), "item" : "MNO2", "details" : { "model" : "14Q3", "manufacturer" : "ABC Company" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "M", "qty" : 5 }, { "size" : "L", "qty" : 1 } ], "category" : "clothing" }
       { "_id" : ObjectId("53d98fc93bb604791249ca9c"), "item" : "IJK2", "details" : { "model" : "14Q2", "manufacturer" : "M5 Corporation" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "L", "qty" : 1 } ], "category" : "houseware" }
       { "_id" : ObjectId("53d990403bb604791249ca9d"), "item" : "BE10", "details" : { "model" : "14Q2", "manufacturer" : "XYZ Company" }, "stock" : [ { "size" : "L", "qty" : 5 } ], "category" : "clothing" }
       { "_id" : ObjectId("53d990403bb604791249ca9e"), "item" : "ZYT1", "details" : { "model" : "14Q1", "manufacturer" : "ABC Company" }, "stock" : [ { "size" : "S", "qty" : 5 }, { "size" : "M", "qty" : 5 } ], "category" : "houseware" }
---
title:
  text: Return sorted results.
  character: "`"
stepnum: 2
ref: return-sorted-results
pre: |
  To specify an order for the result set, append the
  :method:`~cursor.sort()` method to the query. Pass to
  :method:`~cursor.sort()` a document which contains the field(s) to
  sort by and the corresponding sort type, e.g. ``1`` for ascending and
  ``-1`` for descending.

  For example, to return all documents in the ``inventory`` collection,
  sorted by the ``item`` field in ascending order, and then by the
  ``category`` field in descending order, issue the following:
action:
  language: javascript
  code: |
     db.inventory.find().sort( { item: 1, category: -1 } )
...
