object:
  name: geoNear
  type: command
field:
  optional: false
  type: field
name: geoNear
type: string
position: 1
description: |
  The collection to query.
---
object:
  name: geoNear
  type: command
field:
  optional: false
  type: field
name: near
type:
  - GeoJSON point
  - :term:`legacy coordinate pairs <legacy coordinate pairs>`
position: 2
description: |
  The point for which to find the closest documents.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: limit
type: number
position: 3
description: |
  The maximum number of documents to return. The default value is ``100``.
  See also the ``num`` option.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: num
type: number
position: 4
description: |
  The ``num`` option provides the same function as the ``limit`` option.
  Both define the maximum number of documents to return. If both options
  are included, the ``num`` value overrides the ``limit`` value.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: minDistance
type: number
position: 5
description: |
  The minimum distance from the center point that the documents *must*
  be. MongoDB filters the results to those documents that are *at
  least* the specified distance from the center point.

  Only available for use with :doc:`2dsphere </core/2dsphere>` index.

  Specify the distance in meters for :term:`GeoJSON` data and in
  radians for :term:`legacy coordinate pairs <legacy coordinate pairs>`.

  .. versionadded:: 2.6
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: maxDistance
type: number
position: 6
description: |
  The maximum distance from the center point that the documents *can*
  be. MongoDB limits the results to those documents that fall within
  the specified distance from the center point.

  Specify the distance in meters for :term:`GeoJSON` data and in
  radians for :term:`legacy coordinate pairs <legacy coordinate pairs>`.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: query
type: document
position: 7
description: |
  Limits the results to the documents that match the query. The query
  syntax is the usual MongoDB :ref:`read operation query
  <read-operations-query-argument>` syntax. 

  .. include:: /includes/fact-geoNear-restrict-near-in-query.rst
---
object:
  name: geoNear
  type: command
field:
  optional: false
  type: field
name: spherical
type: Boolean
position: 8
description: |
  Required *if* using a :doc:`2dsphere </core/2dsphere>` index. For use
  with ``2dsphere`` indexes, ``spherical`` must be ``true``.

  The default value is ``false``.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: distanceMultiplier
type: number
position: 9
description: |
  The factor to multiply all distances returned by the query. For
  example, use the ``distanceMultiplier`` to convert radians, as
  returned by a spherical query, to kilometers by multiplying by the
  radius of the Earth.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: includeLocs
type: Boolean
position: 10
description: |
  If this is ``true``, the query
  returns the location of the matching documents in the results. The
  default is ``false``. This option is useful when a location field
  contains multiple locations. To specify a field within a
  subdocument, use :term:`dot notation`.
---
object:
  name: geoNear
  type: command
field:
  optional: true
  type: field
name: uniqueDocs
type: Boolean
position: 11
description: |
  If this value is ``true``, the query returns a matching document once,
  even if more than one of the document's location fields match the
  query.

  .. include:: /includes/deprecation-uniqueDocs.rst

...
