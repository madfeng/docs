========================
$dayOfWeek (aggregation)
========================

.. default-domain:: mongodb

.. expression:: $dayOfWeek

   Returns the day of the week for a date as a number between 1
   (Sunday) and 7 (Saturday).

   The :expression:`$dayOfWeek` expression has the following syntax:

   .. code-block:: javascript

      { $dayOfWeek: <expression> }

   The argument can be any :ref:`expression <aggregation-expressions>`
   as long as it resolves to a date. For more information on
   expressions, see :ref:`aggregation-expressions`.

Example
-------

Consider a ``sales`` collection with the following document:

.. code-block:: javascript

   { "_id" : 1, "item" : "abc", "price" : 10, "quantity" : 2, "date" : ISODate("2014-01-01T08:15:39.736Z") }

The following aggregation uses the :expression:`$dayOfWeek` and other
date operators to break down the ``date`` field:

.. code-block:: javascript
   :emphasize-lines: 14

   db.sales.aggregate(
      [
        {
          $project:
            {
              year: { $year: "$date" },
              month: { $month: "$date" },
              day: { $dayOfMonth: "$date" },
              hour: { $hour: "$date" },
              minutes: { $minute: "$date" },
              seconds: { $second: "$date" },
              milliseconds: { $millisecond: "$date" },
              dayOfYear: { $dayOfYear: "$date" },
              dayOfWeek: { $dayOfWeek: "$date" },
              week: { $week: "$date" }
            }
        }
      ]
   )

The operation returns the following result:

.. code-block:: javascript

   {
     "_id" : 1,
     "year" : 2014,
     "month" : 1,
     "day" : 1,
     "hour" : 8,
     "minutes" : 15,
     "seconds" : 39,
     "milliseconds" : 736,
     "dayOfYear" : 1,
     "dayOfWeek" : 4,
     "week" : 0
   }
